// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OktaAuthentication Okta authentication settings.
//
// swagger:model OktaAuthentication
type OktaAuthentication struct {

	// if use_org_authorization_server is set to false, use this field to specify id of custom authorization server
	// if not provided 'default' will be used
	AuthorizationServerID string `json:"authorization_server_id,omitempty"`

	// domain
	Domain string `json:"domain,omitempty"`

	// flag if additional user data should be fetched from userinfo endpoint
	GetUserInfo bool `json:"get_user_info,omitempty"`

	// redirect url
	RedirectURL string `json:"redirect_url,omitempty"`

	// list of scopes that client will request
	Scopes []string `json:"scopes"`

	// if set to true, build-in authorization server will be used
	UseOrgAuthorizationServer bool `json:"use_org_authorization_server,omitempty"`

	// supervisor client
	SupervisorClient *OktaSupervisorClient `json:"supervisor_client,omitempty"`
}

// Validate validates this okta authentication
func (m *OktaAuthentication) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSupervisorClient(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OktaAuthentication) validateSupervisorClient(formats strfmt.Registry) error {

	if swag.IsZero(m.SupervisorClient) { // not required
		return nil
	}

	if m.SupervisorClient != nil {
		if err := m.SupervisorClient.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("supervisor_client")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OktaAuthentication) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OktaAuthentication) UnmarshalBinary(b []byte) error {
	var res OktaAuthentication
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
