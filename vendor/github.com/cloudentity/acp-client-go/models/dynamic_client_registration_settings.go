// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DynamicClientRegistrationSettings dynamic client registration settings
//
// swagger:model DynamicClientRegistrationSettings
type DynamicClientRegistrationSettings struct {

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// initial access token
	InitialAccessToken *InitialAccessTokenSettings `json:"initial_access_token,omitempty"`

	// software statement
	SoftwareStatement *SoftwareStatementSettings `json:"software_statement,omitempty"`
}

// Validate validates this dynamic client registration settings
func (m *DynamicClientRegistrationSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInitialAccessToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSoftwareStatement(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DynamicClientRegistrationSettings) validateInitialAccessToken(formats strfmt.Registry) error {

	if swag.IsZero(m.InitialAccessToken) { // not required
		return nil
	}

	if m.InitialAccessToken != nil {
		if err := m.InitialAccessToken.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("initial_access_token")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicClientRegistrationSettings) validateSoftwareStatement(formats strfmt.Registry) error {

	if swag.IsZero(m.SoftwareStatement) { // not required
		return nil
	}

	if m.SoftwareStatement != nil {
		if err := m.SoftwareStatement.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("software_statement")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DynamicClientRegistrationSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DynamicClientRegistrationSettings) UnmarshalBinary(b []byte) error {
	var res DynamicClientRegistrationSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
