// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetEnvironmentReader is a Reader for the GetEnvironment structure.
type GetEnvironmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEnvironmentOK creates a GetEnvironmentOK with default headers values
func NewGetEnvironmentOK() *GetEnvironmentOK {
	return &GetEnvironmentOK{}
}

/*GetEnvironmentOK handles this case with default header values.

Environment
*/
type GetEnvironmentOK struct {
	Payload *models.Environment
}

func (o *GetEnvironmentOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/environment][%d] getEnvironmentOK  %+v", 200, o.Payload)
}

func (o *GetEnvironmentOK) GetPayload() *models.Environment {
	return o.Payload
}

func (o *GetEnvironmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Environment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentUnauthorized creates a GetEnvironmentUnauthorized with default headers values
func NewGetEnvironmentUnauthorized() *GetEnvironmentUnauthorized {
	return &GetEnvironmentUnauthorized{}
}

/*GetEnvironmentUnauthorized handles this case with default header values.

HttpError
*/
type GetEnvironmentUnauthorized struct {
	Payload *models.Error
}

func (o *GetEnvironmentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/environment][%d] getEnvironmentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetEnvironmentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEnvironmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentForbidden creates a GetEnvironmentForbidden with default headers values
func NewGetEnvironmentForbidden() *GetEnvironmentForbidden {
	return &GetEnvironmentForbidden{}
}

/*GetEnvironmentForbidden handles this case with default header values.

HttpError
*/
type GetEnvironmentForbidden struct {
	Payload *models.Error
}

func (o *GetEnvironmentForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/environment][%d] getEnvironmentForbidden  %+v", 403, o.Payload)
}

func (o *GetEnvironmentForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetEnvironmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
