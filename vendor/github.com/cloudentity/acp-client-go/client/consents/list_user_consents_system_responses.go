// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListUserConsentsSystemReader is a Reader for the ListUserConsentsSystem structure.
type ListUserConsentsSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserConsentsSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserConsentsSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserConsentsSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserConsentsSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserConsentsSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListUserConsentsSystemOK creates a ListUserConsentsSystemOK with default headers values
func NewListUserConsentsSystemOK() *ListUserConsentsSystemOK {
	return &ListUserConsentsSystemOK{}
}

/*ListUserConsentsSystemOK handles this case with default header values.

ConsentsWithGrants
*/
type ListUserConsentsSystemOK struct {
	Payload *models.ConsentsWithGrants
}

func (o *ListUserConsentsSystemOK) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/consents][%d] listUserConsentsSystemOK  %+v", 200, o.Payload)
}

func (o *ListUserConsentsSystemOK) GetPayload() *models.ConsentsWithGrants {
	return o.Payload
}

func (o *ListUserConsentsSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsWithGrants)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemUnauthorized creates a ListUserConsentsSystemUnauthorized with default headers values
func NewListUserConsentsSystemUnauthorized() *ListUserConsentsSystemUnauthorized {
	return &ListUserConsentsSystemUnauthorized{}
}

/*ListUserConsentsSystemUnauthorized handles this case with default header values.

HttpError
*/
type ListUserConsentsSystemUnauthorized struct {
	Payload *models.Error
}

func (o *ListUserConsentsSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/consents][%d] listUserConsentsSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserConsentsSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemForbidden creates a ListUserConsentsSystemForbidden with default headers values
func NewListUserConsentsSystemForbidden() *ListUserConsentsSystemForbidden {
	return &ListUserConsentsSystemForbidden{}
}

/*ListUserConsentsSystemForbidden handles this case with default header values.

HttpError
*/
type ListUserConsentsSystemForbidden struct {
	Payload *models.Error
}

func (o *ListUserConsentsSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/consents][%d] listUserConsentsSystemForbidden  %+v", 403, o.Payload)
}

func (o *ListUserConsentsSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemNotFound creates a ListUserConsentsSystemNotFound with default headers values
func NewListUserConsentsSystemNotFound() *ListUserConsentsSystemNotFound {
	return &ListUserConsentsSystemNotFound{}
}

/*ListUserConsentsSystemNotFound handles this case with default header values.

HttpError
*/
type ListUserConsentsSystemNotFound struct {
	Payload *models.Error
}

func (o *ListUserConsentsSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/consents][%d] listUserConsentsSystemNotFound  %+v", 404, o.Payload)
}

func (o *ListUserConsentsSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
