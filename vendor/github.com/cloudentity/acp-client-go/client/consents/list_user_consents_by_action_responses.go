// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListUserConsentsByActionReader is a Reader for the ListUserConsentsByAction structure.
type ListUserConsentsByActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserConsentsByActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserConsentsByActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserConsentsByActionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserConsentsByActionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserConsentsByActionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListUserConsentsByActionOK creates a ListUserConsentsByActionOK with default headers values
func NewListUserConsentsByActionOK() *ListUserConsentsByActionOK {
	return &ListUserConsentsByActionOK{}
}

/*ListUserConsentsByActionOK handles this case with default header values.

ConsentsWithGrants
*/
type ListUserConsentsByActionOK struct {
	Payload *models.ConsentsWithGrants
}

func (o *ListUserConsentsByActionOK) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/consents/{action}][%d] listUserConsentsByActionOK  %+v", 200, o.Payload)
}

func (o *ListUserConsentsByActionOK) GetPayload() *models.ConsentsWithGrants {
	return o.Payload
}

func (o *ListUserConsentsByActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsWithGrants)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionUnauthorized creates a ListUserConsentsByActionUnauthorized with default headers values
func NewListUserConsentsByActionUnauthorized() *ListUserConsentsByActionUnauthorized {
	return &ListUserConsentsByActionUnauthorized{}
}

/*ListUserConsentsByActionUnauthorized handles this case with default header values.

HttpError
*/
type ListUserConsentsByActionUnauthorized struct {
	Payload *models.Error
}

func (o *ListUserConsentsByActionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/consents/{action}][%d] listUserConsentsByActionUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserConsentsByActionUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionForbidden creates a ListUserConsentsByActionForbidden with default headers values
func NewListUserConsentsByActionForbidden() *ListUserConsentsByActionForbidden {
	return &ListUserConsentsByActionForbidden{}
}

/*ListUserConsentsByActionForbidden handles this case with default header values.

HttpError
*/
type ListUserConsentsByActionForbidden struct {
	Payload *models.Error
}

func (o *ListUserConsentsByActionForbidden) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/consents/{action}][%d] listUserConsentsByActionForbidden  %+v", 403, o.Payload)
}

func (o *ListUserConsentsByActionForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionNotFound creates a ListUserConsentsByActionNotFound with default headers values
func NewListUserConsentsByActionNotFound() *ListUserConsentsByActionNotFound {
	return &ListUserConsentsByActionNotFound{}
}

/*ListUserConsentsByActionNotFound handles this case with default header values.

HttpError
*/
type ListUserConsentsByActionNotFound struct {
	Payload *models.Error
}

func (o *ListUserConsentsByActionNotFound) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/consents/{action}][%d] listUserConsentsByActionNotFound  %+v", 404, o.Payload)
}

func (o *ListUserConsentsByActionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
