// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListPrivacyLedgerEventsReader is a Reader for the ListPrivacyLedgerEvents structure.
type ListPrivacyLedgerEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPrivacyLedgerEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPrivacyLedgerEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPrivacyLedgerEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPrivacyLedgerEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPrivacyLedgerEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListPrivacyLedgerEventsOK creates a ListPrivacyLedgerEventsOK with default headers values
func NewListPrivacyLedgerEventsOK() *ListPrivacyLedgerEventsOK {
	return &ListPrivacyLedgerEventsOK{}
}

/*ListPrivacyLedgerEventsOK handles this case with default header values.

PrivacyLedgerEvents
*/
type ListPrivacyLedgerEventsOK struct {
	Payload *models.PrivacyLedgerEvents
}

func (o *ListPrivacyLedgerEventsOK) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/events][%d] listPrivacyLedgerEventsOK  %+v", 200, o.Payload)
}

func (o *ListPrivacyLedgerEventsOK) GetPayload() *models.PrivacyLedgerEvents {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrivacyLedgerEvents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsUnauthorized creates a ListPrivacyLedgerEventsUnauthorized with default headers values
func NewListPrivacyLedgerEventsUnauthorized() *ListPrivacyLedgerEventsUnauthorized {
	return &ListPrivacyLedgerEventsUnauthorized{}
}

/*ListPrivacyLedgerEventsUnauthorized handles this case with default header values.

HttpError
*/
type ListPrivacyLedgerEventsUnauthorized struct {
	Payload *models.Error
}

func (o *ListPrivacyLedgerEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/events][%d] listPrivacyLedgerEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPrivacyLedgerEventsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsForbidden creates a ListPrivacyLedgerEventsForbidden with default headers values
func NewListPrivacyLedgerEventsForbidden() *ListPrivacyLedgerEventsForbidden {
	return &ListPrivacyLedgerEventsForbidden{}
}

/*ListPrivacyLedgerEventsForbidden handles this case with default header values.

HttpError
*/
type ListPrivacyLedgerEventsForbidden struct {
	Payload *models.Error
}

func (o *ListPrivacyLedgerEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/events][%d] listPrivacyLedgerEventsForbidden  %+v", 403, o.Payload)
}

func (o *ListPrivacyLedgerEventsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsNotFound creates a ListPrivacyLedgerEventsNotFound with default headers values
func NewListPrivacyLedgerEventsNotFound() *ListPrivacyLedgerEventsNotFound {
	return &ListPrivacyLedgerEventsNotFound{}
}

/*ListPrivacyLedgerEventsNotFound handles this case with default header values.

HttpError
*/
type ListPrivacyLedgerEventsNotFound struct {
	Payload *models.Error
}

func (o *ListPrivacyLedgerEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/privacy/events][%d] listPrivacyLedgerEventsNotFound  %+v", 404, o.Payload)
}

func (o *ListPrivacyLedgerEventsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
