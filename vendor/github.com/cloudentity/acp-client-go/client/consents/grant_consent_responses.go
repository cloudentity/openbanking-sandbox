// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GrantConsentReader is a Reader for the GrantConsent structure.
type GrantConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GrantConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewGrantConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGrantConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGrantConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGrantConsentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGrantConsentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGrantConsentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGrantConsentCreated creates a GrantConsentCreated with default headers values
func NewGrantConsentCreated() *GrantConsentCreated {
	return &GrantConsentCreated{}
}

/*GrantConsentCreated handles this case with default header values.

ConsentGrant
*/
type GrantConsentCreated struct {
	Payload *models.ConsentGrant
}

func (o *GrantConsentCreated) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/privacy/consents/grant][%d] grantConsentCreated  %+v", 201, o.Payload)
}

func (o *GrantConsentCreated) GetPayload() *models.ConsentGrant {
	return o.Payload
}

func (o *GrantConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentGrant)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGrantConsentUnauthorized creates a GrantConsentUnauthorized with default headers values
func NewGrantConsentUnauthorized() *GrantConsentUnauthorized {
	return &GrantConsentUnauthorized{}
}

/*GrantConsentUnauthorized handles this case with default header values.

HttpError
*/
type GrantConsentUnauthorized struct {
	Payload *models.Error
}

func (o *GrantConsentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/privacy/consents/grant][%d] grantConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *GrantConsentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GrantConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGrantConsentForbidden creates a GrantConsentForbidden with default headers values
func NewGrantConsentForbidden() *GrantConsentForbidden {
	return &GrantConsentForbidden{}
}

/*GrantConsentForbidden handles this case with default header values.

HttpError
*/
type GrantConsentForbidden struct {
	Payload *models.Error
}

func (o *GrantConsentForbidden) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/privacy/consents/grant][%d] grantConsentForbidden  %+v", 403, o.Payload)
}

func (o *GrantConsentForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GrantConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGrantConsentNotFound creates a GrantConsentNotFound with default headers values
func NewGrantConsentNotFound() *GrantConsentNotFound {
	return &GrantConsentNotFound{}
}

/*GrantConsentNotFound handles this case with default header values.

HttpError
*/
type GrantConsentNotFound struct {
	Payload *models.Error
}

func (o *GrantConsentNotFound) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/privacy/consents/grant][%d] grantConsentNotFound  %+v", 404, o.Payload)
}

func (o *GrantConsentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GrantConsentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGrantConsentConflict creates a GrantConsentConflict with default headers values
func NewGrantConsentConflict() *GrantConsentConflict {
	return &GrantConsentConflict{}
}

/*GrantConsentConflict handles this case with default header values.

HttpError
*/
type GrantConsentConflict struct {
	Payload *models.Error
}

func (o *GrantConsentConflict) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/privacy/consents/grant][%d] grantConsentConflict  %+v", 409, o.Payload)
}

func (o *GrantConsentConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *GrantConsentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGrantConsentUnprocessableEntity creates a GrantConsentUnprocessableEntity with default headers values
func NewGrantConsentUnprocessableEntity() *GrantConsentUnprocessableEntity {
	return &GrantConsentUnprocessableEntity{}
}

/*GrantConsentUnprocessableEntity handles this case with default header values.

HttpError
*/
type GrantConsentUnprocessableEntity struct {
	Payload *models.Error
}

func (o *GrantConsentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/privacy/consents/grant][%d] grantConsentUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GrantConsentUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *GrantConsentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
