// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListPrivacyLedgerEventsBySubjectReader is a Reader for the ListPrivacyLedgerEventsBySubject structure.
type ListPrivacyLedgerEventsBySubjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPrivacyLedgerEventsBySubjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPrivacyLedgerEventsBySubjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPrivacyLedgerEventsBySubjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPrivacyLedgerEventsBySubjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPrivacyLedgerEventsBySubjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListPrivacyLedgerEventsBySubjectOK creates a ListPrivacyLedgerEventsBySubjectOK with default headers values
func NewListPrivacyLedgerEventsBySubjectOK() *ListPrivacyLedgerEventsBySubjectOK {
	return &ListPrivacyLedgerEventsBySubjectOK{}
}

/*ListPrivacyLedgerEventsBySubjectOK handles this case with default header values.

PrivacyLedgerEvents
*/
type ListPrivacyLedgerEventsBySubjectOK struct {
	Payload *models.PrivacyLedgerEvents
}

func (o *ListPrivacyLedgerEventsBySubjectOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/events][%d] listPrivacyLedgerEventsBySubjectOK  %+v", 200, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectOK) GetPayload() *models.PrivacyLedgerEvents {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrivacyLedgerEvents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectUnauthorized creates a ListPrivacyLedgerEventsBySubjectUnauthorized with default headers values
func NewListPrivacyLedgerEventsBySubjectUnauthorized() *ListPrivacyLedgerEventsBySubjectUnauthorized {
	return &ListPrivacyLedgerEventsBySubjectUnauthorized{}
}

/*ListPrivacyLedgerEventsBySubjectUnauthorized handles this case with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectUnauthorized struct {
	Payload *models.Error
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/events][%d] listPrivacyLedgerEventsBySubjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectForbidden creates a ListPrivacyLedgerEventsBySubjectForbidden with default headers values
func NewListPrivacyLedgerEventsBySubjectForbidden() *ListPrivacyLedgerEventsBySubjectForbidden {
	return &ListPrivacyLedgerEventsBySubjectForbidden{}
}

/*ListPrivacyLedgerEventsBySubjectForbidden handles this case with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectForbidden struct {
	Payload *models.Error
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/events][%d] listPrivacyLedgerEventsBySubjectForbidden  %+v", 403, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectNotFound creates a ListPrivacyLedgerEventsBySubjectNotFound with default headers values
func NewListPrivacyLedgerEventsBySubjectNotFound() *ListPrivacyLedgerEventsBySubjectNotFound {
	return &ListPrivacyLedgerEventsBySubjectNotFound{}
}

/*ListPrivacyLedgerEventsBySubjectNotFound handles this case with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectNotFound struct {
	Payload *models.Error
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/events][%d] listPrivacyLedgerEventsBySubjectNotFound  %+v", 404, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
