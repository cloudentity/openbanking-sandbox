// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// DeleteTenantReader is a Reader for the DeleteTenant structure.
type DeleteTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTenantNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteTenantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTenantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTenantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTenantNoContent creates a DeleteTenantNoContent with default headers values
func NewDeleteTenantNoContent() *DeleteTenantNoContent {
	return &DeleteTenantNoContent{}
}

/*DeleteTenantNoContent handles this case with default header values.

Tenant has been deleted
*/
type DeleteTenantNoContent struct {
}

func (o *DeleteTenantNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantNoContent ", 204)
}

func (o *DeleteTenantNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTenantUnauthorized creates a DeleteTenantUnauthorized with default headers values
func NewDeleteTenantUnauthorized() *DeleteTenantUnauthorized {
	return &DeleteTenantUnauthorized{}
}

/*DeleteTenantUnauthorized handles this case with default header values.

HttpError
*/
type DeleteTenantUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteTenantUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTenantUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTenantForbidden creates a DeleteTenantForbidden with default headers values
func NewDeleteTenantForbidden() *DeleteTenantForbidden {
	return &DeleteTenantForbidden{}
}

/*DeleteTenantForbidden handles this case with default header values.

HttpError
*/
type DeleteTenantForbidden struct {
	Payload *models.Error
}

func (o *DeleteTenantForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTenantForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTenantNotFound creates a DeleteTenantNotFound with default headers values
func NewDeleteTenantNotFound() *DeleteTenantNotFound {
	return &DeleteTenantNotFound{}
}

/*DeleteTenantNotFound handles this case with default header values.

HttpError
*/
type DeleteTenantNotFound struct {
	Payload *models.Error
}

func (o *DeleteTenantNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTenantNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
