// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetTenantReader is a Reader for the GetTenant structure.
type GetTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTenantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTenantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTenantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTenantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTenantOK creates a GetTenantOK with default headers values
func NewGetTenantOK() *GetTenantOK {
	return &GetTenantOK{}
}

/*GetTenantOK handles this case with default header values.

Tenant
*/
type GetTenantOK struct {
	Payload *models.Tenant
}

func (o *GetTenantOK) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantOK  %+v", 200, o.Payload)
}

func (o *GetTenantOK) GetPayload() *models.Tenant {
	return o.Payload
}

func (o *GetTenantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Tenant)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantUnauthorized creates a GetTenantUnauthorized with default headers values
func NewGetTenantUnauthorized() *GetTenantUnauthorized {
	return &GetTenantUnauthorized{}
}

/*GetTenantUnauthorized handles this case with default header values.

HttpError
*/
type GetTenantUnauthorized struct {
	Payload *models.Error
}

func (o *GetTenantUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTenantUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantForbidden creates a GetTenantForbidden with default headers values
func NewGetTenantForbidden() *GetTenantForbidden {
	return &GetTenantForbidden{}
}

/*GetTenantForbidden handles this case with default header values.

HttpError
*/
type GetTenantForbidden struct {
	Payload *models.Error
}

func (o *GetTenantForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantForbidden  %+v", 403, o.Payload)
}

func (o *GetTenantForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantNotFound creates a GetTenantNotFound with default headers values
func NewGetTenantNotFound() *GetTenantNotFound {
	return &GetTenantNotFound{}
}

/*GetTenantNotFound handles this case with default header values.

HttpError
*/
type GetTenantNotFound struct {
	Payload *models.Error
}

func (o *GetTenantNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
