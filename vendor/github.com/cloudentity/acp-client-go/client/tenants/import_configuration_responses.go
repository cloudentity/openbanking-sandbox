// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ImportConfigurationReader is a Reader for the ImportConfiguration structure.
type ImportConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewImportConfigurationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportConfigurationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportConfigurationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImportConfigurationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewImportConfigurationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImportConfigurationNoContent creates a ImportConfigurationNoContent with default headers values
func NewImportConfigurationNoContent() *ImportConfigurationNoContent {
	return &ImportConfigurationNoContent{}
}

/*ImportConfigurationNoContent handles this case with default header values.

configuration has been imported
*/
type ImportConfigurationNoContent struct {
}

func (o *ImportConfigurationNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationNoContent ", 204)
}

func (o *ImportConfigurationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportConfigurationBadRequest creates a ImportConfigurationBadRequest with default headers values
func NewImportConfigurationBadRequest() *ImportConfigurationBadRequest {
	return &ImportConfigurationBadRequest{}
}

/*ImportConfigurationBadRequest handles this case with default header values.

HttpError
*/
type ImportConfigurationBadRequest struct {
	Payload *models.Error
}

func (o *ImportConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationBadRequest  %+v", 400, o.Payload)
}

func (o *ImportConfigurationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportConfigurationUnauthorized creates a ImportConfigurationUnauthorized with default headers values
func NewImportConfigurationUnauthorized() *ImportConfigurationUnauthorized {
	return &ImportConfigurationUnauthorized{}
}

/*ImportConfigurationUnauthorized handles this case with default header values.

HttpError
*/
type ImportConfigurationUnauthorized struct {
	Payload *models.Error
}

func (o *ImportConfigurationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationUnauthorized  %+v", 401, o.Payload)
}

func (o *ImportConfigurationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportConfigurationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportConfigurationForbidden creates a ImportConfigurationForbidden with default headers values
func NewImportConfigurationForbidden() *ImportConfigurationForbidden {
	return &ImportConfigurationForbidden{}
}

/*ImportConfigurationForbidden handles this case with default header values.

HttpError
*/
type ImportConfigurationForbidden struct {
	Payload *models.Error
}

func (o *ImportConfigurationForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationForbidden  %+v", 403, o.Payload)
}

func (o *ImportConfigurationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportConfigurationNotFound creates a ImportConfigurationNotFound with default headers values
func NewImportConfigurationNotFound() *ImportConfigurationNotFound {
	return &ImportConfigurationNotFound{}
}

/*ImportConfigurationNotFound handles this case with default header values.

HttpError
*/
type ImportConfigurationNotFound struct {
	Payload *models.Error
}

func (o *ImportConfigurationNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationNotFound  %+v", 404, o.Payload)
}

func (o *ImportConfigurationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportConfigurationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportConfigurationConflict creates a ImportConfigurationConflict with default headers values
func NewImportConfigurationConflict() *ImportConfigurationConflict {
	return &ImportConfigurationConflict{}
}

/*ImportConfigurationConflict handles this case with default header values.

HttpError
*/
type ImportConfigurationConflict struct {
	Payload *models.Error
}

func (o *ImportConfigurationConflict) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationConflict  %+v", 409, o.Payload)
}

func (o *ImportConfigurationConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportConfigurationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportConfigurationUnprocessableEntity creates a ImportConfigurationUnprocessableEntity with default headers values
func NewImportConfigurationUnprocessableEntity() *ImportConfigurationUnprocessableEntity {
	return &ImportConfigurationUnprocessableEntity{}
}

/*ImportConfigurationUnprocessableEntity handles this case with default header values.

HttpError
*/
type ImportConfigurationUnprocessableEntity struct {
	Payload *models.Error
}

func (o *ImportConfigurationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/system/configuration][%d] importConfigurationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ImportConfigurationUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportConfigurationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
