// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// UpdateTenantReader is a Reader for the UpdateTenant structure.
type UpdateTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTenantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTenantBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateTenantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateTenantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTenantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateTenantUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateTenantOK creates a UpdateTenantOK with default headers values
func NewUpdateTenantOK() *UpdateTenantOK {
	return &UpdateTenantOK{}
}

/*UpdateTenantOK handles this case with default header values.

Tenant
*/
type UpdateTenantOK struct {
	Payload *models.Tenant
}

func (o *UpdateTenantOK) Error() string {
	return fmt.Sprintf("[PUT /api/system/tenants/{tid}][%d] updateTenantOK  %+v", 200, o.Payload)
}

func (o *UpdateTenantOK) GetPayload() *models.Tenant {
	return o.Payload
}

func (o *UpdateTenantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Tenant)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantBadRequest creates a UpdateTenantBadRequest with default headers values
func NewUpdateTenantBadRequest() *UpdateTenantBadRequest {
	return &UpdateTenantBadRequest{}
}

/*UpdateTenantBadRequest handles this case with default header values.

HttpError
*/
type UpdateTenantBadRequest struct {
	Payload *models.Error
}

func (o *UpdateTenantBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/system/tenants/{tid}][%d] updateTenantBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTenantBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTenantBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantUnauthorized creates a UpdateTenantUnauthorized with default headers values
func NewUpdateTenantUnauthorized() *UpdateTenantUnauthorized {
	return &UpdateTenantUnauthorized{}
}

/*UpdateTenantUnauthorized handles this case with default header values.

HttpError
*/
type UpdateTenantUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateTenantUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/system/tenants/{tid}][%d] updateTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateTenantUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTenantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantForbidden creates a UpdateTenantForbidden with default headers values
func NewUpdateTenantForbidden() *UpdateTenantForbidden {
	return &UpdateTenantForbidden{}
}

/*UpdateTenantForbidden handles this case with default header values.

HttpError
*/
type UpdateTenantForbidden struct {
	Payload *models.Error
}

func (o *UpdateTenantForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/system/tenants/{tid}][%d] updateTenantForbidden  %+v", 403, o.Payload)
}

func (o *UpdateTenantForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTenantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantNotFound creates a UpdateTenantNotFound with default headers values
func NewUpdateTenantNotFound() *UpdateTenantNotFound {
	return &UpdateTenantNotFound{}
}

/*UpdateTenantNotFound handles this case with default header values.

HttpError
*/
type UpdateTenantNotFound struct {
	Payload *models.Error
}

func (o *UpdateTenantNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/system/tenants/{tid}][%d] updateTenantNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTenantNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTenantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantUnprocessableEntity creates a UpdateTenantUnprocessableEntity with default headers values
func NewUpdateTenantUnprocessableEntity() *UpdateTenantUnprocessableEntity {
	return &UpdateTenantUnprocessableEntity{}
}

/*UpdateTenantUnprocessableEntity handles this case with default header values.

HttpError
*/
type UpdateTenantUnprocessableEntity struct {
	Payload *models.Error
}

func (o *UpdateTenantUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/system/tenants/{tid}][%d] updateTenantUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateTenantUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateTenantUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
