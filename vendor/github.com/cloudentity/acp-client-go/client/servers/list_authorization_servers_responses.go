// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListAuthorizationServersReader is a Reader for the ListAuthorizationServers structure.
type ListAuthorizationServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuthorizationServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAuthorizationServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAuthorizationServersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAuthorizationServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAuthorizationServersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListAuthorizationServersOK creates a ListAuthorizationServersOK with default headers values
func NewListAuthorizationServersOK() *ListAuthorizationServersOK {
	return &ListAuthorizationServersOK{}
}

/*ListAuthorizationServersOK handles this case with default header values.

Servers
*/
type ListAuthorizationServersOK struct {
	Payload *models.Servers
}

func (o *ListAuthorizationServersOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers][%d] listAuthorizationServersOK  %+v", 200, o.Payload)
}

func (o *ListAuthorizationServersOK) GetPayload() *models.Servers {
	return o.Payload
}

func (o *ListAuthorizationServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Servers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthorizationServersUnauthorized creates a ListAuthorizationServersUnauthorized with default headers values
func NewListAuthorizationServersUnauthorized() *ListAuthorizationServersUnauthorized {
	return &ListAuthorizationServersUnauthorized{}
}

/*ListAuthorizationServersUnauthorized handles this case with default header values.

HttpError
*/
type ListAuthorizationServersUnauthorized struct {
	Payload *models.Error
}

func (o *ListAuthorizationServersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers][%d] listAuthorizationServersUnauthorized  %+v", 401, o.Payload)
}

func (o *ListAuthorizationServersUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAuthorizationServersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthorizationServersForbidden creates a ListAuthorizationServersForbidden with default headers values
func NewListAuthorizationServersForbidden() *ListAuthorizationServersForbidden {
	return &ListAuthorizationServersForbidden{}
}

/*ListAuthorizationServersForbidden handles this case with default header values.

HttpError
*/
type ListAuthorizationServersForbidden struct {
	Payload *models.Error
}

func (o *ListAuthorizationServersForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers][%d] listAuthorizationServersForbidden  %+v", 403, o.Payload)
}

func (o *ListAuthorizationServersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAuthorizationServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthorizationServersNotFound creates a ListAuthorizationServersNotFound with default headers values
func NewListAuthorizationServersNotFound() *ListAuthorizationServersNotFound {
	return &ListAuthorizationServersNotFound{}
}

/*ListAuthorizationServersNotFound handles this case with default header values.

HttpError
*/
type ListAuthorizationServersNotFound struct {
	Payload *models.Error
}

func (o *ListAuthorizationServersNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers][%d] listAuthorizationServersNotFound  %+v", 404, o.Payload)
}

func (o *ListAuthorizationServersNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAuthorizationServersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
