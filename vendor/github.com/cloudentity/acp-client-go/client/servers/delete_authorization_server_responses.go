// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// DeleteAuthorizationServerReader is a Reader for the DeleteAuthorizationServer structure.
type DeleteAuthorizationServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAuthorizationServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAuthorizationServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAuthorizationServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAuthorizationServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAuthorizationServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAuthorizationServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteAuthorizationServerNoContent creates a DeleteAuthorizationServerNoContent with default headers values
func NewDeleteAuthorizationServerNoContent() *DeleteAuthorizationServerNoContent {
	return &DeleteAuthorizationServerNoContent{}
}

/*DeleteAuthorizationServerNoContent handles this case with default header values.

Authorization server has been deleted
*/
type DeleteAuthorizationServerNoContent struct {
}

func (o *DeleteAuthorizationServerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/servers/{aid}][%d] deleteAuthorizationServerNoContent ", 204)
}

func (o *DeleteAuthorizationServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAuthorizationServerBadRequest creates a DeleteAuthorizationServerBadRequest with default headers values
func NewDeleteAuthorizationServerBadRequest() *DeleteAuthorizationServerBadRequest {
	return &DeleteAuthorizationServerBadRequest{}
}

/*DeleteAuthorizationServerBadRequest handles this case with default header values.

HttpError
*/
type DeleteAuthorizationServerBadRequest struct {
	Payload *models.Error
}

func (o *DeleteAuthorizationServerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/servers/{aid}][%d] deleteAuthorizationServerBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAuthorizationServerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerUnauthorized creates a DeleteAuthorizationServerUnauthorized with default headers values
func NewDeleteAuthorizationServerUnauthorized() *DeleteAuthorizationServerUnauthorized {
	return &DeleteAuthorizationServerUnauthorized{}
}

/*DeleteAuthorizationServerUnauthorized handles this case with default header values.

HttpError
*/
type DeleteAuthorizationServerUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteAuthorizationServerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/servers/{aid}][%d] deleteAuthorizationServerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAuthorizationServerUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerForbidden creates a DeleteAuthorizationServerForbidden with default headers values
func NewDeleteAuthorizationServerForbidden() *DeleteAuthorizationServerForbidden {
	return &DeleteAuthorizationServerForbidden{}
}

/*DeleteAuthorizationServerForbidden handles this case with default header values.

HttpError
*/
type DeleteAuthorizationServerForbidden struct {
	Payload *models.Error
}

func (o *DeleteAuthorizationServerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/servers/{aid}][%d] deleteAuthorizationServerForbidden  %+v", 403, o.Payload)
}

func (o *DeleteAuthorizationServerForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerNotFound creates a DeleteAuthorizationServerNotFound with default headers values
func NewDeleteAuthorizationServerNotFound() *DeleteAuthorizationServerNotFound {
	return &DeleteAuthorizationServerNotFound{}
}

/*DeleteAuthorizationServerNotFound handles this case with default header values.

HttpError
*/
type DeleteAuthorizationServerNotFound struct {
	Payload *models.Error
}

func (o *DeleteAuthorizationServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/servers/{aid}][%d] deleteAuthorizationServerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAuthorizationServerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
