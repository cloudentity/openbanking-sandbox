// Code generated by go-swagger; DO NOT EDIT.

package claims

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListClaimsReader is a Reader for the ListClaims structure.
type ListClaimsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListClaimsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListClaimsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListClaimsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListClaimsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListClaimsOK creates a ListClaimsOK with default headers values
func NewListClaimsOK() *ListClaimsOK {
	return &ListClaimsOK{}
}

/*ListClaimsOK handles this case with default header values.

Claims
*/
type ListClaimsOK struct {
	Payload *models.Claims
}

func (o *ListClaimsOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/claims][%d] listClaimsOK  %+v", 200, o.Payload)
}

func (o *ListClaimsOK) GetPayload() *models.Claims {
	return o.Payload
}

func (o *ListClaimsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Claims)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClaimsUnauthorized creates a ListClaimsUnauthorized with default headers values
func NewListClaimsUnauthorized() *ListClaimsUnauthorized {
	return &ListClaimsUnauthorized{}
}

/*ListClaimsUnauthorized handles this case with default header values.

HttpError
*/
type ListClaimsUnauthorized struct {
	Payload *models.Error
}

func (o *ListClaimsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/claims][%d] listClaimsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListClaimsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClaimsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClaimsForbidden creates a ListClaimsForbidden with default headers values
func NewListClaimsForbidden() *ListClaimsForbidden {
	return &ListClaimsForbidden{}
}

/*ListClaimsForbidden handles this case with default header values.

HttpError
*/
type ListClaimsForbidden struct {
	Payload *models.Error
}

func (o *ListClaimsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/claims][%d] listClaimsForbidden  %+v", 403, o.Payload)
}

func (o *ListClaimsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClaimsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
