// Code generated by go-swagger; DO NOT EDIT.

package claims

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// CreateClaimReader is a Reader for the CreateClaim structure.
type CreateClaimReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClaimReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateClaimCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateClaimUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClaimForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateClaimNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateClaimConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateClaimUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateClaimCreated creates a CreateClaimCreated with default headers values
func NewCreateClaimCreated() *CreateClaimCreated {
	return &CreateClaimCreated{}
}

/*CreateClaimCreated handles this case with default header values.

Claim
*/
type CreateClaimCreated struct {
	Payload *models.Claim
}

func (o *CreateClaimCreated) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/claims][%d] createClaimCreated  %+v", 201, o.Payload)
}

func (o *CreateClaimCreated) GetPayload() *models.Claim {
	return o.Payload
}

func (o *CreateClaimCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Claim)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClaimUnauthorized creates a CreateClaimUnauthorized with default headers values
func NewCreateClaimUnauthorized() *CreateClaimUnauthorized {
	return &CreateClaimUnauthorized{}
}

/*CreateClaimUnauthorized handles this case with default header values.

HttpError
*/
type CreateClaimUnauthorized struct {
	Payload *models.Error
}

func (o *CreateClaimUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/claims][%d] createClaimUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateClaimUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClaimUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClaimForbidden creates a CreateClaimForbidden with default headers values
func NewCreateClaimForbidden() *CreateClaimForbidden {
	return &CreateClaimForbidden{}
}

/*CreateClaimForbidden handles this case with default header values.

HttpError
*/
type CreateClaimForbidden struct {
	Payload *models.Error
}

func (o *CreateClaimForbidden) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/claims][%d] createClaimForbidden  %+v", 403, o.Payload)
}

func (o *CreateClaimForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClaimForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClaimNotFound creates a CreateClaimNotFound with default headers values
func NewCreateClaimNotFound() *CreateClaimNotFound {
	return &CreateClaimNotFound{}
}

/*CreateClaimNotFound handles this case with default header values.

HttpError
*/
type CreateClaimNotFound struct {
	Payload *models.Error
}

func (o *CreateClaimNotFound) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/claims][%d] createClaimNotFound  %+v", 404, o.Payload)
}

func (o *CreateClaimNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClaimNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClaimConflict creates a CreateClaimConflict with default headers values
func NewCreateClaimConflict() *CreateClaimConflict {
	return &CreateClaimConflict{}
}

/*CreateClaimConflict handles this case with default header values.

HttpError
*/
type CreateClaimConflict struct {
	Payload *models.Error
}

func (o *CreateClaimConflict) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/claims][%d] createClaimConflict  %+v", 409, o.Payload)
}

func (o *CreateClaimConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClaimConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClaimUnprocessableEntity creates a CreateClaimUnprocessableEntity with default headers values
func NewCreateClaimUnprocessableEntity() *CreateClaimUnprocessableEntity {
	return &CreateClaimUnprocessableEntity{}
}

/*CreateClaimUnprocessableEntity handles this case with default header values.

HttpError
*/
type CreateClaimUnprocessableEntity struct {
	Payload *models.Error
}

func (o *CreateClaimUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/claims][%d] createClaimUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateClaimUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClaimUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
