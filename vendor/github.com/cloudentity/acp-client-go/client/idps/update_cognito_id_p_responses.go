// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// UpdateCognitoIDPReader is a Reader for the UpdateCognitoIDP structure.
type UpdateCognitoIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCognitoIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCognitoIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCognitoIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCognitoIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCognitoIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCognitoIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCognitoIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCognitoIDPOK creates a UpdateCognitoIDPOK with default headers values
func NewUpdateCognitoIDPOK() *UpdateCognitoIDPOK {
	return &UpdateCognitoIDPOK{}
}

/*UpdateCognitoIDPOK handles this case with default header values.

CognitoIDP
*/
type UpdateCognitoIDPOK struct {
	Payload *models.CognitoIDP
}

func (o *UpdateCognitoIDPOK) Error() string {
	return fmt.Sprintf("[PUT /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}][%d] updateCognitoIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateCognitoIDPOK) GetPayload() *models.CognitoIDP {
	return o.Payload
}

func (o *UpdateCognitoIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CognitoIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCognitoIDPBadRequest creates a UpdateCognitoIDPBadRequest with default headers values
func NewUpdateCognitoIDPBadRequest() *UpdateCognitoIDPBadRequest {
	return &UpdateCognitoIDPBadRequest{}
}

/*UpdateCognitoIDPBadRequest handles this case with default header values.

HttpError
*/
type UpdateCognitoIDPBadRequest struct {
	Payload *models.Error
}

func (o *UpdateCognitoIDPBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}][%d] updateCognitoIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCognitoIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCognitoIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCognitoIDPUnauthorized creates a UpdateCognitoIDPUnauthorized with default headers values
func NewUpdateCognitoIDPUnauthorized() *UpdateCognitoIDPUnauthorized {
	return &UpdateCognitoIDPUnauthorized{}
}

/*UpdateCognitoIDPUnauthorized handles this case with default header values.

HttpError
*/
type UpdateCognitoIDPUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateCognitoIDPUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}][%d] updateCognitoIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateCognitoIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCognitoIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCognitoIDPForbidden creates a UpdateCognitoIDPForbidden with default headers values
func NewUpdateCognitoIDPForbidden() *UpdateCognitoIDPForbidden {
	return &UpdateCognitoIDPForbidden{}
}

/*UpdateCognitoIDPForbidden handles this case with default header values.

HttpError
*/
type UpdateCognitoIDPForbidden struct {
	Payload *models.Error
}

func (o *UpdateCognitoIDPForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}][%d] updateCognitoIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateCognitoIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCognitoIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCognitoIDPNotFound creates a UpdateCognitoIDPNotFound with default headers values
func NewUpdateCognitoIDPNotFound() *UpdateCognitoIDPNotFound {
	return &UpdateCognitoIDPNotFound{}
}

/*UpdateCognitoIDPNotFound handles this case with default header values.

HttpError
*/
type UpdateCognitoIDPNotFound struct {
	Payload *models.Error
}

func (o *UpdateCognitoIDPNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}][%d] updateCognitoIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateCognitoIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCognitoIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCognitoIDPUnprocessableEntity creates a UpdateCognitoIDPUnprocessableEntity with default headers values
func NewUpdateCognitoIDPUnprocessableEntity() *UpdateCognitoIDPUnprocessableEntity {
	return &UpdateCognitoIDPUnprocessableEntity{}
}

/*UpdateCognitoIDPUnprocessableEntity handles this case with default header values.

HttpError
*/
type UpdateCognitoIDPUnprocessableEntity struct {
	Payload *models.Error
}

func (o *UpdateCognitoIDPUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}][%d] updateCognitoIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateCognitoIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateCognitoIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
