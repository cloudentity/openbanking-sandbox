// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ListIDPsReader is a Reader for the ListIDPs structure.
type ListIDPsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIDPsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIDPsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIDPsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListIDPsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListIDPsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIDPsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListIDPsOK creates a ListIDPsOK with default headers values
func NewListIDPsOK() *ListIDPsOK {
	return &ListIDPsOK{}
}

/*ListIDPsOK handles this case with default header values.

IDPsResponse
*/
type ListIDPsOK struct {
	Payload *models.IDPsResponse
}

func (o *ListIDPsOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/idps][%d] listIdPsOK  %+v", 200, o.Payload)
}

func (o *ListIDPsOK) GetPayload() *models.IDPsResponse {
	return o.Payload
}

func (o *ListIDPsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDPsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIDPsBadRequest creates a ListIDPsBadRequest with default headers values
func NewListIDPsBadRequest() *ListIDPsBadRequest {
	return &ListIDPsBadRequest{}
}

/*ListIDPsBadRequest handles this case with default header values.

HttpError
*/
type ListIDPsBadRequest struct {
	Payload *models.Error
}

func (o *ListIDPsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/idps][%d] listIdPsBadRequest  %+v", 400, o.Payload)
}

func (o *ListIDPsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListIDPsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIDPsUnauthorized creates a ListIDPsUnauthorized with default headers values
func NewListIDPsUnauthorized() *ListIDPsUnauthorized {
	return &ListIDPsUnauthorized{}
}

/*ListIDPsUnauthorized handles this case with default header values.

HttpError
*/
type ListIDPsUnauthorized struct {
	Payload *models.Error
}

func (o *ListIDPsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/idps][%d] listIdPsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListIDPsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListIDPsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIDPsForbidden creates a ListIDPsForbidden with default headers values
func NewListIDPsForbidden() *ListIDPsForbidden {
	return &ListIDPsForbidden{}
}

/*ListIDPsForbidden handles this case with default header values.

HttpError
*/
type ListIDPsForbidden struct {
	Payload *models.Error
}

func (o *ListIDPsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/idps][%d] listIdPsForbidden  %+v", 403, o.Payload)
}

func (o *ListIDPsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListIDPsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIDPsNotFound creates a ListIDPsNotFound with default headers values
func NewListIDPsNotFound() *ListIDPsNotFound {
	return &ListIDPsNotFound{}
}

/*ListIDPsNotFound handles this case with default header values.

HttpError
*/
type ListIDPsNotFound struct {
	Payload *models.Error
}

func (o *ListIDPsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/idps][%d] listIdPsNotFound  %+v", 404, o.Payload)
}

func (o *ListIDPsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListIDPsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
