// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// ImportSpecificationFromTextReader is a Reader for the ImportSpecificationFromText structure.
type ImportSpecificationFromTextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportSpecificationFromTextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImportSpecificationFromTextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportSpecificationFromTextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportSpecificationFromTextUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportSpecificationFromTextForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportSpecificationFromTextNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImportSpecificationFromTextConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewImportSpecificationFromTextUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewImportSpecificationFromTextOK creates a ImportSpecificationFromTextOK with default headers values
func NewImportSpecificationFromTextOK() *ImportSpecificationFromTextOK {
	return &ImportSpecificationFromTextOK{}
}

/*ImportSpecificationFromTextOK handles this case with default header values.

ImportServiceConfigurationResult
*/
type ImportSpecificationFromTextOK struct {
	Payload *models.ImportServiceConfigurationResult
}

func (o *ImportSpecificationFromTextOK) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextOK  %+v", 200, o.Payload)
}

func (o *ImportSpecificationFromTextOK) GetPayload() *models.ImportServiceConfigurationResult {
	return o.Payload
}

func (o *ImportSpecificationFromTextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ImportServiceConfigurationResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromTextBadRequest creates a ImportSpecificationFromTextBadRequest with default headers values
func NewImportSpecificationFromTextBadRequest() *ImportSpecificationFromTextBadRequest {
	return &ImportSpecificationFromTextBadRequest{}
}

/*ImportSpecificationFromTextBadRequest handles this case with default header values.

HttpError
*/
type ImportSpecificationFromTextBadRequest struct {
	Payload *models.Error
}

func (o *ImportSpecificationFromTextBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextBadRequest  %+v", 400, o.Payload)
}

func (o *ImportSpecificationFromTextBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromTextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromTextUnauthorized creates a ImportSpecificationFromTextUnauthorized with default headers values
func NewImportSpecificationFromTextUnauthorized() *ImportSpecificationFromTextUnauthorized {
	return &ImportSpecificationFromTextUnauthorized{}
}

/*ImportSpecificationFromTextUnauthorized handles this case with default header values.

HttpError
*/
type ImportSpecificationFromTextUnauthorized struct {
	Payload *models.Error
}

func (o *ImportSpecificationFromTextUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextUnauthorized  %+v", 401, o.Payload)
}

func (o *ImportSpecificationFromTextUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromTextUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromTextForbidden creates a ImportSpecificationFromTextForbidden with default headers values
func NewImportSpecificationFromTextForbidden() *ImportSpecificationFromTextForbidden {
	return &ImportSpecificationFromTextForbidden{}
}

/*ImportSpecificationFromTextForbidden handles this case with default header values.

HttpError
*/
type ImportSpecificationFromTextForbidden struct {
	Payload *models.Error
}

func (o *ImportSpecificationFromTextForbidden) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextForbidden  %+v", 403, o.Payload)
}

func (o *ImportSpecificationFromTextForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromTextForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromTextNotFound creates a ImportSpecificationFromTextNotFound with default headers values
func NewImportSpecificationFromTextNotFound() *ImportSpecificationFromTextNotFound {
	return &ImportSpecificationFromTextNotFound{}
}

/*ImportSpecificationFromTextNotFound handles this case with default header values.

HttpError
*/
type ImportSpecificationFromTextNotFound struct {
	Payload *models.Error
}

func (o *ImportSpecificationFromTextNotFound) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextNotFound  %+v", 404, o.Payload)
}

func (o *ImportSpecificationFromTextNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromTextNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromTextConflict creates a ImportSpecificationFromTextConflict with default headers values
func NewImportSpecificationFromTextConflict() *ImportSpecificationFromTextConflict {
	return &ImportSpecificationFromTextConflict{}
}

/*ImportSpecificationFromTextConflict handles this case with default header values.

HttpError
*/
type ImportSpecificationFromTextConflict struct {
	Payload *models.Error
}

func (o *ImportSpecificationFromTextConflict) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextConflict  %+v", 409, o.Payload)
}

func (o *ImportSpecificationFromTextConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromTextConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromTextUnprocessableEntity creates a ImportSpecificationFromTextUnprocessableEntity with default headers values
func NewImportSpecificationFromTextUnprocessableEntity() *ImportSpecificationFromTextUnprocessableEntity {
	return &ImportSpecificationFromTextUnprocessableEntity{}
}

/*ImportSpecificationFromTextUnprocessableEntity handles this case with default header values.

HttpError
*/
type ImportSpecificationFromTextUnprocessableEntity struct {
	Payload *models.Error
}

func (o *ImportSpecificationFromTextUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/services/{sid}/apis/import/text][%d] importSpecificationFromTextUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ImportSpecificationFromTextUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromTextUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
