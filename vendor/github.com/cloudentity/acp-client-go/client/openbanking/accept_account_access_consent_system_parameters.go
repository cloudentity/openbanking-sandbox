// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// NewAcceptAccountAccessConsentSystemParams creates a new AcceptAccountAccessConsentSystemParams object
// with the default values initialized.
func NewAcceptAccountAccessConsentSystemParams() *AcceptAccountAccessConsentSystemParams {
	var (
		tidDefault = string("default")
	)
	return &AcceptAccountAccessConsentSystemParams{
		Tid: tidDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewAcceptAccountAccessConsentSystemParamsWithTimeout creates a new AcceptAccountAccessConsentSystemParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAcceptAccountAccessConsentSystemParamsWithTimeout(timeout time.Duration) *AcceptAccountAccessConsentSystemParams {
	var (
		tidDefault = string("default")
	)
	return &AcceptAccountAccessConsentSystemParams{
		Tid: tidDefault,

		timeout: timeout,
	}
}

// NewAcceptAccountAccessConsentSystemParamsWithContext creates a new AcceptAccountAccessConsentSystemParams object
// with the default values initialized, and the ability to set a context for a request
func NewAcceptAccountAccessConsentSystemParamsWithContext(ctx context.Context) *AcceptAccountAccessConsentSystemParams {
	var (
		tidDefault = string("default")
	)
	return &AcceptAccountAccessConsentSystemParams{
		Tid: tidDefault,

		Context: ctx,
	}
}

// NewAcceptAccountAccessConsentSystemParamsWithHTTPClient creates a new AcceptAccountAccessConsentSystemParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAcceptAccountAccessConsentSystemParamsWithHTTPClient(client *http.Client) *AcceptAccountAccessConsentSystemParams {
	var (
		tidDefault = string("default")
	)
	return &AcceptAccountAccessConsentSystemParams{
		Tid:        tidDefault,
		HTTPClient: client,
	}
}

/*AcceptAccountAccessConsentSystemParams contains all the parameters to send to the API endpoint
for the accept account access consent system operation typically these are written to a http.Request
*/
type AcceptAccountAccessConsentSystemParams struct {

	/*AcceptAccountAccessConsent*/
	AcceptAccountAccessConsent *models.AcceptAccountAccessConsentRequest
	/*Login*/
	LoginID string
	/*Tid
	  Tenant id

	*/
	Tid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) WithTimeout(timeout time.Duration) *AcceptAccountAccessConsentSystemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) WithContext(ctx context.Context) *AcceptAccountAccessConsentSystemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) WithHTTPClient(client *http.Client) *AcceptAccountAccessConsentSystemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcceptAccountAccessConsent adds the acceptAccountAccessConsent to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) WithAcceptAccountAccessConsent(acceptAccountAccessConsent *models.AcceptAccountAccessConsentRequest) *AcceptAccountAccessConsentSystemParams {
	o.SetAcceptAccountAccessConsent(acceptAccountAccessConsent)
	return o
}

// SetAcceptAccountAccessConsent adds the acceptAccountAccessConsent to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) SetAcceptAccountAccessConsent(acceptAccountAccessConsent *models.AcceptAccountAccessConsentRequest) {
	o.AcceptAccountAccessConsent = acceptAccountAccessConsent
}

// WithLoginID adds the login to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) WithLoginID(login string) *AcceptAccountAccessConsentSystemParams {
	o.SetLoginID(login)
	return o
}

// SetLoginID adds the login to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) SetLoginID(login string) {
	o.LoginID = login
}

// WithTid adds the tid to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) WithTid(tid string) *AcceptAccountAccessConsentSystemParams {
	o.SetTid(tid)
	return o
}

// SetTid adds the tid to the accept account access consent system params
func (o *AcceptAccountAccessConsentSystemParams) SetTid(tid string) {
	o.Tid = tid
}

// WriteToRequest writes these params to a swagger request
func (o *AcceptAccountAccessConsentSystemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AcceptAccountAccessConsent != nil {
		if err := r.SetBodyParam(o.AcceptAccountAccessConsent); err != nil {
			return err
		}
	}

	// path param login
	if err := r.SetPathParam("login", o.LoginID); err != nil {
		return err
	}

	// path param tid
	if err := r.SetPathParam("tid", o.Tid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
