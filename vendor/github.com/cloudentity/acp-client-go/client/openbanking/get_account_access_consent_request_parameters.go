// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAccountAccessConsentRequestParams creates a new GetAccountAccessConsentRequestParams object
// with the default values initialized.
func NewGetAccountAccessConsentRequestParams() *GetAccountAccessConsentRequestParams {
	var (
		aidDefault = string("default")
		tidDefault = string("default")
	)
	return &GetAccountAccessConsentRequestParams{
		Aid: aidDefault,
		Tid: tidDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAccountAccessConsentRequestParamsWithTimeout creates a new GetAccountAccessConsentRequestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAccountAccessConsentRequestParamsWithTimeout(timeout time.Duration) *GetAccountAccessConsentRequestParams {
	var (
		aidDefault = string("default")
		tidDefault = string("default")
	)
	return &GetAccountAccessConsentRequestParams{
		Aid: aidDefault,
		Tid: tidDefault,

		timeout: timeout,
	}
}

// NewGetAccountAccessConsentRequestParamsWithContext creates a new GetAccountAccessConsentRequestParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAccountAccessConsentRequestParamsWithContext(ctx context.Context) *GetAccountAccessConsentRequestParams {
	var (
		aidDefault = string("default")
		tidDefault = string("default")
	)
	return &GetAccountAccessConsentRequestParams{
		Aid: aidDefault,
		Tid: tidDefault,

		Context: ctx,
	}
}

// NewGetAccountAccessConsentRequestParamsWithHTTPClient creates a new GetAccountAccessConsentRequestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAccountAccessConsentRequestParamsWithHTTPClient(client *http.Client) *GetAccountAccessConsentRequestParams {
	var (
		aidDefault = string("default")
		tidDefault = string("default")
	)
	return &GetAccountAccessConsentRequestParams{
		Aid:        aidDefault,
		Tid:        tidDefault,
		HTTPClient: client,
	}
}

/*GetAccountAccessConsentRequestParams contains all the parameters to send to the API endpoint
for the get account access consent request operation typically these are written to a http.Request
*/
type GetAccountAccessConsentRequestParams struct {

	/*Aid
	  Server ID

	*/
	Aid string
	/*ConsentID
	  Consent id

	*/
	ConsentID string
	/*Tid
	  Tenant ID

	*/
	Tid string
	/*XCustomerUserAgent
	  The header indicates the user-agent that the PSU is using.

	The TPP may populate this field with the user-agent indicated by the PSU.
	If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
	is different from browser based user-agent strings.

	*/
	CustomerAgent *string
	/*XFapiAuthDate
	  The time when the PSU last logged in with the TPP.

	The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]

	*/
	AuthDate *string
	/*XFapiCustomerIPAddress
	  The PSU's IP address if the PSU is currently logged in with the TPP.

	*/
	CustomerIPAddress *string
	/*XFapiInteractionID
	  An RFC4122 UID used as a correlation Id.

	If provided, the ASPSP must "play back" this value
	in the x-fapi-interaction-id response header.

	*/
	InteractionID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithTimeout(timeout time.Duration) *GetAccountAccessConsentRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithContext(ctx context.Context) *GetAccountAccessConsentRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithHTTPClient(client *http.Client) *GetAccountAccessConsentRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAid adds the aid to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithAid(aid string) *GetAccountAccessConsentRequestParams {
	o.SetAid(aid)
	return o
}

// SetAid adds the aid to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetAid(aid string) {
	o.Aid = aid
}

// WithConsentID adds the consentID to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithConsentID(consentID string) *GetAccountAccessConsentRequestParams {
	o.SetConsentID(consentID)
	return o
}

// SetConsentID adds the consentId to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetConsentID(consentID string) {
	o.ConsentID = consentID
}

// WithTid adds the tid to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithTid(tid string) *GetAccountAccessConsentRequestParams {
	o.SetTid(tid)
	return o
}

// SetTid adds the tid to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetTid(tid string) {
	o.Tid = tid
}

// WithCustomerAgent adds the xCustomerUserAgent to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithCustomerAgent(xCustomerUserAgent *string) *GetAccountAccessConsentRequestParams {
	o.SetCustomerAgent(xCustomerUserAgent)
	return o
}

// SetCustomerAgent adds the xCustomerUserAgent to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetCustomerAgent(xCustomerUserAgent *string) {
	o.CustomerAgent = xCustomerUserAgent
}

// WithAuthDate adds the xFapiAuthDate to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithAuthDate(xFapiAuthDate *string) *GetAccountAccessConsentRequestParams {
	o.SetAuthDate(xFapiAuthDate)
	return o
}

// SetAuthDate adds the xFapiAuthDate to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetAuthDate(xFapiAuthDate *string) {
	o.AuthDate = xFapiAuthDate
}

// WithCustomerIPAddress adds the xFapiCustomerIPAddress to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithCustomerIPAddress(xFapiCustomerIPAddress *string) *GetAccountAccessConsentRequestParams {
	o.SetCustomerIPAddress(xFapiCustomerIPAddress)
	return o
}

// SetCustomerIPAddress adds the xFapiCustomerIpAddress to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetCustomerIPAddress(xFapiCustomerIPAddress *string) {
	o.CustomerIPAddress = xFapiCustomerIPAddress
}

// WithInteractionID adds the xFapiInteractionID to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) WithInteractionID(xFapiInteractionID *string) *GetAccountAccessConsentRequestParams {
	o.SetInteractionID(xFapiInteractionID)
	return o
}

// SetInteractionID adds the xFapiInteractionId to the get account access consent request params
func (o *GetAccountAccessConsentRequestParams) SetInteractionID(xFapiInteractionID *string) {
	o.InteractionID = xFapiInteractionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetAccountAccessConsentRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param aid
	if err := r.SetPathParam("aid", o.Aid); err != nil {
		return err
	}

	// path param consentID
	if err := r.SetPathParam("consentID", o.ConsentID); err != nil {
		return err
	}

	// path param tid
	if err := r.SetPathParam("tid", o.Tid); err != nil {
		return err
	}

	if o.CustomerAgent != nil {

		// header param x-customer-user-agent
		if err := r.SetHeaderParam("x-customer-user-agent", *o.CustomerAgent); err != nil {
			return err
		}

	}

	if o.AuthDate != nil {

		// header param x-fapi-auth-date
		if err := r.SetHeaderParam("x-fapi-auth-date", *o.AuthDate); err != nil {
			return err
		}

	}

	if o.CustomerIPAddress != nil {

		// header param x-fapi-customer-ip-address
		if err := r.SetHeaderParam("x-fapi-customer-ip-address", *o.CustomerIPAddress); err != nil {
			return err
		}

	}

	if o.InteractionID != nil {

		// header param x-fapi-interaction-id
		if err := r.SetHeaderParam("x-fapi-interaction-id", *o.InteractionID); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
