// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// UnbindGroupFromServiceReader is a Reader for the UnbindGroupFromService structure.
type UnbindGroupFromServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnbindGroupFromServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnbindGroupFromServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnbindGroupFromServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnbindGroupFromServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUnbindGroupFromServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUnbindGroupFromServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUnbindGroupFromServiceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUnbindGroupFromServiceOK creates a UnbindGroupFromServiceOK with default headers values
func NewUnbindGroupFromServiceOK() *UnbindGroupFromServiceOK {
	return &UnbindGroupFromServiceOK{}
}

/*UnbindGroupFromServiceOK handles this case with default header values.

UnbindGroupFromServiceResponse
*/
type UnbindGroupFromServiceOK struct {
	Payload *models.UnbindGroupFromServiceResponse
}

func (o *UnbindGroupFromServiceOK) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind][%d] unbindGroupFromServiceOK  %+v", 200, o.Payload)
}

func (o *UnbindGroupFromServiceOK) GetPayload() *models.UnbindGroupFromServiceResponse {
	return o.Payload
}

func (o *UnbindGroupFromServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnbindGroupFromServiceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindGroupFromServiceBadRequest creates a UnbindGroupFromServiceBadRequest with default headers values
func NewUnbindGroupFromServiceBadRequest() *UnbindGroupFromServiceBadRequest {
	return &UnbindGroupFromServiceBadRequest{}
}

/*UnbindGroupFromServiceBadRequest handles this case with default header values.

HttpError
*/
type UnbindGroupFromServiceBadRequest struct {
	Payload *models.Error
}

func (o *UnbindGroupFromServiceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind][%d] unbindGroupFromServiceBadRequest  %+v", 400, o.Payload)
}

func (o *UnbindGroupFromServiceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UnbindGroupFromServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindGroupFromServiceUnauthorized creates a UnbindGroupFromServiceUnauthorized with default headers values
func NewUnbindGroupFromServiceUnauthorized() *UnbindGroupFromServiceUnauthorized {
	return &UnbindGroupFromServiceUnauthorized{}
}

/*UnbindGroupFromServiceUnauthorized handles this case with default header values.

HttpError
*/
type UnbindGroupFromServiceUnauthorized struct {
	Payload *models.Error
}

func (o *UnbindGroupFromServiceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind][%d] unbindGroupFromServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *UnbindGroupFromServiceUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UnbindGroupFromServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindGroupFromServiceForbidden creates a UnbindGroupFromServiceForbidden with default headers values
func NewUnbindGroupFromServiceForbidden() *UnbindGroupFromServiceForbidden {
	return &UnbindGroupFromServiceForbidden{}
}

/*UnbindGroupFromServiceForbidden handles this case with default header values.

HttpError
*/
type UnbindGroupFromServiceForbidden struct {
	Payload *models.Error
}

func (o *UnbindGroupFromServiceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind][%d] unbindGroupFromServiceForbidden  %+v", 403, o.Payload)
}

func (o *UnbindGroupFromServiceForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UnbindGroupFromServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindGroupFromServiceNotFound creates a UnbindGroupFromServiceNotFound with default headers values
func NewUnbindGroupFromServiceNotFound() *UnbindGroupFromServiceNotFound {
	return &UnbindGroupFromServiceNotFound{}
}

/*UnbindGroupFromServiceNotFound handles this case with default header values.

HttpError
*/
type UnbindGroupFromServiceNotFound struct {
	Payload *models.Error
}

func (o *UnbindGroupFromServiceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind][%d] unbindGroupFromServiceNotFound  %+v", 404, o.Payload)
}

func (o *UnbindGroupFromServiceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UnbindGroupFromServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnbindGroupFromServiceUnprocessableEntity creates a UnbindGroupFromServiceUnprocessableEntity with default headers values
func NewUnbindGroupFromServiceUnprocessableEntity() *UnbindGroupFromServiceUnprocessableEntity {
	return &UnbindGroupFromServiceUnprocessableEntity{}
}

/*UnbindGroupFromServiceUnprocessableEntity handles this case with default header values.

HttpError
*/
type UnbindGroupFromServiceUnprocessableEntity struct {
	Payload *models.Error
}

func (o *UnbindGroupFromServiceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind][%d] unbindGroupFromServiceUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UnbindGroupFromServiceUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UnbindGroupFromServiceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
