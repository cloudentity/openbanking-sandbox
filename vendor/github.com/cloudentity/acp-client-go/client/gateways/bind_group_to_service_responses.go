// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// BindGroupToServiceReader is a Reader for the BindGroupToService structure.
type BindGroupToServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BindGroupToServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBindGroupToServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBindGroupToServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBindGroupToServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBindGroupToServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBindGroupToServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewBindGroupToServiceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBindGroupToServiceOK creates a BindGroupToServiceOK with default headers values
func NewBindGroupToServiceOK() *BindGroupToServiceOK {
	return &BindGroupToServiceOK{}
}

/*BindGroupToServiceOK handles this case with default header values.

BindGroupToServiceResponse
*/
type BindGroupToServiceOK struct {
	Payload *models.BindGroupToServiceResponse
}

func (o *BindGroupToServiceOK) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind][%d] bindGroupToServiceOK  %+v", 200, o.Payload)
}

func (o *BindGroupToServiceOK) GetPayload() *models.BindGroupToServiceResponse {
	return o.Payload
}

func (o *BindGroupToServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BindGroupToServiceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBindGroupToServiceBadRequest creates a BindGroupToServiceBadRequest with default headers values
func NewBindGroupToServiceBadRequest() *BindGroupToServiceBadRequest {
	return &BindGroupToServiceBadRequest{}
}

/*BindGroupToServiceBadRequest handles this case with default header values.

HttpError
*/
type BindGroupToServiceBadRequest struct {
	Payload *models.Error
}

func (o *BindGroupToServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind][%d] bindGroupToServiceBadRequest  %+v", 400, o.Payload)
}

func (o *BindGroupToServiceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *BindGroupToServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBindGroupToServiceUnauthorized creates a BindGroupToServiceUnauthorized with default headers values
func NewBindGroupToServiceUnauthorized() *BindGroupToServiceUnauthorized {
	return &BindGroupToServiceUnauthorized{}
}

/*BindGroupToServiceUnauthorized handles this case with default header values.

HttpError
*/
type BindGroupToServiceUnauthorized struct {
	Payload *models.Error
}

func (o *BindGroupToServiceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind][%d] bindGroupToServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *BindGroupToServiceUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *BindGroupToServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBindGroupToServiceForbidden creates a BindGroupToServiceForbidden with default headers values
func NewBindGroupToServiceForbidden() *BindGroupToServiceForbidden {
	return &BindGroupToServiceForbidden{}
}

/*BindGroupToServiceForbidden handles this case with default header values.

HttpError
*/
type BindGroupToServiceForbidden struct {
	Payload *models.Error
}

func (o *BindGroupToServiceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind][%d] bindGroupToServiceForbidden  %+v", 403, o.Payload)
}

func (o *BindGroupToServiceForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *BindGroupToServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBindGroupToServiceNotFound creates a BindGroupToServiceNotFound with default headers values
func NewBindGroupToServiceNotFound() *BindGroupToServiceNotFound {
	return &BindGroupToServiceNotFound{}
}

/*BindGroupToServiceNotFound handles this case with default header values.

HttpError
*/
type BindGroupToServiceNotFound struct {
	Payload *models.Error
}

func (o *BindGroupToServiceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind][%d] bindGroupToServiceNotFound  %+v", 404, o.Payload)
}

func (o *BindGroupToServiceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *BindGroupToServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBindGroupToServiceUnprocessableEntity creates a BindGroupToServiceUnprocessableEntity with default headers values
func NewBindGroupToServiceUnprocessableEntity() *BindGroupToServiceUnprocessableEntity {
	return &BindGroupToServiceUnprocessableEntity{}
}

/*BindGroupToServiceUnprocessableEntity handles this case with default header values.

HttpError
*/
type BindGroupToServiceUnprocessableEntity struct {
	Payload *models.Error
}

func (o *BindGroupToServiceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind][%d] bindGroupToServiceUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *BindGroupToServiceUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *BindGroupToServiceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
