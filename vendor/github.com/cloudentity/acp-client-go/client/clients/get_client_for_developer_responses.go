// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetClientForDeveloperReader is a Reader for the GetClientForDeveloper structure.
type GetClientForDeveloperReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClientForDeveloperReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClientForDeveloperOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClientForDeveloperUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClientForDeveloperForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClientForDeveloperNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetClientForDeveloperOK creates a GetClientForDeveloperOK with default headers values
func NewGetClientForDeveloperOK() *GetClientForDeveloperOK {
	return &GetClientForDeveloperOK{}
}

/*GetClientForDeveloperOK handles this case with default header values.

ClientDeveloperResponse
*/
type GetClientForDeveloperOK struct {
	Payload *models.ClientDeveloperResponse
}

func (o *GetClientForDeveloperOK) Error() string {
	return fmt.Sprintf("[GET /api/developer/{tid}/{aid}/clients/{cid}][%d] getClientForDeveloperOK  %+v", 200, o.Payload)
}

func (o *GetClientForDeveloperOK) GetPayload() *models.ClientDeveloperResponse {
	return o.Payload
}

func (o *GetClientForDeveloperOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientDeveloperResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperUnauthorized creates a GetClientForDeveloperUnauthorized with default headers values
func NewGetClientForDeveloperUnauthorized() *GetClientForDeveloperUnauthorized {
	return &GetClientForDeveloperUnauthorized{}
}

/*GetClientForDeveloperUnauthorized handles this case with default header values.

HttpError
*/
type GetClientForDeveloperUnauthorized struct {
	Payload *models.Error
}

func (o *GetClientForDeveloperUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/developer/{tid}/{aid}/clients/{cid}][%d] getClientForDeveloperUnauthorized  %+v", 401, o.Payload)
}

func (o *GetClientForDeveloperUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperForbidden creates a GetClientForDeveloperForbidden with default headers values
func NewGetClientForDeveloperForbidden() *GetClientForDeveloperForbidden {
	return &GetClientForDeveloperForbidden{}
}

/*GetClientForDeveloperForbidden handles this case with default header values.

HttpError
*/
type GetClientForDeveloperForbidden struct {
	Payload *models.Error
}

func (o *GetClientForDeveloperForbidden) Error() string {
	return fmt.Sprintf("[GET /api/developer/{tid}/{aid}/clients/{cid}][%d] getClientForDeveloperForbidden  %+v", 403, o.Payload)
}

func (o *GetClientForDeveloperForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperNotFound creates a GetClientForDeveloperNotFound with default headers values
func NewGetClientForDeveloperNotFound() *GetClientForDeveloperNotFound {
	return &GetClientForDeveloperNotFound{}
}

/*GetClientForDeveloperNotFound handles this case with default header values.

HttpError
*/
type GetClientForDeveloperNotFound struct {
	Payload *models.Error
}

func (o *GetClientForDeveloperNotFound) Error() string {
	return fmt.Sprintf("[GET /api/developer/{tid}/{aid}/clients/{cid}][%d] getClientForDeveloperNotFound  %+v", 404, o.Payload)
}

func (o *GetClientForDeveloperNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
