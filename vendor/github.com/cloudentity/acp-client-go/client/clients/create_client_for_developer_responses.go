// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// CreateClientForDeveloperReader is a Reader for the CreateClientForDeveloper structure.
type CreateClientForDeveloperReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClientForDeveloperReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateClientForDeveloperCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateClientForDeveloperUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClientForDeveloperForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateClientForDeveloperNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateClientForDeveloperConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateClientForDeveloperUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateClientForDeveloperCreated creates a CreateClientForDeveloperCreated with default headers values
func NewCreateClientForDeveloperCreated() *CreateClientForDeveloperCreated {
	return &CreateClientForDeveloperCreated{}
}

/*CreateClientForDeveloperCreated handles this case with default header values.

ClientDeveloperResponse
*/
type CreateClientForDeveloperCreated struct {
	Payload *models.ClientDeveloperResponse
}

func (o *CreateClientForDeveloperCreated) Error() string {
	return fmt.Sprintf("[POST /api/developer/{tid}/{aid}/clients][%d] createClientForDeveloperCreated  %+v", 201, o.Payload)
}

func (o *CreateClientForDeveloperCreated) GetPayload() *models.ClientDeveloperResponse {
	return o.Payload
}

func (o *CreateClientForDeveloperCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientDeveloperResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientForDeveloperUnauthorized creates a CreateClientForDeveloperUnauthorized with default headers values
func NewCreateClientForDeveloperUnauthorized() *CreateClientForDeveloperUnauthorized {
	return &CreateClientForDeveloperUnauthorized{}
}

/*CreateClientForDeveloperUnauthorized handles this case with default header values.

HttpError
*/
type CreateClientForDeveloperUnauthorized struct {
	Payload *models.Error
}

func (o *CreateClientForDeveloperUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/developer/{tid}/{aid}/clients][%d] createClientForDeveloperUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateClientForDeveloperUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientForDeveloperUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientForDeveloperForbidden creates a CreateClientForDeveloperForbidden with default headers values
func NewCreateClientForDeveloperForbidden() *CreateClientForDeveloperForbidden {
	return &CreateClientForDeveloperForbidden{}
}

/*CreateClientForDeveloperForbidden handles this case with default header values.

HttpError
*/
type CreateClientForDeveloperForbidden struct {
	Payload *models.Error
}

func (o *CreateClientForDeveloperForbidden) Error() string {
	return fmt.Sprintf("[POST /api/developer/{tid}/{aid}/clients][%d] createClientForDeveloperForbidden  %+v", 403, o.Payload)
}

func (o *CreateClientForDeveloperForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientForDeveloperForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientForDeveloperNotFound creates a CreateClientForDeveloperNotFound with default headers values
func NewCreateClientForDeveloperNotFound() *CreateClientForDeveloperNotFound {
	return &CreateClientForDeveloperNotFound{}
}

/*CreateClientForDeveloperNotFound handles this case with default header values.

HttpError
*/
type CreateClientForDeveloperNotFound struct {
	Payload *models.Error
}

func (o *CreateClientForDeveloperNotFound) Error() string {
	return fmt.Sprintf("[POST /api/developer/{tid}/{aid}/clients][%d] createClientForDeveloperNotFound  %+v", 404, o.Payload)
}

func (o *CreateClientForDeveloperNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientForDeveloperNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientForDeveloperConflict creates a CreateClientForDeveloperConflict with default headers values
func NewCreateClientForDeveloperConflict() *CreateClientForDeveloperConflict {
	return &CreateClientForDeveloperConflict{}
}

/*CreateClientForDeveloperConflict handles this case with default header values.

HttpError
*/
type CreateClientForDeveloperConflict struct {
	Payload *models.Error
}

func (o *CreateClientForDeveloperConflict) Error() string {
	return fmt.Sprintf("[POST /api/developer/{tid}/{aid}/clients][%d] createClientForDeveloperConflict  %+v", 409, o.Payload)
}

func (o *CreateClientForDeveloperConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientForDeveloperConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientForDeveloperUnprocessableEntity creates a CreateClientForDeveloperUnprocessableEntity with default headers values
func NewCreateClientForDeveloperUnprocessableEntity() *CreateClientForDeveloperUnprocessableEntity {
	return &CreateClientForDeveloperUnprocessableEntity{}
}

/*CreateClientForDeveloperUnprocessableEntity handles this case with default header values.

HttpError
*/
type CreateClientForDeveloperUnprocessableEntity struct {
	Payload *models.Error
}

func (o *CreateClientForDeveloperUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/developer/{tid}/{aid}/clients][%d] createClientForDeveloperUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateClientForDeveloperUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientForDeveloperUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
