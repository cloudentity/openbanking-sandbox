consumes:
- application/json
produces:
- application/json
schemes:
- https
swagger: "2.0"
info:
  description: Cloudentity Authorization Control Plane API
  title: Cloudentity Authorization Control Plane API
  version: 1.6.0
host: localhost:8443
basePath: /
paths:
  /api/admin/{tid}/actions:
    get:
      security:
      - admin: []
      description: List consent actions.
      tags:
      - consents
      summary: List consent actions
      operationId: listConsentActions
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: ConsentActions
          schema:
            $ref: '#/definitions/ConsentActions'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
      - admin: []
      description: |-
        Consent action allows to group list of consents. A Tenant Application asking for the consent it can
        ask for +by the action name+ instead of asking for a list of consents directly. It allows for cleaner
        abstraction and adds the ability to dynamically configure the consents required for particular applications.

        ID and Name are required fields.

        For each consent provide id and specify if it is required.
      tags:
      - consents
      summary: Create consent action
      operationId: createConsentAction
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: ConsentAction
        in: body
        required: true
        schema:
          $ref: '#/definitions/ConsentActionWithConsents'
      responses:
        "201":
          description: ConsentActionWithConsents
          schema:
            $ref: '#/definitions/ConsentActionWithConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/actions/{action}:
    get:
      security:
      - admin: []
      description: Get consent action with consents.
      tags:
      - consents
      summary: Get consent action with consents
      operationId: getConsentAction
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Action
        name: action
        in: path
        required: true
      responses:
        "200":
          description: ConsentActionWithConsents
          schema:
            $ref: '#/definitions/ConsentActionWithConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update consent action.
      tags:
      - consents
      summary: Update consent action
      operationId: updateConsentAction
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Action
        name: action
        in: path
        required: true
      - name: ConsentAction
        in: body
        schema:
          $ref: '#/definitions/ConsentActionWithConsents'
      responses:
        "201":
          description: ConsentActionWithConsents
          schema:
            $ref: '#/definitions/ConsentActionWithConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete consent action.
      tags:
      - consents
      summary: Delete consent action
      operationId: deleteConsentAction
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Action
        name: action
        in: path
        required: true
      responses:
        "204":
          description: ' ConsentAction has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/apis:
    post:
      security:
      - admin: []
      description: It is not possible to create APIs for a service with imported specification.
      tags:
      - apis
      summary: Create API
      operationId: createAPI
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - description: APIBody
        name: APIBody
        in: body
        schema:
          $ref: '#/definitions/API'
      responses:
        "201":
          description: API
          schema:
            $ref: '#/definitions/API'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/apis/{api}:
    get:
      security:
      - admin: []
      description: Get API.
      tags:
      - apis
      summary: Get API
      operationId: getAPI
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: APIID
        name: api
        in: path
        required: true
      responses:
        "200":
          description: API
          schema:
            $ref: '#/definitions/API'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update API.
      tags:
      - apis
      summary: Update API
      operationId: updateAPI
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: APIID
        description: API ID
        name: api
        in: path
        required: true
      - description: APIBody
        name: APIBody
        in: body
        schema:
          $ref: '#/definitions/UpdateAPIRequest'
      responses:
        "200":
          description: API
          schema:
            $ref: '#/definitions/API'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: |-
        If this API was created by import specification operation then
        it is not possible to delete it.
      tags:
      - apis
      summary: Delete API
      operationId: deleteAPI
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: APIID
        name: api
        in: path
        required: true
      responses:
        "204":
          description: ' API has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/claims:
    post:
      security:
      - admin: []
      description: |-
        Claim allows to add custom attribute to outgoing id / access token.

        Authorization Server, Name, Mapping and Type are required fields.

        ID if not provided will be generated.
      tags:
      - claims
      summary: Create claim
      operationId: createClaim
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Claim
        in: body
        schema:
          $ref: '#/definitions/Claim'
      responses:
        "201":
          description: Claim
          schema:
            $ref: '#/definitions/Claim'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/claims/{claim}:
    put:
      security:
      - admin: []
      description: Update claim.
      tags:
      - claims
      summary: Update claim
      operationId: updateClaim
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ClaimID
        name: claim
        in: path
        required: true
      - name: UpdateClaimBody
        in: body
        schema:
          $ref: '#/definitions/Claim'
      responses:
        "200":
          description: Claim
          schema:
            $ref: '#/definitions/Claim'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete claim.
      tags:
      - claims
      summary: Delete claim
      operationId: deleteClaim
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ClaimID
        name: claim
        in: path
        required: true
      responses:
        "204":
          description: ' Claim has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/clients:
    post:
      security:
      - admin: []
      description: |-
        Client must be created under existing tenant and authorization server.

        Authorization server id must be provided in the request body.

        Client id and secret can be provided, otherwise are generated.

        If grant type is not set, client will get authorization code grant type assigned with code as response type.

        Default token authentication method is client_secret_basic.
      tags:
      - clients
      summary: Create new OAuth client
      operationId: createClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Client
        in: body
        schema:
          $ref: '#/definitions/CreateClientAdminRequest'
      responses:
        "201":
          description: ClientAdminResponse
          schema:
            $ref: '#/definitions/ClientAdminResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/clients/{cid}:
    get:
      security:
      - admin: []
      description: If client has been created by a developer, client's secret will
        be empty.
      tags:
      - clients
      summary: Get client.
      operationId: getClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "200":
          description: ClientAdminResponse
          schema:
            $ref: '#/definitions/ClientAdminResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: |-
        Update client.

        For clients created by developers only metadata, system and trusted attributes
        can be updated.
      tags:
      - clients
      summary: Update client
      operationId: updateClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      - name: Client
        in: body
        schema:
          $ref: '#/definitions/UpdateClientAdminRequest'
      responses:
        "200":
          description: ClientAdminResponse
          schema:
            $ref: '#/definitions/ClientAdminResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete client.
      tags:
      - clients
      summary: Delete client
      operationId: deleteClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/consents:
    get:
      security:
      - admin: []
      description: List consents.
      tags:
      - consents
      summary: List consents
      operationId: listConsents
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: Consents
          schema:
            $ref: '#/definitions/Consents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
      - admin: []
      description: |-
        Consents are created per tenant.

        ID, Name and UpdateExistingGrants strategy are required fields when creating a new consent.

        UpdateExistingGrants has the following options:

        explicitAll - all the existing grants should not be updated. It is required that the user grants the consent explicitly.

        implicitAll - all previously existing consent grants should be updated, to the new version of the consent, but
        all of those grants should be implicit from the moment on.

        keepCurrent - if a previously existing consent grant was set implicitly, it is automatically updated and a new
        consent grant is produced, which is also implicit. if a previously existing consent grant was set
        explicitly, it should not be updated. It is required that the user grants the consent explicitly.
      tags:
      - consents
      summary: Create consent
      operationId: createConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Consent
        in: body
        required: true
        schema:
          $ref: '#/definitions/Consent'
      responses:
        "201":
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/consents/{consent}:
    get:
      security:
      - admin: []
      description: Get consent details.
      tags:
      - consents
      summary: Get consent details
      operationId: getConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ConsentID
        name: consent
        in: path
        required: true
      responses:
        "200":
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: |-
        Every time consent is updated, its version is incremented.

        If ValidFrom attribute is not provided it will be set to current time.
      tags:
      - consents
      summary: Update consent
      operationId: updateConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ConsentID
        name: consent
        in: path
        required: true
      - name: ConsentBody
        in: body
        schema:
          $ref: '#/definitions/Consent'
      responses:
        "201":
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete consent.
      tags:
      - consents
      summary: Delete consent
      operationId: deleteConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ConsentID
        name: consent
        in: path
        required: true
      responses:
        "204":
          description: ' Consent has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/environment:
    get:
      security:
      - admin: []
      description: Get environment settings.
      tags:
      - environment
      summary: Get environment
      operationId: getEnvironment
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: Environment
          schema:
            $ref: '#/definitions/Environment'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/events:
    get:
      security:
      - admin: []
      description: List privacy ledger events.
      tags:
      - consents
      summary: List privacy ledger events
      operationId: listPrivacyLedgerEventsBySubject
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        format: subject
        x-go-name: Subject
        description: Subject
        name: sub
        in: query
      - type: integer
        format: int64
        x-go-name: From
        description: Query events from timestamp (default 0)
        name: from
        in: query
      - type: integer
        format: int64
        x-go-name: To
        description: Query events to timestamp (default current time)
        name: to
        in: query
      responses:
        "200":
          description: PrivacyLedgerEvents
          schema:
            $ref: '#/definitions/PrivacyLedgerEvents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/gateways:
    post:
      security:
      - admin: []
      description: Create gateway.
      tags:
      - gateways
      summary: Create gateway
      operationId: createGateway
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Gateway
        in: body
        schema:
          $ref: '#/definitions/CreateGatewayRequest'
      responses:
        "201":
          description: GatewayWithClient
          schema:
            $ref: '#/definitions/GatewayWithClient'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/gateways/{gw}:
    get:
      security:
      - admin: []
      description: Get gateway.
      tags:
      - gateways
      summary: Get gateway
      operationId: getGateway
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Gw
        description: Gateway id
        name: gw
        in: path
        required: true
      responses:
        "200":
          description: GatewayWithClient
          schema:
            $ref: '#/definitions/GatewayWithClient'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update gateway.
      tags:
      - gateways
      summary: Update gateway
      operationId: updateGateway
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Gw
        name: gw
        in: path
        required: true
      - name: UpdateGatewayBody
        in: body
        schema:
          $ref: '#/definitions/UpdateGatewayRequest'
      responses:
        "200":
          description: Gateway
          schema:
            $ref: '#/definitions/Gateway'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: This removes configuration for all services connected to this gateway.
      tags:
      - gateways
      summary: Delete gateway
      operationId: deleteGateway
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Gw
        name: gw
        in: path
        required: true
      responses:
        "204":
          description: ' Gateway has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/gateways/{gw}/groups:
    get:
      security:
      - admin: []
      description: List gateway api groups.
      tags:
      - gateways
      summary: List gateway api groups
      operationId: listGatewayAPIGroups
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Gw
        description: Gateway id
        name: gw
        in: path
        required: true
      responses:
        "200":
          description: GatewayAPIGroups
          schema:
            $ref: '#/definitions/GatewayAPIGroups'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/bind:
    post:
      security:
      - admin: []
      description: |-
        It unbinds service first, if it is already connected to an api group.

        It removes specification from a service, if it has specification imported already.

        It removes any APIs added manually to a service, if it contains any.
      tags:
      - gateways
      summary: Bind a group to a service
      operationId: bindGroupToService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Gw
        name: gw
        in: path
        required: true
      - type: string
        x-go-name: APIGroupID
        name: apiGroup
        in: path
        required: true
      - name: BindGroupToServiceRequest
        in: body
        schema:
          $ref: '#/definitions/BindGroupToServiceRequest'
      responses:
        "200":
          description: BindGroupToServiceResponse
          schema:
            $ref: '#/definitions/BindGroupToServiceResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/gateways/{gw}/groups/{apiGroup}/unbind:
    delete:
      security:
      - admin: []
      description: |-
        Remove all apis and policies.

        If policy is used by another service it will not be removed.

        If service is connected to a gateway, it will be disconnected.

        If a gateway api group is connected to this service, it will be disconnected.
      tags:
      - gateways
      summary: Unbind a group from a service
      operationId: unbindGroupFromService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Gw
        name: gw
        in: path
        required: true
      - type: string
        x-go-name: APIGroupID
        name: apiGroup
        in: path
        required: true
      responses:
        "200":
          description: UnbindGroupFromServiceResponse
          schema:
            $ref: '#/definitions/UnbindGroupFromServiceResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/gateways/{gw}/package:
    get:
      security:
      - admin: []
      description: Get package for a gateway.
      produces:
      - application/octet-stream
      tags:
      - gateways
      summary: Get package for a gateway
      operationId: getGatewayPackage
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Gw
        description: Gateway id
        name: gw
        in: path
        required: true
      responses:
        "200":
          description: Gateway package
          schema:
            type: file
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/policies:
    post:
      security:
      - admin: []
      description: |-
        Policies are created per tenant.

        ID and Name are required fields.

        Sample validators which can be used to build policies: identity-context, consent, header, true, false.
      tags:
      - policies
      summary: Create policy
      operationId: createPolicy
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Policy
        in: body
        schema:
          $ref: '#/definitions/Policy'
      responses:
        "201":
          description: Policy
          schema:
            $ref: '#/definitions/Policy'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/policies/test:
    post:
      security:
      - admin: []
      description: Test policy.
      tags:
      - policies
      summary: Test policy
      operationId: testPolicy
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: TestPolicyRequest
        in: body
        schema:
          $ref: '#/definitions/TestPolicyRequest'
      responses:
        "200":
          description: TestPolicyResponse
          schema:
            $ref: '#/definitions/TestPolicyResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/policies/{pid}:
    get:
      security:
      - admin: []
      description: Get policy.
      tags:
      - policies
      summary: Get policy
      operationId: getPolicy
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: PolicyID
        name: pid
        in: path
        required: true
      responses:
        "200":
          description: Policy
          schema:
            $ref: '#/definitions/Policy'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update policy.
      tags:
      - policies
      summary: Update policy
      operationId: updatePolicy
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: PolicyID
        name: pid
        in: path
        required: true
      - name: PolicyBody
        in: body
        schema:
          $ref: '#/definitions/Policy'
      responses:
        "201":
          description: Policy
          schema:
            $ref: '#/definitions/Policy'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: |-
        Delete policy.

        A policy can't be removed if it's in use.
      tags:
      - policies
      summary: Delete policy
      operationId: deletePolicy
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: PolicyID
        name: pid
        in: path
        required: true
      responses:
        "204":
          description: ' Policy has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/scopes:
    post:
      security:
      - admin: []
      description: |-
        Scope name is required. If scope id is not provided, will be generated.
        If you want to assign scope to a service, provide service id.
      tags:
      - scopes
      summary: Create scope
      operationId: createScope
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: ScopeWithService
        in: body
        schema:
          $ref: '#/definitions/ScopeWithServiceID'
      responses:
        "201":
          description: Scope
          schema:
            $ref: '#/definitions/Scope'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/scopes/{scp}:
    get:
      security:
      - admin: []
      description: Get scope.
      tags:
      - scopes
      summary: Get scope
      operationId: getScope
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ScopeID
        name: scp
        in: path
        required: true
      responses:
        "200":
          description: ScopeWithService
          schema:
            $ref: '#/definitions/ScopeWithService'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update scope.
      tags:
      - scopes
      summary: Update scope
      operationId: updateScope
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ScopeID
        name: scp
        in: path
        required: true
      - name: Scope
        in: body
        schema:
          $ref: '#/definitions/Scope'
      responses:
        "200":
          description: Scope
          schema:
            $ref: '#/definitions/Scope'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete scope.
      tags:
      - scopes
      summary: Delete scope
      operationId: deleteScope
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ScopeID
        name: scp
        in: path
        required: true
      responses:
        "204":
          description: ' Scope has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers:
    get:
      security:
      - admin: []
      description: List authorization servers.
      tags:
      - servers
      summary: List authorization servers
      operationId: listAuthorizationServers
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: Servers
          schema:
            $ref: '#/definitions/Servers'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
      - admin: []
      description: |-
        Multiple authorization servers with unique id can be created within a tenant.
        If id and secret are not provided, will be generated.
        Secret if provided must have at least 32 characters.

        You can set what grant types will be supported by authorization server. The defaults are:
        `{"grant_types": ["authorization_code", "implicit", "client_credentials", "refresh_token"]}`

        If jwks keys are not provided explicitly, will be generated based on provided `key_type` algorithm (rsa by default).

        TTLs for tokens and authorization code can be customized. The defaults are:

        `authorization_code_ttl` - 10 minutes
        `access_token_ttl` - 1 hour
        `id_token_ttl` - 1 hour
        `refresh_token_ttl` - 30 days

        If you want to enable dynamic client registration set `{"enable_dynamic_client_registration": true}`.

        If you want to create FAPI read write compliant server set: `{"profiles"": ["fapi_rw"]}`.

        If you want to enforce PKCE set `{"enforce_pkce": true}`.
      tags:
      - servers
      summary: Create authorization server
      operationId: createAuthorizationServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Server
        in: body
        schema:
          $ref: '#/definitions/Server'
      - type: boolean
        x-go-name: WithDemoClient
        description: With demo client
        name: with_demo_client
        in: query
      responses:
        "201":
          description: Server
          schema:
            $ref: '#/definitions/Server'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers-bindings:
    get:
      security:
      - admin: []
      description: List servers bindings.
      tags:
      - servers
      summary: List servers bindings
      operationId: listServersBindings
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: ServersBindings
          schema:
            $ref: '#/definitions/ServersBindings'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}:
    get:
      security:
      - admin: []
      description: Get authorization server.
      tags:
      - servers
      summary: Get authorization server
      operationId: getAuthorizationServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: Server
          schema:
            $ref: '#/definitions/Server'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update authorization server.
      tags:
      - servers
      summary: Update authorization server
      operationId: updateAuthorizationServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - name: Server
        in: body
        schema:
          $ref: '#/definitions/Server'
      responses:
        "200":
          description: Server
          schema:
            $ref: '#/definitions/Server'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete authorization server.
      tags:
      - servers
      summary: Delete authorization server
      operationId: deleteAuthorizationServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "204":
          description: ' Authorization server has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/apis:
    get:
      security:
      - admin: []
      description: List APIs.
      tags:
      - apis
      summary: List APIs
      operationId: listAPIsByServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Server id
        name: aid
        in: path
        required: true
      - type: boolean
        x-go-name: WithoutDataClassifications
        description: List apis that have no data classifications
        name: without_data_classifications
        in: query
      - type: array
        items:
          type: string
        x-go-name: DataClassification
        description: List apis that have given data classifications
        name: data_classification
        in: query
      responses:
        "200":
          description: ServerAPIs
          schema:
            $ref: '#/definitions/ServerAPIs'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/bind/{rid}:
    post:
      security:
      - admin: []
      description: Bind server.
      tags:
      - servers
      summary: Bind server
      operationId: bindServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Rid
        description: Dependent server id
        name: rid
        in: path
        required: true
      responses:
        "200":
          description: ServerToServer
          schema:
            $ref: '#/definitions/ServerToServer'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/claims:
    get:
      security:
      - admin: []
      description: List claims.
      tags:
      - claims
      summary: List claims
      operationId: listClaims
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: Claims
          schema:
            $ref: '#/definitions/Claims'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/clients:
    get:
      security:
      - admin: []
      description: Returns clients created by admins and developers. If client has
        been created by a developer, client secret will be empty.
      tags:
      - clients
      summary: List clients
      operationId: listClients
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ClientsForAdmin
          schema:
            $ref: '#/definitions/ClientsForAdmin'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/dashboards:
    get:
      security:
      - admin: []
      description: List links to dashboards.
      tags:
      - servers
      summary: List links to dashboards
      operationId: listDashboards
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: Dashboards
          schema:
            $ref: '#/definitions/Dashboards'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/gateways:
    get:
      security:
      - admin: []
      description: List gateways.
      tags:
      - gateways
      summary: List gateways
      operationId: listGateways
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: Gateways
          schema:
            $ref: '#/definitions/Gateways'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps:
    get:
      security:
      - admin: []
      description: List IDPs
      tags:
      - idps
      operationId: listIDPs
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: IDPsResponse
          schema:
            $ref: '#/definitions/IDPsResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/azure:
    post:
      security:
      - admin: []
      description: Create Azure IDP.
      tags:
      - idps
      summary: Create Azure IDP
      operationId: createAzureIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: AzureIDP
        name: AzureIDP
        in: body
        schema:
          $ref: '#/definitions/AzureIDP'
      responses:
        "201":
          description: AzureIDP
          schema:
            $ref: '#/definitions/AzureIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/azure/{iid}:
    get:
      security:
      - admin: []
      description: Get Azure IDP.
      tags:
      - idps
      summary: Get Azure IDP
      operationId: getAzureIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: AzureIDP
          schema:
            $ref: '#/definitions/AzureIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update Azure IDP.
      tags:
      - idps
      summary: Update Azure IDP
      operationId: updateAzureIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: AzureIDP
        name: AzureIDP
        in: body
        schema:
          $ref: '#/definitions/AzureIDP'
      responses:
        "200":
          description: AzureIDP
          schema:
            $ref: '#/definitions/AzureIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/azureb2c:
    post:
      security:
      - admin: []
      description: Create AzureB2C IDP.
      tags:
      - idps
      summary: Create AzureB2C IDP
      operationId: createAzureB2CIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: AzureB2CIDP
        name: AzureB2CIDP
        in: body
        schema:
          $ref: '#/definitions/AzureB2CIDP'
      responses:
        "201":
          description: AzureB2CIDP
          schema:
            $ref: '#/definitions/AzureB2CIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/azureb2c/{iid}:
    get:
      security:
      - admin: []
      description: Get AzureB2C IDP.
      tags:
      - idps
      summary: Get AzureB2C IDP
      operationId: getAzureB2CIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: AzureB2CIDP
          schema:
            $ref: '#/definitions/AzureB2CIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update AzureB2C IDP.
      tags:
      - idps
      summary: Update AzureB2C IDP
      operationId: updateAzureB2CIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: AzureB2CIDP
        name: AzureB2CIDP
        in: body
        schema:
          $ref: '#/definitions/AzureB2CIDP'
      responses:
        "200":
          description: AzureB2CIDP
          schema:
            $ref: '#/definitions/AzureB2CIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/cognito:
    post:
      security:
      - admin: []
      description: Create Cognito IDP.
      tags:
      - idps
      summary: Create Cognito IDP
      operationId: createCognitoIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: CognitoIDP
        name: CognitoIDP
        in: body
        schema:
          $ref: '#/definitions/CognitoIDP'
      responses:
        "201":
          description: CognitoIDP
          schema:
            $ref: '#/definitions/CognitoIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/cognito/{iid}:
    get:
      security:
      - admin: []
      description: Get Cognito IDP.
      tags:
      - idps
      summary: Get Cognito IDP
      operationId: getCognitoIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: CognitoIDP
          schema:
            $ref: '#/definitions/CognitoIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update Cognito IDP.
      tags:
      - idps
      summary: Update Cognito IDP
      operationId: updateCognitoIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: CognitoIDP
        name: CognitoIDP
        in: body
        schema:
          $ref: '#/definitions/CognitoIDP'
      responses:
        "200":
          description: CognitoIDP
          schema:
            $ref: '#/definitions/CognitoIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/custom:
    post:
      security:
      - admin: []
      description: Create Custom IDP.
      tags:
      - idps
      summary: Create Custom IDP
      operationId: createCustomIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: CustomIDP
        name: CustomIDP
        in: body
        schema:
          $ref: '#/definitions/CustomIDP'
      responses:
        "201":
          description: CustomIDP
          schema:
            $ref: '#/definitions/CustomIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/custom/{iid}:
    get:
      security:
      - admin: []
      description: Get Custom IDP.
      tags:
      - idps
      summary: Get Custom IDP
      operationId: getCustomIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: CustomIDP
          schema:
            $ref: '#/definitions/CustomIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update Custom IDP.
      tags:
      - idps
      summary: Update Custom IDP
      operationId: updateCustomIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: CustomIDP
        name: CustomIDP
        in: body
        schema:
          $ref: '#/definitions/CustomIDP'
      responses:
        "200":
          description: CustomIDP
          schema:
            $ref: '#/definitions/CustomIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/github:
    post:
      security:
      - admin: []
      description: Create Github IDP.
      tags:
      - idps
      summary: Create Github IDP
      operationId: createGithubIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: GithubIDP
        name: GithubIDP
        in: body
        schema:
          $ref: '#/definitions/GithubIDP'
      responses:
        "201":
          description: GithubIDP
          schema:
            $ref: '#/definitions/GithubIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/github/{iid}:
    get:
      security:
      - admin: []
      description: Get Github IDP.
      tags:
      - idps
      summary: Get Github IDP
      operationId: getGithubIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: GithubIDP
          schema:
            $ref: '#/definitions/GithubIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update Github IDP.
      tags:
      - idps
      summary: Update Github IDP
      operationId: updateGithubIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: GithubIDP
        name: GithubIDP
        in: body
        schema:
          $ref: '#/definitions/GithubIDP'
      responses:
        "200":
          description: GithubIDP
          schema:
            $ref: '#/definitions/GithubIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/intelli_trust:
    post:
      security:
      - admin: []
      description: Create IntelliTrust IDP.
      tags:
      - idps
      summary: Create IntelliTrust IDP
      operationId: createIntelliTrustIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: IntelliTrustIDP
        name: IntelliTrustIDP
        in: body
        schema:
          $ref: '#/definitions/IntelliTrustIDP'
      responses:
        "201":
          description: IntelliTrustIDP
          schema:
            $ref: '#/definitions/IntelliTrustIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/intelli_trust/{iid}:
    get:
      security:
      - admin: []
      description: Get IntelliTrust IDP.
      tags:
      - idps
      summary: Get IntelliTrust IDP
      operationId: getIntelliTrustIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: IntelliTrustIDP
          schema:
            $ref: '#/definitions/IntelliTrustIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update IntelliTrust IDP.
      tags:
      - idps
      summary: Update IntelliTrust IDP
      operationId: updateIntelliTrustIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: IntelliTrustIDP
        name: IntelliTrustIDP
        in: body
        schema:
          $ref: '#/definitions/IntelliTrustIDP'
      responses:
        "200":
          description: IntelliTrustIDP
          schema:
            $ref: '#/definitions/IntelliTrustIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/oidc:
    post:
      security:
      - admin: []
      description: Create OIDC IDP.
      tags:
      - idps
      summary: Create OIDC IDP
      operationId: createOIDCIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: OIDCIDP
        name: OIDCIDP
        in: body
        schema:
          $ref: '#/definitions/OIDCIDP'
      responses:
        "201":
          description: OIDCIDP
          schema:
            $ref: '#/definitions/OIDCIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/oidc/{iid}:
    get:
      security:
      - admin: []
      description: Get OIDC IDP.
      tags:
      - idps
      summary: Get OIDC IDP
      operationId: getOIDCIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: OIDCIDP
          schema:
            $ref: '#/definitions/OIDCIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update OIDC IDP.
      tags:
      - idps
      summary: Update OIDC IDP
      operationId: updateOIDCIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: OIDCIDP
        name: OIDCIDP
        in: body
        schema:
          $ref: '#/definitions/OIDCIDP'
      responses:
        "200":
          description: OIDCIDP
          schema:
            $ref: '#/definitions/OIDCIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/okta:
    post:
      security:
      - admin: []
      description: Create Okta IDP.
      tags:
      - idps
      summary: Create Okta IDP
      operationId: createOktaIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: OktaIDP
        name: OktaIDP
        in: body
        schema:
          $ref: '#/definitions/OktaIDP'
      responses:
        "201":
          description: OktaIDP
          schema:
            $ref: '#/definitions/OktaIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/okta/{iid}:
    get:
      security:
      - admin: []
      description: Get Okta IDP.
      tags:
      - idps
      summary: Get Okta IDP
      operationId: getOktaIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: OktaIDP
          schema:
            $ref: '#/definitions/OktaIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update Okta IDP.
      tags:
      - idps
      summary: Update Okta IDP
      operationId: updateOktaIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: OktaIDP
        name: OktaIDP
        in: body
        schema:
          $ref: '#/definitions/OktaIDP'
      responses:
        "200":
          description: OktaIDP
          schema:
            $ref: '#/definitions/OktaIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/saml:
    post:
      security:
      - admin: []
      description: Create SAML IDP.
      tags:
      - idps
      summary: Create SAML IDP
      operationId: createSAMLIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: SAMLIDP
        name: SAMLIDP
        in: body
        schema:
          $ref: '#/definitions/SAMLIDP'
      responses:
        "201":
          description: SAMLIDP
          schema:
            $ref: '#/definitions/SAMLIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/saml/{iid}:
    get:
      security:
      - admin: []
      description: Get SAML IDP.
      tags:
      - idps
      summary: Get SAML IDP
      operationId: getSAMLIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: SAMLIDP
          schema:
            $ref: '#/definitions/SAMLIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update SAML IDP.
      tags:
      - idps
      summary: Update SAML IDP
      operationId: updateSAMLIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: SAMLIDP
        name: SAMLIDP
        in: body
        schema:
          $ref: '#/definitions/SAMLIDP'
      responses:
        "200":
          description: SAMLIDP
          schema:
            $ref: '#/definitions/SAMLIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/static:
    post:
      security:
      - admin: []
      description: Create Static IDP.
      tags:
      - idps
      summary: Create Static IDP
      operationId: createStaticIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: StaticIDP
        name: StaticIDP
        in: body
        schema:
          $ref: '#/definitions/StaticIDP'
      responses:
        "201":
          description: StaticIDP
          schema:
            $ref: '#/definitions/StaticIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/static/{iid}:
    get:
      security:
      - admin: []
      description: Get Static IDP.
      tags:
      - idps
      summary: Get Static IDP
      operationId: getStaticIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "200":
          description: StaticIDP
          schema:
            $ref: '#/definitions/StaticIDP'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update Static IDP.
      tags:
      - idps
      summary: Update Static IDP
      operationId: updateStaticIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      - description: StaticIDP
        name: StaticIDP
        in: body
        schema:
          $ref: '#/definitions/StaticIDP'
      responses:
        "200":
          description: StaticIDP
          schema:
            $ref: '#/definitions/StaticIDP'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/idps/{iid}:
    delete:
      security:
      - admin: []
      tags:
      - idps
      summary: Delete IDP.
      operationId: deleteIDP
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Iid
        description: IDP id
        name: iid
        in: path
        required: true
      responses:
        "204":
          description: ' IDP has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/policies:
    get:
      security:
      - admin: []
      description: List server policies by type.
      tags:
      - policies
      summary: List policies
      operationId: listPolicies
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: api
        x-go-name: PolicyType
        description: Policy type
        name: policy_type
        in: query
      responses:
        "200":
          description: Policies
          schema:
            $ref: '#/definitions/Policies'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/policy-execution-points:
    get:
      security:
      - admin: []
      description: List policy execution points.
      tags:
      - policies
      summary: List policy execution points
      operationId: listPolicyExecutionPoints
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: PolicyExecutionPoints
          schema:
            $ref: '#/definitions/PolicyExecutionPoints'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: |-
        Set policy execution points.

        Available execution points:
        scope_client_assignment
        scope_user_grant
        server_client_assignment
        server_user_token
        client_user_token
        api
      tags:
      - policies
      summary: Set policy execution points
      operationId: setPolicyExecutionPoints
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - name: Executions
        in: body
        schema:
          $ref: '#/definitions/PolicyExecutionPoints'
      responses:
        "200":
          description: PolicyExecutionPoints
          schema:
            $ref: '#/definitions/PolicyExecutionPoints'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/scopes:
    get:
      security:
      - admin: []
      description: List scopes.
      tags:
      - scopes
      summary: List scopes
      operationId: listScopes
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ScopesWithServices
          schema:
            $ref: '#/definitions/ScopesWithServices'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/server-consent:
    get:
      security:
      - admin: []
      description: Get server consent.
      tags:
      - servers
      summary: Get server consent
      operationId: getServerConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ServerConsent
          schema:
            $ref: '#/definitions/ServerConsent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Set server consent. For custom server consent a client in system
        server is created automatically.
      tags:
      - servers
      summary: Set server consent
      operationId: setServerConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - description: Server consent
        name: ServerConsent
        in: body
        schema:
          $ref: '#/definitions/ServerConsent'
      responses:
        "200":
          description: ServerConsent
          schema:
            $ref: '#/definitions/ServerConsent'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/services:
    get:
      security:
      - admin: []
      description: List services.
      tags:
      - services
      summary: List services
      operationId: listServices
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ServicesResponse
          schema:
            $ref: '#/definitions/ServicesResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/servers/{aid}/unbind/{rid}:
    delete:
      security:
      - admin: []
      description: Unbind server.
      tags:
      - servers
      summary: Unbind server
      operationId: unbindServer
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Rid
        description: Dependent server id
        name: rid
        in: path
        required: true
      responses:
        "200":
          description: ServerToServer
          schema:
            $ref: '#/definitions/ServerToServer'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/services:
    post:
      security:
      - admin: []
      description: Service name is required. Service id will be generated if not provided.
      tags:
      - services
      summary: Create service
      operationId: createService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Service
        in: body
        schema:
          $ref: '#/definitions/Service'
      responses:
        "201":
          description: Service
          schema:
            $ref: '#/definitions/Service'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/services/{sid}:
    get:
      security:
      - admin: []
      description: Get service.
      tags:
      - services
      summary: Get service
      operationId: getService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      responses:
        "200":
          description: ServiceWithScopesResponse
          schema:
            $ref: '#/definitions/ServiceWithScopesResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update service.
      tags:
      - services
      summary: Update service
      operationId: updateService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      - name: Service
        in: body
        schema:
          $ref: '#/definitions/Service'
      responses:
        "200":
          description: Service
          schema:
            $ref: '#/definitions/Service'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: Delete service.
      tags:
      - services
      summary: Delete service
      operationId: deleteService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      responses:
        "204":
          description: ' Service has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/services/{sid}/apis:
    get:
      security:
      - admin: []
      description: List APIs.
      tags:
      - apis
      summary: List APIs
      operationId: listAPIsByService
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Sid
        description: Service id
        name: sid
        in: path
        required: true
      - type: boolean
        x-go-name: WithoutDataClassifications
        description: List apis that have no data classifications
        name: without_data_classifications
        in: query
      - type: array
        items:
          type: string
        x-go-name: DataClassification
        description: List apis that have given data classifications
        name: data_classification
        in: query
      responses:
        "200":
          description: APIs
          schema:
            $ref: '#/definitions/APIs'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - admin: []
      description: |-
        Remove all apis and policies created during import for a service.

        If policy is used by another service it will not be removed.

        If service is connected to a gateway, it will be disconnected.

        If a gateway api group is connected to this service, it will be disconnected.
      tags:
      - services
      summary: Remove imported apis and policies
      operationId: removeSpecification
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      responses:
        "200":
          description: RemoveServiceConfigurationResult
          schema:
            $ref: '#/definitions/RemoveServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/services/{sid}/apis/import/file:
    post:
      security:
      - admin: []
      description: It removes all apis before import.
      consumes:
      - multipart/form-data
      tags:
      - services
      summary: Import OpenAPI specification from file
      operationId: importSpecificationFromFile
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      - type: string
        x-go-name: GatewayType
        name: gateway_type
        in: query
      - type: file
        x-go-name: File
        name: file
        in: formData
      responses:
        "200":
          description: ImportServiceConfigurationResult
          schema:
            $ref: '#/definitions/ImportServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/services/{sid}/apis/import/text:
    post:
      security:
      - admin: []
      description: It removes all apis and policies (created by previous import) before
        import.
      consumes:
      - text/plain
      tags:
      - services
      summary: Import OpenAPI specification from text
      operationId: importSpecificationFromText
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      - x-go-name: Text
        name: text
        in: body
        schema:
          type: string
      responses:
        "200":
          description: ImportServiceConfigurationResult
          schema:
            $ref: '#/definitions/ImportServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/services/{sid}/apis/import/url:
    post:
      security:
      - admin: []
      description: It removes all apis before import.
      consumes:
      - multipart/form-data
      tags:
      - services
      summary: Import OpenAPI specification from url
      operationId: importSpecificationFromURL
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Sid
        name: sid
        in: path
        required: true
      - type: string
        x-go-name: GatewayType
        name: gateway_type
        in: query
      - type: string
        x-go-name: URL
        name: url
        in: formData
      responses:
        "200":
          description: ImportServiceConfigurationResult
          schema:
            $ref: '#/definitions/ImportServiceConfigurationResult'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/admin/{tid}/tenant:
    get:
      security:
      - admin: []
      description: Get tenant.
      tags:
      - tenants
      summary: Get tenant
      operationId: getAdminTenant
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - admin: []
      description: Update tenant.
      tags:
      - tenants
      summary: Update tenant
      operationId: updateAdminTenant
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Tenant
        in: body
        schema:
          $ref: '#/definitions/Tenant'
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/developer/{tid}/{aid}/clients:
    get:
      security:
      - developer: []
      description: List clients owner by developer.
      tags:
      - clients
      summary: List clients
      operationId: listClientsForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ClientsForDeveloper
          schema:
            $ref: '#/definitions/ClientsForDeveloper'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
      - developer: []
      description: |-
        Client must be created under existing tenant and authorization server.

        Authorization server id where client should be assigned must be provided in the request body.

        Client can't be created in a system authorization server.

        Client id and secret are generated upon creation.

        If grant type is not set, client will get authorization code grant type assigned with code as response type.

        Default token authentication method is client_secret_basic.

        It might happen that it won't be possible to create a client with specified scopes.
        Scopes assignment can be protected by policies defined by administrator.
      tags:
      - clients
      summary: Create new OAuth client
      operationId: createClientForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      - name: Client
        in: body
        schema:
          $ref: '#/definitions/CreateClientDeveloperRequest'
      responses:
        "201":
          description: ClientDeveloperResponse
          schema:
            $ref: '#/definitions/ClientDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/developer/{tid}/{aid}/clients/{cid}:
    get:
      security:
      - developer: []
      description: Get client owned by developer.
      tags:
      - clients
      summary: Get client
      operationId: getClientForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "200":
          description: ClientDeveloperResponse
          schema:
            $ref: '#/definitions/ClientDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - developer: []
      description: The entire client object must be send for update.
      tags:
      - clients
      summary: Update client
      operationId: updateClientForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      - name: Client
        in: body
        schema:
          $ref: '#/definitions/UpdateClientDeveloperRequest'
      responses:
        "200":
          description: ClientDeveloperResponse
          schema:
            $ref: '#/definitions/ClientDeveloperResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - developer: []
      description: Delete client owned by developer.
      tags:
      - clients
      summary: Delete client
      operationId: deleteClientForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/developer/{tid}/{aid}/servers:
    get:
      security:
      - developer: []
      description: Returns list of authorization severs.
      tags:
      - servers
      summary: List authorization servers
      operationId: listServersForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ListServersDeveloperResponse
          schema:
            $ref: '#/definitions/ListServersDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/developer/{tid}/{aid}/servers/{rid}:
    get:
      security:
      - developer: []
      description: Returns authorization server details with list of scopes.
      tags:
      - servers
      summary: Get authorization server
      operationId: getServerForDeveloper
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: developer
        x-go-name: Aid
        description: Developer server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Rid
        description: Regular server id
        name: rid
        in: path
        required: true
      responses:
        "200":
          description: GetServerWithScopesDeveloperResponse
          schema:
            $ref: '#/definitions/GetServerWithScopesDeveloperResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/configuration:
    get:
      security:
      - setup: []
      description: Export entire tenant configuration as json.
      tags:
      - tenants
      summary: Export configuration
      operationId: exportConfiguration
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: query
      responses:
        "200":
          description: Dump
          schema:
            $ref: '#/definitions/Dump'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - setup: []
      description: Allows to quickly import tenant basic configuration.
      tags:
      - tenants
      summary: Import configuration
      operationId: importConfiguration
      parameters:
      - name: Configuration
        in: body
        schema:
          $ref: '#/definitions/Dump'
      - type: string
        format: insertMode
        x-go-name: Mode
        description: Insert mode
        name: mode
        in: query
      responses:
        "204":
          description: ' configuration has been imported'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/tenants:
    post:
      security:
      - setup: []
      description: |-
        Tenant must have unique id, if it's not provided will be generated.

        Tenant name must be provided.

        Tenant url is optional and if omitted, it is set to ACP deployment url with
        appened id of a tenant, example: https://example.com/default.

        When tenant is created, preconfigured authorization servers with default scopes,
        services and oauth clients are automatically created underneath. See API response for more details.
      tags:
      - tenants
      summary: Create tenant
      operationId: createTenant
      parameters:
      - name: Tenant
        in: body
        schema:
          $ref: '#/definitions/Tenant'
      - type: boolean
        x-go-name: WithDefaultWorkspaces
        description: Create tenant with default workspaces
        name: with_default_workspaces
        in: query
      responses:
        "201":
          description: TenantCreated
          schema:
            $ref: '#/definitions/TenantCreated'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/tenants/{tid}:
    get:
      security:
      - setup: []
      description: Get tenant system api.
      tags:
      - tenants
      summary: Get tenant
      operationId: getTenant
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - setup: []
      description: Update tenant system api.
      tags:
      - tenants
      summary: Update tenant
      operationId: updateTenant
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: Tenant
        in: body
        schema:
          $ref: '#/definitions/Tenant'
      responses:
        "200":
          description: Tenant
          schema:
            $ref: '#/definitions/Tenant'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - setup: []
      description: Deletes index in elasticsearch if exists as well.
      tags:
      - tenants
      summary: Delete tenant
      operationId: deleteTenant
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      responses:
        "204":
          description: ' Tenant has been deleted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/clients/{aid}:
    get:
      security:
      - system:
        - view_clients
      description: This API lists clients by server
      tags:
      - clients
      summary: List clients by authorization server
      operationId: listClientsSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: Clients
          schema:
            $ref: '#/definitions/Clients'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/consents:
    get:
      security:
      - system:
        - view_consents
      description: |-
        User identifier must be provided in the header.

        To limit list of consents, you can provide consent identifiers in query param.
      tags:
      - consents
      summary: List user consents
      operationId: listUserConsentsSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: array
        items:
          type: string
        x-go-name: ConsentIDs
        name: consent_id
        in: query
      - type: string
        x-go-name: Subject
        description: user identifier
        name: x-subject
        in: header
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    patch:
      security:
      - system:
        - manage_consents
      description: |-
        This is a non-standardized PATCH request.

        Allows to update multiple consents approval in one API call.

        User identifier must be provided in the header.

        See ConsentGrantPatchRequest object for more information.
      tags:
      - consents
      summary: Patch consent grants
      operationId: patchConsentGrantsSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: ConsentGrantPatchRequest
        in: body
        schema:
          $ref: '#/definitions/ConsentGrantPatchRequest'
      - type: string
        x-go-name: Subject
        description: user identifier
        name: x-subject
        in: header
      responses:
        "201":
          description: ConsentGrantPatchResponse
          schema:
            $ref: '#/definitions/ConsentGrantPatchResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/consents/{action}:
    get:
      security:
      - system:
        - view_consents
      description: User identifier must be provided in the header.
      tags:
      - consents
      summary: List user consents by action
      operationId: listUserConsentsByActionSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Action
        description: Consent action id
        name: action
        in: path
        required: true
      - type: string
        x-go-name: Subject
        description: user identifier
        name: x-subject
        in: header
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/gateways/configuration:
    get:
      security:
      - system:
        - read_gateway_configuration
      description: This endpoint is used by api authorizers to fetch rules, policies
        and services to protect.
      tags:
      - gateways
      summary: Get configuration for a gateway
      operationId: getGatewayConfiguration
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: latest
        x-go-name: AuthorizerVersion
        description: Authorizer version
        name: authorizer_version
        in: query
      responses:
        "200":
          description: GatewayConfiguration
          schema:
            $ref: '#/definitions/GatewayConfiguration'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
      - system:
        - write_gateway_configuration
      description: This endpoint is used to push apis protected by api gateway to
        acp.
      tags:
      - gateways
      summary: Set configuration for a gateway
      operationId: setGatewayConfiguration
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: SetGatewayConfigurationRequest
        in: body
        schema:
          $ref: '#/definitions/SetGatewayConfigurationRequest'
      - type: string
        default: latest
        x-go-name: AuthorizerVersion
        description: Authorizer version
        name: authorizer_version
        in: query
      responses:
        "200":
          description: SetGatewayConfigurationResponse
          schema:
            $ref: '#/definitions/SetGatewayConfigurationResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/gateways/introspect:
    post:
      security:
      - system:
        - introspect_tokens
      description: Introspect access token endpoint as a gateway
      consumes:
      - application/x-www-form-urlencoded
      tags:
      - oauth2
      operationId: gatewayIntrospect
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: Token
        name: token
        in: formData
      responses:
        "200":
          description: IntrospectResponse
          schema:
            $ref: '#/definitions/IntrospectResponse'
        "400":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/gateways/requests:
    post:
      security:
      - system:
        - push_gateway_requests
      description: Push gateway request.
      tags:
      - gateways
      summary: Push gateway request
      operationId: pushGatewayRequests
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: GatewayRequestEvents
        in: body
        schema:
          $ref: '#/definitions/GatewayRequestEvents'
      - type: string
        default: latest
        x-go-name: AuthorizerVersion
        description: Authorizer version
        name: authorizer_version
        in: query
      responses:
        "200":
          description: GatewayRequestsEventsResponse
          schema:
            $ref: '#/definitions/GatewayRequestsEventsResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "429":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/logins/{login}:
    get:
      security:
      - system:
        - manage_logins
      description: This API is used by a login page to make a decision if user should
        authenticate.
      tags:
      - logins
      summary: Get login request
      operationId: getLoginRequest
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      responses:
        "200":
          description: LoginSessionResponse
          schema:
            $ref: '#/definitions/LoginSessionResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/logins/{login}/accept:
    post:
      security:
      - system:
        - manage_logins
      description: This API is used by a login page to notify ACP that user has successfully
        authenticated.
      tags:
      - logins
      summary: Accept login request
      operationId: acceptLoginRequest
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      - name: AcceptLogin
        in: body
        schema:
          $ref: '#/definitions/AcceptSession'
      responses:
        "200":
          description: LoginAccepted
          schema:
            $ref: '#/definitions/LoginAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/logins/{login}/reject:
    post:
      security:
      - system:
        - manage_logins
      description: This API is used by a login page to notify ACP that login has been
        rejected.
      tags:
      - logins
      summary: Reject login request
      operationId: rejectLoginRequest
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      - name: RejectLogin
        in: body
        schema:
          $ref: '#/definitions/RejectSession'
      responses:
        "200":
          description: LoginRejected
          schema:
            $ref: '#/definitions/LoginRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/open-banking/account-access-consent/{login}:
    get:
      security:
      - system:
        - manage_openbanking_consents
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create account access consent.
      tags:
      - openbanking
      summary: Get account access consent
      operationId: getAccountAccessConsentSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      responses:
        "200":
          description: GetAccountAccessConsentResponse
          schema:
            $ref: '#/definitions/GetAccountAccessConsentResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/open-banking/account-access-consent/{login}/accept:
    post:
      security:
      - system:
        - manage_openbanking_consents
      description: This API can be used by a custom openbanking consent page to notify
        ACP that user granted consent to a given accounts.
      tags:
      - openbanking
      summary: Accept account access consent
      operationId: acceptAccountAccessConsentSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      - name: AcceptAccountAccessConsent
        in: body
        schema:
          $ref: '#/definitions/AcceptAccountAccessConsentRequest'
      responses:
        "200":
          description: AccountAccessConsentAccepted
          schema:
            $ref: '#/definitions/AccountAccessConsentAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/open-banking/account-access-consent/{login}/reject:
    post:
      security:
      - system:
        - manage_openbanking_consents
      description: This API can be used by a custom openbanking consent page to notify
        ACP that user rejected access to accounts.
      tags:
      - openbanking
      summary: Reject account access consent
      operationId: rejectAccountAccessConsentSystem
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      - name: RejectAccountAccessConsent
        in: body
        schema:
          $ref: '#/definitions/RejectAccountAccessConsentRequest'
      responses:
        "200":
          description: AccountAccessConsentRejected
          schema:
            $ref: '#/definitions/AccountAccessConsentRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/open-banking/consents:
    post:
      security:
      - system:
        - manage_openbanking_consents
      description: This API returns the list of openbanking consents filtered by the
        providced account ids.
      tags:
      - openbanking
      summary: Get openbanking consents given for provided accounts.
      operationId: listConsentsByAccounts
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - name: ListConsentsByAccountsRequest
        in: body
        schema:
          $ref: '#/definitions/ListConsentsByAccountsRequest'
      responses:
        "200":
          description: ListAccountAccessConsentsWithClient
          schema:
            $ref: '#/definitions/ListAccountAccessConsentsWithClient'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - system:
        - manage_openbanking_consents
      description: |-
        This API revokes openbanking consents matching provided parameters.

        Currently supporting removal by client id.
        Use ?clientID={clientID} to remove all consents by a given client.
      tags:
      - openbanking
      summary: Revoke openbanking consents.
      operationId: revokeOpenbankingConsents
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ClientID
        name: clientID
        in: query
      responses:
        "204":
          description: ' Consents have been revoked'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/open-banking/consents/by-client/{clientID}:
    get:
      security:
      - system:
        - manage_openbanking_consents
      description: |-
        This API returns the list of openbanking consents given to a specified TPP.
        It includes all consents from all users.
      tags:
      - openbanking
      summary: Get openbanking consents given to a client (TPP).
      operationId: listConsentsByClientID
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ClientID
        name: clientID
        in: path
        required: true
      responses:
        "200":
          description: ListAccountAccessConsents
          schema:
            $ref: '#/definitions/ListAccountAccessConsents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/open-banking/consents/{consentID}:
    delete:
      security:
      - system:
        - manage_openbanking_consents
      description: This API revokes openbanking consent by consent id.
      tags:
      - openbanking
      summary: Revoke openbanking consent by ID.
      operationId: revokeOpenbankingConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: ConsentID
        name: consentID
        in: path
        required: true
      responses:
        "204":
          description: ' Consent has been revoked'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/scope-grants/{login}:
    get:
      security:
      - system:
        - manage_consents
      description: This API is used by a consent page to display requested scopes.
      tags:
      - logins
      summary: Get consent request
      operationId: getScopeGrantRequest
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      responses:
        "200":
          description: ScopeGrantSessionResponse
          schema:
            $ref: '#/definitions/ScopeGrantSessionResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/scope-grants/{login}/accept:
    post:
      security:
      - system:
        - manage_scope_grants
      description: This API is used by a consent page to notify ACP that user granted
        consent.
      tags:
      - logins
      summary: Accept login request
      operationId: acceptScopeGrantRequest
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      - name: AcceptScopeGrant
        in: body
        schema:
          $ref: '#/definitions/AcceptScopeGrant'
      responses:
        "200":
          description: ScopeGrantAccepted
          schema:
            $ref: '#/definitions/ScopeGrantAccepted'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /api/system/{tid}/scope-grants/{login}/reject:
    post:
      security:
      - system:
        - manage_scope_grants
      description: This API is used by a consent page to notify ACP that scope grant
        has been rejected.
      tags:
      - logins
      summary: Reject login request
      operationId: rejectScopeGrantRequest
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        x-go-name: LoginID
        name: login
        in: path
        required: true
      - name: RejectScopeGrant
        in: body
        schema:
          $ref: '#/definitions/RejectScopeGrant'
      responses:
        "200":
          description: ScopeGrantRejected
          schema:
            $ref: '#/definitions/ScopeGrantRejected'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/.well-known/jwks.json:
    get:
      description: |-
        This endpoint returns the signing key(s) the client uses to validate
        signatures from the authorization server.
      tags:
      - oauth2
      summary: JSON Web Keys Discovery endpoint
      operationId: jwks
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: JWKs
          schema:
            $ref: '#/definitions/JWKs'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/.well-known/openid-configuration:
    get:
      description: Returns OpenID configuration.
      tags:
      - oauth2
      summary: OpenID Connect Discovery endpoint
      operationId: wellKnown
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: wellKnown
          schema:
            $ref: '#/definitions/wellKnown'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/clients:
    get:
      security:
      - default:
        - list_clients_with_access
      description: Each client contains list of scopes that user agreed to.
      tags:
      - clients
      summary: List clients that user shared data with
      operationId: listClientsWithAccess
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: ListClientsWithAccess
          schema:
            $ref: '#/definitions/ListClientsWithAccess'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/clients/{cid}:
    delete:
      security:
      - default:
        - revoke_client_access
      description: Upon removal client won't be able to use user data anymore.
      tags:
      - clients
      summary: Revoke client access
      operationId: revokeClientAccess
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "204":
          description: ' Client access has been revoked'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/oauth2/authorize:
    get:
      description: |-
        The authorization endpoint is used to interact with the resource
        owner and obtain an authorization grant.
      tags:
      - oauth2
      summary: The OAuth 2.0 authorize endpoint
      operationId: authorize
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: ResponseType
        name: response_type
        in: query
        required: true
      - type: string
        x-go-name: RedirectURI
        name: redirect_uri
        in: query
      - type: string
        x-go-name: ClientID
        name: client_id
        in: query
        required: true
      - type: string
        x-go-name: Scope
        name: scope
        in: query
      - type: string
        x-go-name: State
        name: state
        in: query
      responses:
        "302":
          description: emptyResponse
          schema:
            $ref: '#/definitions/emptyResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/oauth2/introspect:
    post:
      security:
      - default:
        - introspect_tokens
      description: |-
        The introspection endpoint is an OAuth 2.0 endpoint that takes a
        parameter representing an OAuth 2.0 token and returns a JSON
        document representing the meta information surrounding the
        token, including whether this token is currently active.
      consumes:
      - application/x-www-form-urlencoded
      tags:
      - oauth2
      summary: The OAuth 2.0 Introspection endpoint
      operationId: introspect
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Token
        name: token
        in: formData
      responses:
        "200":
          description: IntrospectResponse
          schema:
            $ref: '#/definitions/IntrospectResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/oauth2/register:
    post:
      security:
      - default:
        - dcr_register
      description: The OAuth 2.0 Dynamic Client Registration endpoint
      tags:
      - oauth2
      operationId: dynamicClientRegistration
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - name: Client
        in: body
        schema:
          $ref: '#/definitions/DynamicClientRegistrationRequest'
      responses:
        "201":
          description: DynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/DynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/oauth2/register/{cid}:
    get:
      security:
      - default: []
      description: The OAuth 2.0 Dynamic Client Registration Get Client endpoint
      tags:
      - oauth2
      operationId: dynamicClientRegistrationGetClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "200":
          description: DynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/DynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
    put:
      security:
      - default: []
      description: The OAuth 2.0 Dynamic Client Registration Update Client endpoint
      tags:
      - oauth2
      operationId: dynamicClientRegistrationUpdateClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      - name: Client
        in: body
        schema:
          $ref: '#/definitions/DynamicClientRegistrationRequest'
      responses:
        "200":
          description: DynamicClientRegistrationResponse
          schema:
            $ref: '#/definitions/DynamicClientRegistrationResponse'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
    delete:
      security:
      - default: []
      description: The OAuth 2.0 Dynamic Client Registration Delete Client endpoint
      tags:
      - oauth2
      operationId: dynamicClientRegistrationDeleteClient
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Cid
        description: Client id
        name: cid
        in: path
        required: true
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "401":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "403":
          description: RFC6749Error
          schema:
            $ref: '#/definitions/RFC6749Error'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/oauth2/revoke:
    post:
      security:
      - default:
        - revoke_tokens
      description: Supports revocation of access and refresh tokens.
      consumes:
      - application/x-www-form-urlencoded
      tags:
      - oauth2
      summary: The OAuth 2.0 Revocation endpoint
      operationId: revoke
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Token
        name: token
        in: formData
      responses:
        "200":
          description: emptyResponse
          schema:
            $ref: '#/definitions/emptyResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/oauth2/token:
    post:
      description: |-
        The token endpoint is used by the client to obtain an access token by
        presenting its authorization grant or refresh token.
      consumes:
      - application/x-www-form-urlencoded
      tags:
      - oauth2
      summary: The OAuth 2.0 token endpoint
      operationId: token
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: GrantType
        name: grant_type
        in: formData
        required: true
      - type: string
        x-go-name: Code
        name: code
        in: formData
      - type: string
        x-go-name: Scope
        name: scope
        in: formData
      - type: string
        x-go-name: RedirectURI
        name: redirect_uri
        in: formData
      - type: string
        x-go-name: ClientID
        name: client_id
        in: formData
      - type: string
        x-go-name: ClientSecret
        name: client_secret
        in: formData
      - type: string
        x-go-name: RefreshToken
        name: refresh_token
        in: formData
      - type: string
        x-go-name: Username
        name: username
        in: formData
      - type: string
        x-go-name: Password
        name: password
        in: formData
      responses:
        "200":
          description: tokenResponse
          schema:
            $ref: '#/definitions/tokenResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/open-banking/v3.1/aisp/account-access-consents:
    post:
      security:
      - defaultcc:
        - accounts
      description: |-
        The API allows the AISP to ask an ASPSP to create a new account-access-consent resource.

        This API effectively allows the AISP to send a copy of the consent to the ASPSP to authorize
        access to account and transaction information.
        An AISP is not able to pre-select a set of accounts for account-access-consent authorisation.
        This is because the behavior of the pre-selected accounts, after authorisation, is not clear from a Legal perspective.
        An ASPSP creates the account-access-consent resource and responds with a unique ConsentId to
        refer to the resource.
        Prior to calling the API, the AISP must have an access token issued by the ASPSP using a client
        credentials grant.
      tags:
      - openbanking
      summary: Create acount access consent
      operationId: createAccountAccessConsentRequest
      parameters:
      - type: string
        x-go-name: AuthDate
        description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        name: x-fapi-auth-date
        in: header
      - type: string
        x-go-name: CustomerIPAddress
        description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        name: x-fapi-customer-ip-address
        in: header
      - type: string
        x-go-name: InteractionID
        description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        name: x-fapi-interaction-id
        in: header
      - type: string
        x-go-name: CustomerAgent
        description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        name: x-customer-user-agent
        in: header
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant ID
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Server ID
        name: aid
        in: path
        required: true
      - description: Request
        name: Request
        in: body
        schema:
          $ref: '#/definitions/AccountAccessConsentRequest'
      responses:
        "201":
          description: AccountAccessConsentResponse
          schema:
            $ref: '#/definitions/AccountAccessConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
  /{tid}/{aid}/open-banking/v3.1/aisp/account-access-consents/introspect:
    post:
      security:
      - default:
        - introspect_openbanking_tokens
      description: Introspect openbanking account access consent.
      consumes:
      - application/x-www-form-urlencoded
      tags:
      - openbanking
      summary: Introspect openbanking account access consent
      operationId: openbankingAccountAccessConsentIntrospect
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        x-go-name: Token
        name: token
        in: formData
      responses:
        "200":
          description: IntrospectOpenbankingAccountAccessConsentResponse
          schema:
            $ref: '#/definitions/IntrospectOpenbankingAccountAccessConsentResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
  /{tid}/{aid}/open-banking/v3.1/aisp/account-access-consents/{consentID}:
    get:
      security:
      - defaultcc:
        - accounts
      description: |-
        An AISP may optionally retrieve an account-access-consent resource that they have created to check its status.

        Prior to calling the API, the AISP must have an access token issued by the ASPSP using a client credentials grant.

        The usage of this API endpoint will be subject to an ASPSP's fair usage policies.
      tags:
      - openbanking
      summary: Get aconut access consent
      operationId: getAccountAccessConsentRequest
      parameters:
      - type: string
        x-go-name: AuthDate
        description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        name: x-fapi-auth-date
        in: header
      - type: string
        x-go-name: CustomerIPAddress
        description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        name: x-fapi-customer-ip-address
        in: header
      - type: string
        x-go-name: InteractionID
        description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        name: x-fapi-interaction-id
        in: header
      - type: string
        x-go-name: CustomerAgent
        description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        name: x-customer-user-agent
        in: header
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant ID
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Server ID
        name: aid
        in: path
        required: true
      - type: string
        format: consentID
        x-go-name: ConsentID
        description: Consent id
        name: consentID
        in: path
        required: true
      responses:
        "201":
          description: AccountAccessConsentResponse
          schema:
            $ref: '#/definitions/AccountAccessConsentResponse'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      security:
      - defaultcc:
        - accounts
      description: Delete account access consent.
      tags:
      - openbanking
      summary: Delete account access consent
      operationId: deleteAccountAccessConsentRequest
      parameters:
      - type: string
        x-go-name: AuthDate
        description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        name: x-fapi-auth-date
        in: header
      - type: string
        x-go-name: CustomerIPAddress
        description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        name: x-fapi-customer-ip-address
        in: header
      - type: string
        x-go-name: InteractionID
        description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        name: x-fapi-interaction-id
        in: header
      - type: string
        x-go-name: CustomerAgent
        description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        name: x-customer-user-agent
        in: header
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant ID
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Server ID
        name: aid
        in: path
        required: true
      - type: string
        format: consentID
        x-go-name: ConsentID
        description: Consent id
        name: consentID
        in: path
        required: true
      responses:
        "204":
          description: ' Consent has been deleted'
        "400":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "405":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "406":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "415":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "429":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: ErrorResponse
          schema:
            $ref: '#/definitions/ErrorResponse'
  /{tid}/{aid}/privacy/consents:
    get:
      security:
      - default:
        - view_consents
      description: If you want to list only specific consents, provide consent identifiers
        in query params.
      tags:
      - consents
      summary: List consents
      operationId: listUserConsents
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: array
        items:
          type: string
        x-go-name: ConsentIDs
        description: optional identifiers of consents to be returned
        name: consent_id
        in: query
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
    patch:
      security:
      - default:
        - manage_consents
      description: |-
        This is a non-standardized PATCH request.

        Allows to update multiple consents approval in one API call.

        See ConsentGrantPatchRequest object for more information.
      tags:
      - consents
      summary: Patch consent grants
      operationId: patchConsentGrants
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - name: ConsentGrantPatchRequest
        in: body
        schema:
          $ref: '#/definitions/ConsentGrantPatchRequest'
      responses:
        "201":
          description: ConsentGrantPatchResponse
          schema:
            $ref: '#/definitions/ConsentGrantPatchResponse'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/privacy/consents/grant:
    post:
      security:
      - default:
        - manage_consents
      description: |-
        Consent id must be provided in the request body.

        When a user grants consent which was already granted, it does not result in an error but it silently skipped instead.
      tags:
      - consents
      summary: Grant privacy consent
      operationId: grantConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - name: ConsentGrant
        in: body
        schema:
          $ref: '#/definitions/ConsentGrantRequest'
      responses:
        "201":
          description: ConsentGrant
          schema:
            $ref: '#/definitions/ConsentGrant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "409":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/privacy/consents/revoke:
    post:
      security:
      - default:
        - manage_consents
      description: |-
        This API can be used to withdraw a consent which user previously gave.

        Consent id must be provided in the request body.

        When consent has the can_be_withdrawn flag set to false the API fails with an error saying that the consent cannot be revoked.
        This flag is useful for scenarios in which the application cannot function without the consent from a User.
      tags:
      - consents
      summary: Revoke privacy consent
      operationId: revokeConsent
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - name: ConsentGrant
        in: body
        schema:
          $ref: '#/definitions/ConsentGrantRequest'
      responses:
        "200":
          description: ConsentGrant
          schema:
            $ref: '#/definitions/ConsentGrant'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "422":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/privacy/consents/{action}:
    get:
      security:
      - default:
        - view_consents
      description: |-
        Returns any possible required consents that the app should ask the User about.

        The response includes a list of consents (including the ones user already agreed to).
        Inclusion of the consents which the user already agreed to can be used to inform the user what he already agreed to.
      tags:
      - consents
      summary: List consents by action
      operationId: listUserConsentsByAction
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Action
        description: Consent action id
        name: action
        in: path
        required: true
      responses:
        "200":
          description: ConsentsWithGrants
          schema:
            $ref: '#/definitions/ConsentsWithGrants'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/privacy/events:
    get:
      security:
      - default:
        - view_consents
      description: It is possible to provide time constraints using from and to query
        params.
      tags:
      - consents
      summary: List privacy ledger events
      operationId: listPrivacyLedgerEvents
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      - type: integer
        format: int64
        x-go-name: From
        description: Query events from timestamp (default 0)
        name: from
        in: query
      - type: integer
        format: int64
        x-go-name: To
        description: Query events to timestamp (default current time)
        name: to
        in: query
      responses:
        "200":
          description: PrivacyLedgerEvents
          schema:
            $ref: '#/definitions/PrivacyLedgerEvents'
        "401":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "403":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: HttpError
          schema:
            $ref: '#/definitions/Error'
  /{tid}/{aid}/userinfo:
    get:
      security:
      - default: []
      description: |-
        The UserInfo Endpoint is an OAuth 2.0 Protected Resource that
        returns Claims about the authenticated End-User. To obtain the requested
        Claims about the End-User, the Client makes a request to the UserInfo Endpoint
        using an Access Token obtained through OpenID Connect Authentication. These Claims
        are represented by a JSON object that contains a collection of name and value
        pairs for the Claims.
      tags:
      - oauth2
      summary: OpenID Connect Userinfo endpoint
      operationId: userinfo
      parameters:
      - type: string
        default: default
        x-go-name: Tid
        description: Tenant id
        name: tid
        in: path
        required: true
      - type: string
        default: default
        x-go-name: Aid
        description: Authorization server id
        name: aid
        in: path
        required: true
      responses:
        "200":
          description: userinfoResponse
          schema:
            $ref: '#/definitions/userinfoResponse'
        "401":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
        "404":
          description: genericError
          schema:
            $ref: '#/definitions/genericError'
definitions:
  API:
    type: object
    properties:
      can_have_policy:
        description: if false it is not possible to assign a policy
        type: boolean
        x-go-name: CanHavePolicy
      data_classifications:
        description: Data classifications
        type: array
        items:
          type: string
        x-go-name: DataClassifications
      id:
        description: scope id
        type: string
        format: apiID
        x-go-name: ID
        example: "1"
      method:
        description: HTTP request method
        type: string
        x-go-name: Method
        example: GET
      path:
        description: HTTP request path
        type: string
        x-go-name: Path
        example: /pets
      policy_id:
        description: optional id of a policy
        type: string
        format: policyID
        x-go-name: PolicyID
        example: block
      position:
        description: position of the api in the apis list
        type: integer
        format: int64
        x-go-name: Position
        example: 1
      server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      service_id:
        description: service id
        type: string
        format: serviceID
        x-go-name: ServiceID
        example: "1"
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/domain
  APIGroup:
    type: object
    properties:
      apis:
        description: List of APIs
        type: array
        items:
          $ref: '#/definitions/GatewayAPI'
        x-go-name: APIs
      id:
        description: API group ID
        type: string
        format: apiGroupID
        x-go-name: ID
      metadata:
        $ref: '#/definitions/APIGroupMetadata'
      name:
        description: API group name
        type: string
        x-go-name: Name
    x-go-package: github.com/cloudentity/acp/internal/domain
  APIGroupMetadata:
    type: object
    properties:
      aws:
        $ref: '#/definitions/AWSMetadata'
      azure:
        $ref: '#/definitions/AzureMetadata'
      type:
        description: Gateway type
        type: string
        format: gatewayType
        x-go-name: Type
    x-go-package: github.com/cloudentity/acp/internal/domain
  APIs:
    type: object
    properties:
      apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: APIs
    x-go-package: github.com/cloudentity/acp/internal/domain
  AWSMetadata:
    type: object
    properties:
      api_id:
        type: string
        x-go-name: APIID
      api_name:
        type: string
        x-go-name: APIName
      stage:
        type: string
        x-go-name: Stage
    x-go-package: github.com/cloudentity/acp/internal/domain
  AcceptAccountAccessConsentRequest:
    type: object
    properties:
      account_ids:
        type: array
        items:
          type: string
        x-go-name: AccountIDs
      granted_scopes:
        type: array
        items:
          type: string
          format: scopeName
        x-go-name: GrantedScopes
      login_state:
        type: string
        x-go-name: LoginState
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  AcceptScopeGrant:
    type: object
    properties:
      granted_scopes:
        description: granted scopes
        type: array
        items:
          type: string
          format: scopeName
        x-go-name: GrantedScopes
      id:
        description: login identifier
        type: string
        format: loginID
        x-go-name: ID
      login_state:
        description: login state
        type: string
        x-go-name: LoginState
    x-go-package: github.com/cloudentity/acp/internal/domain
  AcceptSession:
    type: object
    properties:
      acr:
        description: authentication context class reference
        type: string
        format: acr
        x-go-name: Acr
      amr:
        description: authentication methods references
        type: array
        items:
          type: string
          format: amr
        x-go-name: Amr
      auth_time:
        description: time when user authenticated
        type: string
        format: date-time
        x-go-name: AuthTime
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      id:
        description: login identifier
        type: string
        format: loginID
        x-go-name: ID
      login_state:
        description: login state
        type: string
        x-go-name: LoginState
      subject:
        description: user identifier
        type: string
        format: subject
        x-go-name: Subject
        example: user
    x-go-name: AcceptLogin
    x-go-package: github.com/cloudentity/acp/internal/domain
  AccountAccessConsent:
    type: object
    properties:
      AccountIDs:
        description: The unique AccountId(s) that are valid for the account-access-consent
        type: array
        items:
          type: string
      ConsentId:
        description: Unique identification as assigned to identify the account access
          consent resource.
        type: string
        format: consentID
        x-go-name: ConsentID
      CreationDateTime:
        description: Date and time at which the resource was created.
        type: string
        format: date-time
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
      Permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
          format: permission
      Status:
        description: Specifies the status of consent resource in code form.
        type: string
        format: accountAccessStatus
      StatusUpdateDateTime:
        description: Date and time at which the resource status was updated.
        type: string
        format: date-time
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
    x-go-package: github.com/cloudentity/acp/internal/openbanking
  AccountAccessConsentAccepted:
    type: object
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-go-name: RedirectTo
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  AccountAccessConsentRejected:
    type: object
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-go-name: RedirectTo
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  AccountAccessConsentRequest:
    type: object
    properties:
      Data:
        $ref: '#/definitions/AccountAccessConsentRequestData'
      Risk:
        $ref: '#/definitions/AccountAccessConsentRisk'
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  AccountAccessConsentRequestData:
    type: object
    properties:
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
      Permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
          format: permission
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  AccountAccessConsentResponse:
    type: object
    properties:
      Data:
        $ref: '#/definitions/AccountAccessConsentResponseData'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/AccountAccessConsentRisk'
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  AccountAccessConsentResponseData:
    type: object
    properties:
      ConsentId:
        description: Unique identification as assigned to identify the account access
          consent resource.
        type: string
        format: consentID
        x-go-name: ConsentID
      CreationDateTime:
        description: Date and time at which the resource was created.
        type: string
        format: date-time
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
      Permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
          format: permission
      Status:
        description: Specifies the status of consent resource in code form.
        type: string
        format: accountAccessStatus
      StatusUpdateDateTime:
        description: Date and time at which the resource status was updated.
        type: string
        format: date-time
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  AccountAccessConsentRisk:
    type: object
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  Attribute:
    type: object
    properties:
      description:
        description: display name
        type: string
        x-go-name: Description
      name:
        description: technical name
        type: string
        x-go-name: Name
      type:
        description: attribute type (number, string, bool, number_array, string_array,
          bool_array or any)
        type: string
        format: type
        x-go-name: Type
    x-go-package: github.com/cloudentity/acp/internal/domain
  Attributes:
    type: array
    items:
      $ref: '#/definitions/Attribute'
    x-go-package: github.com/cloudentity/acp/internal/domain
  Authentication:
    description: |-
      ID is unique identifier across authentication methods.
      One of the following authentication method should be set: oidc, static, custom.
      Depending on chosen method, you need to provide oidc, static, custom settings accordingly.
    type: object
    title: Authentication method definition
    required:
    - id
    - name
    - method
    properties:
      amr:
        description: |-
          static authentication method references

          if set overwrites amr obtained from this authentication method
        type: array
        items:
          type: string
          format: amr
        x-go-name: AMR
      attributes:
        $ref: '#/definitions/Attributes'
      azure:
        $ref: '#/definitions/AzureAuthentication'
      azureb2c:
        $ref: '#/definitions/AzureB2CAuthentication'
      cognito:
        $ref: '#/definitions/CognitoAuthentication'
      custom:
        $ref: '#/definitions/CustomAuthentication'
      disabled:
        description: flag to disable authentication method
        type: boolean
        x-go-name: Disabled
        example: false
      github:
        $ref: '#/definitions/GithubAuthentication'
      id:
        description: authentication method identifier
        type: string
        format: authenticationMethodID
        x-go-name: ID
        example: oidc
      intelli_trust:
        $ref: '#/definitions/IntelliTrustAuthentication'
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        $ref: '#/definitions/AuthenticationMethod'
      name:
        description: human readable name which will be displayed to user in case of
          multiple authentication methods
        type: string
        x-go-name: Name
        example: OIDC
      oidc:
        $ref: '#/definitions/OIDCAuthentication'
      okta:
        $ref: '#/definitions/OktaAuthentication'
      saml:
        $ref: '#/definitions/SAMLAuthentication'
      static:
        $ref: '#/definitions/StaticAuthentication'
    x-go-package: github.com/cloudentity/acp/internal/domain
  AuthenticationContext:
    type: object
    additionalProperties:
      type: object
    x-go-package: github.com/cloudentity/acp/internal/domain
  AuthenticationContextSettings:
    type: object
    properties:
      attributes:
        type: array
        items:
          $ref: '#/definitions/Attribute'
        x-go-name: Attributes
    x-go-package: github.com/cloudentity/acp/internal/domain
  AuthenticationMethod:
    description: |-
      selected authentication method, must be one of: static, oidc, custom
      example: oidc
    type: string
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureAuthentication:
    description: Provide OAuth client details here.
    type: object
    title: Azure authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      client_secret:
        description: OAuth client secret
        type: string
        x-go-name: ClientSecret
        example: secret
      fetch_groups:
        description: a flag to fetch user groups
        type: boolean
        x-go-name: FetchGroups
        example: true
      get_user:
        description: flag to fetch additional user data from graph endpoint
        type: boolean
        x-go-name: GetUser
      group_name_format:
        description: 'user groups format: id or name'
        type: string
        x-go-name: GroupNameFormat
        example: id
      only_security_groups:
        description: should only security groups be fetched
        type: boolean
        x-go-name: OnlySecurityGroups
        example: true
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
      tenant:
        description: azure tenant id
        type: string
        x-go-name: Tenant
        example: 123-312-123
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureB2CAuthentication:
    description: Provide OAuth client details here.
    type: object
    title: Azure AD B2C authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      client_secret:
        description: OAuth client secret
        type: string
        x-go-name: ClientSecret
        example: secret
      fetch_groups:
        description: a flag to fetch user groups
        type: boolean
        x-go-name: FetchGroups
        example: true
      get_user:
        description: flag to fetch additional user data from graph endpoint
        type: boolean
        x-go-name: GetUser
      group_name_format:
        description: 'user groups format: id or name'
        type: string
        x-go-name: GroupNameFormat
        example: id
      only_security_groups:
        description: should only security groups be fetched
        type: boolean
        x-go-name: OnlySecurityGroups
        example: true
      policy:
        description: |-
          The user flow to be run.
          Specify the name of a user flow you've created in your Azure AD B2C tenant.
        type: string
        x-go-name: Policy
        example: b2c_1_sign_in
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
      tenant:
        description: azure tenant id
        type: string
        x-go-name: Tenant
        example: 123-312-123
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureB2CCredentials:
    type: object
    properties:
      client_secret:
        type: string
        x-go-name: ClientSecret
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureB2CIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/AzureB2CCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/AzureB2CSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureB2CSettings:
    description: Provide OAuth client details here.
    type: object
    title: Azure AD B2C authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      fetch_groups:
        description: a flag to fetch user groups
        type: boolean
        x-go-name: FetchGroups
        example: true
      get_user:
        description: flag to fetch additional user data from graph endpoint
        type: boolean
        x-go-name: GetUser
      graph_user_attributes:
        description: list of user attributes to be fetched from graph
        type: array
        items:
          type: string
        x-go-name: GraphUserAttributes
      group_name_format:
        description: 'user groups format: id or name'
        type: string
        x-go-name: GroupNameFormat
        example: id
      only_security_groups:
        description: should only security groups be fetched
        type: boolean
        x-go-name: OnlySecurityGroups
        example: true
      policy:
        description: |-
          The user flow to be run.
          Specify the name of a user flow you've created in your Azure AD B2C tenant.
        type: string
        x-go-name: Policy
        example: b2c_1_sign_in
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
      tenant:
        description: azure tenant id
        type: string
        x-go-name: Tenant
        example: 123-312-123
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureCredentials:
    type: object
    properties:
      client_secret:
        type: string
        x-go-name: ClientSecret
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/AzureCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/AzureSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureMetadata:
    type: object
    properties:
      apim_id:
        type: string
        x-go-name: APIMID
      apim_name:
        type: string
        x-go-name: APIMName
    x-go-package: github.com/cloudentity/acp/internal/domain
  AzureSettings:
    type: object
    properties:
      client_id:
        type: string
        x-go-name: ClientID
      fetch_groups:
        type: boolean
        x-go-name: FetchGroups
      get_user:
        type: boolean
        x-go-name: GetUser
      graph_user_attributes:
        type: array
        items:
          type: string
        x-go-name: GraphUserAttributes
      group_name_format:
        type: string
        x-go-name: GroupNameFormat
      only_security_groups:
        type: boolean
        x-go-name: OnlySecurityGroups
      redirect_url:
        type: string
        x-go-name: RedirectURL
      scopes:
        type: array
        items:
          type: string
        x-go-name: Scopes
      tenant:
        type: string
        x-go-name: Tenant
    x-go-package: github.com/cloudentity/acp/internal/domain
  BindGroupToServiceRequest:
    type: object
    properties:
      service_id:
        type: string
        format: serviceID
        x-go-name: ServiceID
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  BindGroupToServiceResponse:
    type: object
    properties:
      not_removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: NotRemovedPolicies
      removed_apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: RemovedAPIs
      removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: RemovedPolicies
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  Claim:
    type: object
    properties:
      authorization_server_id:
        description: authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      id:
        description: unique claim id
        type: string
        format: claimID
        x-go-name: ID
        example: "1"
      mapping:
        description: claim mapping - path to attribute in identity context from where
          claim value should be picked
        type: string
        x-go-name: Mapping
        example: email
      name:
        description: claim name in outgoing id / access token
        type: string
        x-go-name: Name
        example: email
      scopes:
        description: list of scopes - when at least one of listed scopes has been
          granted to a client, then claim will be added to id / access token. In case
          of empty array claim is always added.
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - email_verified
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      type:
        $ref: '#/definitions/ClaimType'
    x-go-package: github.com/cloudentity/acp/internal/domain
  ClaimRequest:
    type: object
    properties:
      essential:
        type: boolean
        x-go-name: Essential
      value:
        type: object
        x-go-name: Value
      values:
        type: array
        items:
          type: object
        x-go-name: Values
    x-go-package: github.com/cloudentity/acp/thirdparty/fosite
  ClaimType:
    description: |-
      claim type, one of: id_token, access_token
      example: id_token
    type: string
    x-go-package: github.com/cloudentity/acp/internal/domain
  Claims:
    type: object
    properties:
      claims:
        description: list of claims
        type: array
        items:
          $ref: '#/definitions/Claim'
        x-go-name: Claims
    x-go-package: github.com/cloudentity/acp/internal/domain
  ClaimsRequests:
    type: object
    properties:
      id_token:
        type: object
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        x-go-name: IDToken
      userinfo:
        type: object
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        x-go-name: Userinfo
    x-go-package: github.com/cloudentity/acp/thirdparty/fosite
  Client:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      authorization_server_id:
        description: Authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_hashed_secret:
        type: string
        x-go-name: HashedSecret
      client_id:
        description: oauth client id
        type: string
        format: clientID
        x-go-name: ID
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      developer_id:
        description: Optional developer owner of this client
        type: string
        format: subject
        x-go-name: DeveloperID
      developer_metadata:
        $ref: '#/definitions/Metadata'
      dynamically_registered:
        type: boolean
        x-go-name: DynamicallyRegistered
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      registration_token:
        $ref: '#/definitions/RegistrationToken'
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-go-name: SoftwareID
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement will be issued directly by the client
          developer.  In other cases, a software statement will be issued by
          a third-party organization for use by the client developer.  In
          both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.  A software statement can be presented to an
          authorization server as part of a client registration request.
        type: string
        x-go-name: SoftwareStatement
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-go-name: SoftwareVersion
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      system:
        description: Is client a system client
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      trusted:
        description: If client is trusted than the consent page is skipped
        type: boolean
        x-go-name: Trusted
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/domain
  ClientAdminResponse:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      authorization_server_id:
        description: Authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_id:
        description: oauth client id
        type: string
        format: clientID
        x-go-name: ID
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      developer_id:
        description: Optional developer owner of this client
        type: string
        format: subject
        x-go-name: DeveloperID
      developer_metadata:
        $ref: '#/definitions/Metadata'
      dynamically_registered:
        type: boolean
        x-go-name: DynamicallyRegistered
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-go-name: SoftwareID
      software_statement:
        type: string
        x-go-name: SoftwareStatement
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-go-name: SoftwareVersion
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      system:
        description: Is client a system client
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      trusted:
        description: If client is trusted than the consent page is skipped
        type: boolean
        x-go-name: Trusted
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ClientDetails:
    type: object
    properties:
      client_uri:
        description: url to a client website
        type: string
        x-go-name: ClientURI
        example: https://example.com
      id:
        description: client id
        type: string
        x-go-name: ID
        example: default
      logo_uri:
        description: url to a page where client logo is served
        type: string
        x-go-name: LogoURI
        example: https://example.com/logo.png
      name:
        description: client name
        type: string
        x-go-name: Name
        example: My app
    x-go-package: github.com/cloudentity/acp/internal/handler/public
  ClientDeveloperResponse:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      authorization_server_id:
        description: Authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_id:
        description: oauth client id
        type: string
        format: clientID
        x-go-name: ID
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  ClientPrivacy:
    type: object
    properties:
      scopes:
        description: optional privacy information mapping for scopes
        type: object
        additionalProperties:
          $ref: '#/definitions/ScopePrivacyInformation'
        x-go-name: Scopes
    x-go-package: github.com/cloudentity/acp/internal/domain
  ClientWithAccess:
    type: object
    properties:
      client:
        $ref: '#/definitions/ClientDetails'
      granted_scopes:
        description: Scopes granted to client
        type: array
        items:
          $ref: '#/definitions/GrantedScope'
        x-go-name: GrantedScopes
    x-go-package: github.com/cloudentity/acp/internal/handler/public
  Clients:
    description: OAuth clients
    type: object
    properties:
      clients:
        type: array
        items:
          $ref: '#/definitions/Client'
        x-go-name: Clients
    x-go-package: github.com/cloudentity/acp/internal/domain
  ClientsForAdmin:
    type: object
    properties:
      clients:
        type: array
        items:
          $ref: '#/definitions/ClientAdminResponse'
        x-go-name: Clients
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ClientsForDeveloper:
    description: OAuth clients owned by developer
    type: object
    properties:
      clients:
        type: array
        items:
          $ref: '#/definitions/ClientDeveloperResponse'
        x-go-name: Clients
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  CognitoAuthentication:
    description: Provide OAuth client details here.
    type: object
    title: Cognito authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      client_secret:
        description: OAuth client secret
        type: string
        x-go-name: ClientSecret
        example: secret
      get_user_info:
        description: flag to fetch additional user data from userinfo endpoint
        type: boolean
        x-go-name: GetUserInfo
      pool_id:
        description: Cognito pool ID
        type: string
        x-go-name: PoolID
        example: us-east-1_Q8WSOH11B
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      region:
        description: AWS Region
        type: string
        x-go-name: Region
        example: us-east-1
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  CognitoCredentials:
    type: object
    properties:
      client_secret:
        type: string
        x-go-name: ClientSecret
    x-go-package: github.com/cloudentity/acp/internal/domain
  CognitoIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/CognitoCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/CognitoSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  CognitoSettings:
    type: object
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      get_user_info:
        description: flag to fetch additional user data from userinfo endpoint
        type: boolean
        x-go-name: GetUserInfo
      pool_id:
        description: Cognito pool ID
        type: string
        x-go-name: PoolID
        example: us-east-1_Q8WSOH11B
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      region:
        description: AWS Region
        type: string
        x-go-name: Region
        example: us-east-1
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  Consent:
    type: object
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        type: boolean
        x-go-name: CanBeWithdrawn
        example: false
      description:
        description: consent description
        type: string
        x-go-name: Description
        example: End User License Agreement
      id:
        description: consent unique identifier
        type: string
        format: consentID
        x-go-name: ID
        example: "1"
      internal_services:
        description: internal services
        type: array
        items:
          $ref: '#/definitions/ConsentService'
        x-go-name: InternalServices
      name:
        description: consent name
        type: string
        x-go-name: Name
        example: EULA
      pii_categories:
        description: PII Categories
        type: array
        items:
          $ref: '#/definitions/PIICategory'
        x-go-name: PIICategories
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      third_party_services:
        description: third party services
        type: array
        items:
          $ref: '#/definitions/ConsentService'
        x-go-name: ThirdPartyServices
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll,
          keepCurrent'
        type: string
        x-go-name: UpdateExistingGrants
        example: explicitAll
      valid_from:
        description: marks the time from which the consent is in use. Can't be set
          to a future time
        type: string
        format: date-time
        x-go-name: ValidFrom
        example: "2019-12-11T13:44:28.772101Z"
      version:
        description: consent version. When a consent is updated, version is incremented.
        type: integer
        format: int64
        x-go-name: Version
        example: 1
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentAction:
    type: object
    properties:
      description:
        description: consent description
        type: string
        x-go-name: Description
        example: Consents required by application X
      id:
        description: unique consent action id
        type: string
        format: consentActionID
        x-go-name: ID
        example: "1"
      name:
        description: consent action name
        type: string
        x-go-name: Name
        example: application_x
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentActionToConsent:
    type: object
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        type: boolean
        x-go-name: CanBeWithdrawn
        example: false
      description:
        description: consent description
        type: string
        x-go-name: Description
        example: End User License Agreement
      id:
        description: consent unique identifier
        type: string
        format: consentID
        x-go-name: ID
        example: "1"
      internal_services:
        description: internal services
        type: array
        items:
          $ref: '#/definitions/ConsentService'
        x-go-name: InternalServices
      name:
        description: consent name
        type: string
        x-go-name: Name
        example: EULA
      pii_categories:
        description: PII Categories
        type: array
        items:
          $ref: '#/definitions/PIICategory'
        x-go-name: PIICategories
      required:
        description: is consent required
        type: boolean
        x-go-name: Required
        example: false
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      third_party_services:
        description: third party services
        type: array
        items:
          $ref: '#/definitions/ConsentService'
        x-go-name: ThirdPartyServices
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll,
          keepCurrent'
        type: string
        x-go-name: UpdateExistingGrants
        example: explicitAll
      valid_from:
        description: marks the time from which the consent is in use. Can't be set
          to a future time
        type: string
        format: date-time
        x-go-name: ValidFrom
        example: "2019-12-11T13:44:28.772101Z"
      version:
        description: consent version. When a consent is updated, version is incremented.
        type: integer
        format: int64
        x-go-name: Version
        example: 1
    x-go-name: ConsentActionConsent
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentActionWithConsents:
    type: object
    properties:
      consents:
        type: array
        items:
          $ref: '#/definitions/ConsentActionToConsent'
        x-go-name: Consents
      description:
        description: consent description
        type: string
        x-go-name: Description
        example: Consents required by application X
      id:
        description: unique consent action id
        type: string
        format: consentActionID
        x-go-name: ID
        example: "1"
      name:
        description: consent action name
        type: string
        x-go-name: Name
        example: application_x
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentActions:
    type: object
    properties:
      consent_actions:
        type: array
        items:
          $ref: '#/definitions/ConsentAction'
        x-go-name: ConsentActions
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentGrant:
    type: object
    properties:
      consent_grant_act_id:
        description: consent grant id
        type: string
        format: consentGrantActID
        x-go-name: ConsentGrantActID
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
      consent_id:
        description: consent id
        type: string
        format: consentID
        x-go-name: ConsentID
        example: "1"
      given_at:
        description: given at timestamp
        type: string
        format: date-time
        x-go-name: GivenAt
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        type: string
        x-go-name: GrantType
        example: implicit
      subject:
        description: subject
        type: string
        format: subject
        x-go-name: Subject
        example: peter
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      version:
        description: version
        type: integer
        format: int64
        x-go-name: Version
        example: 1
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentGrantContext:
    type: object
    properties:
      device:
        description: json object - device print of the End User's device
        type: object
        additionalProperties:
          type: object
        x-go-name: Device
      ip:
        description: string in the form of a valid IP v 4 address, represents the
          current IP of the End User
        type: string
        x-go-name: IP
        example: 52.14.142.76
      location:
        description: 2 element array of floats - current geolocation of the end-user,
          the format is [lat, long]
        type: array
        items:
          type: number
          format: double
        x-go-name: Location
        example:
        - 25.2084
        - 55.2719
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentGrantPatch:
    type: object
    properties:
      consent_id:
        description: consent id
        type: string
        format: consentID
        x-go-name: ConsentID
        example: "1"
      grant_type:
        description: 'one of: implicit, explicit (explicit is the default value)'
        type: string
        x-go-name: GrantType
        example: implicit
      granted:
        description: boolean flag marking if the user granted or revoked the consent
        type: boolean
        x-go-name: Granted
        example: false
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentGrantPatchRequest:
    type: object
    properties:
      collection_timestamp:
        description: time when the grant occurred
        type: integer
        format: int64
        x-go-name: CollectionTimestamp
        example: 1257894000000000000
      consents:
        description: an array of consent objects, consisting of consentId and granted
          - boolean flag marking if the user granted or revoked the consent
        type: array
        items:
          $ref: '#/definitions/ConsentGrantPatch'
        x-go-name: Consents
      context:
        $ref: '#/definitions/ConsentGrantContext'
      language:
        description: language in which the consent was obtained [ISO 639]
        type: string
        x-go-name: Language
        example: en
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        type: string
        x-go-name: TriggeredByAction
        example: "1"
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentGrantPatchResponse:
    type: object
    properties:
      ConsentGrantActID:
        description: id of the consent grant action
        type: string
        format: consentGrantActID
      collection_timestamp:
        description: time when the grant occurred
        type: integer
        format: int64
        x-go-name: CollectionTimestamp
        example: 1257894000000000000
      consents:
        description: an array of consent objects, consisting of consentId and granted
          - boolean flag marking if the user granted or revoked the consent
        type: array
        items:
          $ref: '#/definitions/ConsentGrantPatch'
        x-go-name: Consents
      context:
        $ref: '#/definitions/ConsentGrantContext'
      language:
        description: language in which the consent was obtained [ISO 639]
        type: string
        x-go-name: Language
        example: en
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        type: string
        x-go-name: TriggeredByAction
        example: "1"
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentGrantRequest:
    type: object
    properties:
      collection_timestamp:
        description: time when the grant occurred
        type: integer
        format: int64
        x-go-name: CollectionTimestamp
        example: 1257894000000000000
      consent_id:
        description: consent id
        type: string
        format: consentID
        x-go-name: ConsentID
      context:
        $ref: '#/definitions/ConsentGrantContext'
      grant_type:
        description: grant type
        type: string
        x-go-name: GrantType
      language:
        description: language in which the consent was obtained [ISO 639]
        type: string
        x-go-name: Language
        example: en
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        type: string
        x-go-name: TriggeredByAction
        example: "1"
    x-go-package: github.com/cloudentity/acp/internal/handler/public
  ConsentGrantedEvent:
    type: object
    properties:
      collection_timestamp:
        description: time when the grant occurred
        type: integer
        format: int64
        x-go-name: CollectionTimestamp
        example: 1257894000000000000
      consent:
        $ref: '#/definitions/Consent'
      consent_grant_act_id:
        description: consent grant id
        type: string
        format: consentGrantActID
        x-go-name: ConsentGrantActID
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
      consent_id:
        description: consent id
        type: string
        format: consentID
        x-go-name: ConsentID
        example: "1"
      context:
        $ref: '#/definitions/ConsentGrantContext'
      given_at:
        description: given at timestamp
        type: string
        format: date-time
        x-go-name: GivenAt
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        type: string
        x-go-name: GrantType
        example: implicit
      language:
        description: language in which the consent was obtained [ISO 639]
        type: string
        x-go-name: Language
        example: en
      subject:
        description: subject
        type: string
        format: subject
        x-go-name: Subject
        example: peter
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        type: string
        x-go-name: TriggeredByAction
        example: "1"
      version:
        description: version
        type: integer
        format: int64
        x-go-name: Version
        example: 1
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentRevokedEvent:
    type: object
    properties:
      collection_timestamp:
        description: time when the grant occurred
        type: integer
        format: int64
        x-go-name: CollectionTimestamp
        example: 1257894000000000000
      consent:
        $ref: '#/definitions/Consent'
      consent_grant_act_id:
        description: consent grant id
        type: string
        format: consentGrantActID
        x-go-name: ConsentGrantActID
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
      consent_id:
        description: consent id
        type: string
        format: consentID
        x-go-name: ConsentID
        example: "1"
      context:
        $ref: '#/definitions/ConsentGrantContext'
      given_at:
        description: given at timestamp
        type: string
        format: date-time
        x-go-name: GivenAt
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        type: string
        x-go-name: GrantType
        example: implicit
      language:
        description: language in which the consent was obtained [ISO 639]
        type: string
        x-go-name: Language
        example: en
      subject:
        description: subject
        type: string
        format: subject
        x-go-name: Subject
        example: peter
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        type: string
        x-go-name: TriggeredByAction
        example: "1"
      version:
        description: version
        type: integer
        format: int64
        x-go-name: Version
        example: 1
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentService:
    type: object
    properties:
      name:
        description: name
        type: string
        x-go-name: Name
      purposes:
        description: purpose
        type: array
        items:
          $ref: '#/definitions/Purpose'
        x-go-name: Purposes
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentType:
    type: string
    x-go-package: github.com/cloudentity/acp/internal/openbanking
  ConsentWithGrant:
    type: object
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        type: boolean
        x-go-name: CanBeWithdrawn
        example: false
      consent_grant_id:
        description: consent grant id
        type: string
        format: consentGrantActID
        x-go-name: ConsentGrantActID
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
      description:
        description: consent description
        type: string
        x-go-name: Description
        example: End User License Agreement
      given_at:
        description: given at timestamp
        type: string
        format: date-time
        x-go-name: GivenAt
      grant_type:
        description: grant type
        type: string
        x-go-name: GrantType
        example: implicit
      grant_version:
        description: grant version
        type: integer
        format: int64
        x-go-name: GrantVersion
        example: 1
      granted:
        description: is consent granted
        type: boolean
        x-go-name: Granted
        example: false
      id:
        description: consent unique identifier
        type: string
        format: consentID
        x-go-name: ID
        example: "1"
      internal_services:
        description: internal services
        type: array
        items:
          $ref: '#/definitions/ConsentService'
        x-go-name: InternalServices
      name:
        description: consent name
        type: string
        x-go-name: Name
        example: EULA
      pii_categories:
        description: PII Categories
        type: array
        items:
          $ref: '#/definitions/PIICategory'
        x-go-name: PIICategories
      subject:
        description: subject
        type: string
        format: subject
        x-go-name: Subject
        example: peter
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      third_party_services:
        description: third party services
        type: array
        items:
          $ref: '#/definitions/ConsentService'
        x-go-name: ThirdPartyServices
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll,
          keepCurrent'
        type: string
        x-go-name: UpdateExistingGrants
        example: explicitAll
      valid_from:
        description: marks the time from which the consent is in use. Can't be set
          to a future time
        type: string
        format: date-time
        x-go-name: ValidFrom
        example: "2019-12-11T13:44:28.772101Z"
      version:
        description: consent version. When a consent is updated, version is incremented.
        type: integer
        format: int64
        x-go-name: Version
        example: 1
    x-go-package: github.com/cloudentity/acp/internal/domain
  Consents:
    type: object
    properties:
      consents:
        description: list of consents
        type: array
        items:
          $ref: '#/definitions/Consent'
        x-go-name: Consents
    x-go-package: github.com/cloudentity/acp/internal/domain
  ConsentsWithGrants:
    type: object
    properties:
      consents:
        description: list of consents
        type: array
        items:
          $ref: '#/definitions/ConsentWithGrant'
        x-go-name: Consents
    x-go-package: github.com/cloudentity/acp/internal/domain
  CreateClientAdminRequest:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      authorization_server_id:
        description: Authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_id:
        description: oauth client id
        type: string
        format: clientID
        x-go-name: ID
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      developer_id:
        description: Optional developer owner of this client
        type: string
        format: subject
        x-go-name: DeveloperID
      developer_metadata:
        $ref: '#/definitions/Metadata'
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      system:
        description: Is client a system client
        type: boolean
        x-go-name: System
        example: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      trusted:
        description: If client is trusted than the consent page is skipped
        type: boolean
        x-go-name: Trusted
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  CreateClientDeveloperRequest:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      authorization_server_id:
        description: Authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  CreateGatewayRequest:
    type: object
    properties:
      description:
        description: description
        type: string
        x-go-name: Description
      name:
        description: gateway name
        type: string
        x-go-name: Name
        example: Cloudentity Pyron
      server_id:
        description: ServerID that this gateway should protect
        type: string
        format: serverID
        x-go-name: ServerID
      type:
        description: 'gateway type, one of: pyron, aws, azure'
        type: string
        format: gatewayType
        x-go-name: Type
        example: pyron
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  CustomAuthentication:
    description: Use in case of custom integration.
    type: object
    title: Custom authentication settings.
    properties:
      login_url:
        description: URL to custom login page
        type: string
        x-go-name: LoginURL
        example: https://example.com/login
    x-go-package: github.com/cloudentity/acp/internal/domain
  CustomCredentials:
    type: object
    x-go-package: github.com/cloudentity/acp/internal/domain
  CustomIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/CustomCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/CustomSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  CustomServerConsent:
    type: object
    properties:
      scope_grant_url:
        description: Deprecetad scope_grant_url. Use server_consent_url instead
        type: string
        x-go-name: DeprecatedScopeGrantURL
      server_consent_url:
        type: string
        x-go-name: ServerConsentURL
    x-go-package: github.com/cloudentity/acp/internal/domain
  CustomSettings:
    type: object
    properties:
      login_url:
        description: URL to custom login page
        type: string
        x-go-name: LoginURL
        example: https://example.com/login
      type:
        description: 'type metadata, allowed values: generic, cloudentity. If not
          provided, it is set to generic'
        type: string
        format: customIDPType
        x-go-name: Type
    x-go-package: github.com/cloudentity/acp/internal/domain
  Dashboards:
    type: object
    properties:
      enabled:
        description: are dashboards enabled
        type: boolean
        x-go-name: Enabled
      sample_api_url:
        description: sample API dashboard
        type: string
        x-go-name: SampleAPIURL
      sample_business_url:
        description: sample business dashboard url
        type: string
        x-go-name: SampleBusinessURL
      sample_threat_url:
        description: sample threat dashboard url
        type: string
        x-go-name: SampleThreatURL
      tenant_api_url:
        description: current tenant API dashboard
        type: string
        x-go-name: TenantAPIURL
      tenant_business_url:
        description: current tenant business dashboard url
        type: string
        x-go-name: TenantBusinessURL
      tenant_threat_url:
        description: current tenant threat dashboard url
        type: string
        x-go-name: TenantThreatURL
    x-go-package: github.com/cloudentity/acp/internal/domain
  Dump:
    type: object
    properties:
      apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: APIs
      claims:
        type: array
        items:
          $ref: '#/definitions/Claim'
        x-go-name: Claims
      clients:
        type: array
        items:
          $ref: '#/definitions/Client'
        x-go-name: Clients
      consent_actions:
        type: array
        items:
          $ref: '#/definitions/ConsentActionWithConsents'
        x-go-name: ConsentActions
      consent_grants:
        type: array
        items:
          $ref: '#/definitions/ConsentGrant'
        x-go-name: ConsentGrants
      consents:
        type: array
        items:
          $ref: '#/definitions/Consent'
        x-go-name: Consents
      gateway_api_groups:
        type: array
        items:
          $ref: '#/definitions/GatewayAPIGroup'
        x-go-name: GatewayAPIGroups
      gateways:
        type: array
        items:
          $ref: '#/definitions/Gateway'
        x-go-name: Gateways
      idps:
        $ref: '#/definitions/IDPs'
      openbanking_consents:
        type: array
        items:
          $ref: '#/definitions/OBConsent'
        x-go-name: OpenbankingConsents
      policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: Policies
      policy_dependencies:
        type: array
        items:
          $ref: '#/definitions/PolicyDependency'
        x-go-name: PolicyDependencies
      policy_execution_points:
        type: array
        items:
          $ref: '#/definitions/PolicyExecutionPoint'
        x-go-name: PolicyExecutionPoints
      privacy_ledger_events:
        type: array
        items:
          $ref: '#/definitions/PrivacyLedgerEvent'
        x-go-name: PrivacyLedgerEvents
      scope_grants:
        type: array
        items:
          $ref: '#/definitions/ScopeGrant'
        x-go-name: ScopeGrants
      scopes_without_service:
        type: array
        items:
          $ref: '#/definitions/Scope'
        x-go-name: ScopesWithoutService
      server_consents:
        type: array
        items:
          $ref: '#/definitions/ServerConsent'
        x-go-name: ServerConsents
      servers:
        type: array
        items:
          $ref: '#/definitions/Server'
        x-go-name: Servers
      servers_bindings:
        type: array
        items:
          $ref: '#/definitions/ServerToServer'
        x-go-name: ServersBindings
      services:
        type: array
        items:
          $ref: '#/definitions/ServiceWithScopes'
        x-go-name: Services
      tenants:
        type: array
        items:
          $ref: '#/definitions/Tenant'
        x-go-name: Tenants
    x-go-package: github.com/cloudentity/acp/internal/domain
  DynamicClientRegistrationRequest:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-go-name: SoftwareID
      software_statement:
        type: string
        x-go-name: SoftwareStatement
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-go-name: SoftwareVersion
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  DynamicClientRegistrationResponse:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      client_id:
        description: oauth client id
        type: string
        format: clientID
        x-go-name: ID
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      dynamically_registered:
        type: boolean
        x-go-name: DynamicallyRegistered
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      registration_access_token:
        type: string
        x-go-name: RegistrationToken
      registration_access_token_expires_in:
        type: integer
        format: int64
        x-go-name: RegistrationTokenExpiresIn
      registration_client_uri:
        type: string
        x-go-name: RegistrationClientURI
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher
          The "software_id" SHOULD remain the same across
          multiple updates or versions of the same piece of software.  The
          value of this field is not intended to be human readable and is
          usually opaque to the client and authorization server.
        type: string
        x-go-name: SoftwareID
      software_statement:
        type: string
        x-go-name: SoftwareStatement
      software_version:
        description: |-
          A version identifier string for the client software identified by
          "software_id".  The value of the "software_version" SHOULD change
          on any update to the client software identified by the same
          "software_id".
        type: string
        x-go-name: SoftwareVersion
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  DynamicClientRegistrationSettings:
    type: object
    properties:
      enabled:
        type: boolean
        x-go-name: Enabled
      initial_access_token:
        $ref: '#/definitions/InitialAccessTokenSettings'
      software_statement:
        $ref: '#/definitions/SoftwareStatementSettings'
    x-go-package: github.com/cloudentity/acp/internal/domain
  Environment:
    type: object
    properties:
      commit:
        type: string
        x-go-name: Commit
      demo_mode:
        type: boolean
        x-go-name: DemoMode
      dev_mode:
        type: boolean
        x-go-name: DevMode
      display_workspace_wizard:
        type: boolean
        x-go-name: DisplayWorkspaceWizard
      swagger_mode:
        type: boolean
        x-go-name: SwaggerMode
      version:
        type: string
        x-go-name: Version
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  Error:
    description: HTTP error response
    type: object
    properties:
      details:
        type: object
        x-go-name: Details
      error:
        type: string
        x-go-name: Msg
      status_code:
        type: integer
        format: int64
        x-go-name: Code
    x-go-package: github.com/cloudentity/go-tools/httpx
  ErrorResponse:
    type: object
    title: An array of detail error codes, and messages, and URLs to documentation
      to help remediation.
    properties:
      Code:
        description: High level textual error code, to help categorize the errors.
        type: string
      Errors:
        type: array
        items:
          $ref: '#/definitions/OpenbankingError'
      Id:
        description: A unique reference for the error instance, for audit purposes,
          in case of unknown/unclassified errors.
        type: string
        x-go-name: ID
      Message:
        description: Brief Error message, e.g., 'There is something wrong with the
          request parameters provided'
        type: string
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  Gateway:
    type: object
    properties:
      authorization_server_id:
        description: authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_id:
        description: id of a client created for this gateway for authentication
        type: string
        format: clientID
        x-go-name: ClientID
      description:
        description: description
        type: string
        x-go-name: Description
      id:
        description: unique gateway id
        type: string
        format: gatewayID
        x-go-name: ID
        example: "1"
      last_active:
        description: last time a client fetched configuration
        type: string
        format: date-time
        x-go-name: LastActive
      name:
        description: gateway name
        type: string
        x-go-name: Name
        example: Cloudentity Pyron
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      type:
        description: 'gateway type, one of: pyron, aws'
        type: string
        format: gatewayType
        x-go-name: Type
        example: pyron
    x-go-package: github.com/cloudentity/acp/internal/domain
  GatewayAPI:
    type: object
    properties:
      method:
        type: string
        x-go-name: Method
      path:
        type: string
        x-go-name: Path
    x-go-package: github.com/cloudentity/acp/internal/domain
  GatewayAPIGroup:
    type: object
    properties:
      apis:
        description: List of APIs
        type: array
        items:
          $ref: '#/definitions/GatewayAPI'
        x-go-name: APIs
      gateway_id:
        type: string
        format: gatewayID
        x-go-name: GatewayID
      id:
        description: API group ID
        type: string
        format: apiGroupID
        x-go-name: ID
      metadata:
        $ref: '#/definitions/APIGroupMetadata'
      name:
        description: API group name
        type: string
        x-go-name: Name
      server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      service_id:
        type: string
        format: serviceID
        x-go-name: ServiceID
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
    x-go-package: github.com/cloudentity/acp/internal/domain
  GatewayAPIGroups:
    type: object
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/GatewayAPIGroup'
        x-go-name: Groups
    x-go-package: github.com/cloudentity/acp/internal/domain
  GatewayConfiguration:
    type: object
    properties:
      apis:
        description: List of APIs that this gateway should protect.
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: APIs
      issuer_url:
        description: Authorization server issuer url.
        type: string
        x-go-name: IssuerURL
      jwks_url:
        description: Authorization server JWKs url.
        type: string
        x-go-name: JWKsURL
      policies:
        description: List of policies that this gateway should use to protect APIs.
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: Policies
      scopes:
        description: List of scopes available in the server.
        type: array
        items:
          $ref: '#/definitions/ScopeWithService'
        x-go-name: Scopes
      server_id:
        description: ServerID that this gateway belongs to.
        type: string
        format: serverID
        x-go-name: ServerID
      services:
        description: List of services that belongs to the server.
        type: array
        items:
          $ref: '#/definitions/ServiceConnectedToGateway'
        x-go-name: Services
      tenant_id:
        description: TenantID that this gateway belongs to.
        type: string
        format: tenantID
        x-go-name: TenantID
    x-go-package: github.com/cloudentity/acp/internal/domain
  GatewayRequestEvent:
    type: object
    properties:
      api_id:
        type: string
        format: apiID
        x-go-name: APIID
      result:
        $ref: '#/definitions/PolicyValidationResult'
      token:
        type: string
        x-go-name: Token
      user_agent:
        type: string
        x-go-name: UserAgent
      x_forwarded_for:
        type: string
        x-go-name: ForwardedFor
      x_real_ip:
        type: string
        x-go-name: RealIP
    x-go-package: github.com/cloudentity/acp/internal/domain
  GatewayRequestEvents:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/GatewayRequestEvent'
        x-go-name: Events
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  GatewayRequestsEventsResponse:
    type: object
    properties:
      number_of_pushed_events:
        type: integer
        format: int64
        x-go-name: NumberOfPushedEvents
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  GatewayWithClient:
    type: object
    properties:
      authorization_server_id:
        description: authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client:
        $ref: '#/definitions/Client'
      client_id:
        description: id of a client created for this gateway for authentication
        type: string
        format: clientID
        x-go-name: ClientID
      description:
        description: description
        type: string
        x-go-name: Description
      id:
        description: unique gateway id
        type: string
        format: gatewayID
        x-go-name: ID
        example: "1"
      issuer_url:
        type: string
        x-go-name: IssuerURL
      last_active:
        description: last time a client fetched configuration
        type: string
        format: date-time
        x-go-name: LastActive
      name:
        description: gateway name
        type: string
        x-go-name: Name
        example: Cloudentity Pyron
      server_url:
        type: string
        x-go-name: ServerURL
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      type:
        description: 'gateway type, one of: pyron, aws'
        type: string
        format: gatewayType
        x-go-name: Type
        example: pyron
    x-go-package: github.com/cloudentity/acp/internal/domain
  Gateways:
    type: object
    properties:
      gateways:
        type: array
        items:
          $ref: '#/definitions/Gateway'
        x-go-name: Gateways
    x-go-package: github.com/cloudentity/acp/internal/domain
  GetAccountAccessConsentResponse:
    type: object
    properties:
      account_ids:
        description: The unique AccountId(s) that are valid for the account-access-consent
        type: array
        items:
          type: string
        x-go-name: AccountIDs
      consent_id:
        description: Unique identification as assigned to identify the account access
          consent resource.
        type: string
        format: consentID
        x-go-name: ConsentID
      creation_date_time:
        description: Date and time at which the resource was created.
        type: string
        format: date-time
        x-go-name: CreationDateTime
      expiration_date_time:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
        x-go-name: ExpirationDateTime
      permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
        x-go-name: Permissions
      requested_scopes:
        type: array
        items:
          $ref: '#/definitions/RequestedScope'
        x-go-name: RequestedScopes
      status:
        description: Specifies the status of consent resource in code form.
        type: string
        format: accountAccessStatus
        x-go-name: Status
      status_update_date_time:
        description: Date and time at which the resource status was updated.
        type: string
        format: date-time
        x-go-name: StatusUpdateDateTime
      subject:
        type: string
        format: subject
        x-go-name: Subject
      transaction_from_date_time:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionFromDateTime
      transaction_to_date_time:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionToDateTime
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  GetServerDeveloperResponse:
    type: object
    properties:
      color:
        description: Color
        type: string
        x-go-name: Color
        example: '#007FFF'
      grant_types:
        description: supported grant types
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - implicit
        - authorization_code
        - refresh_token
      id:
        description: authorization server id
        type: string
        x-go-name: ID
        example: default
      issuer_url:
        description: issuer URL
        type: string
        x-go-name: IssuerURL
        example: https://example.com/default/default
      name:
        description: authorizations server name
        type: string
        x-go-name: Name
        example: ACP
      subject_identifier_types:
        description: supported subject identifier types
        type: array
        items:
          type: string
        x-go-name: SubjectIdentifierTypes
        example:
        - public
        - pairwise
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  GetServerWithScopesDeveloperResponse:
    type: object
    properties:
      color:
        description: Color
        type: string
        x-go-name: Color
        example: '#007FFF'
      grant_types:
        description: supported grant types
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - implicit
        - authorization_code
        - refresh_token
      id:
        description: authorization server id
        type: string
        x-go-name: ID
        example: default
      issuer_url:
        description: issuer URL
        type: string
        x-go-name: IssuerURL
        example: https://example.com/default/default
      name:
        description: authorizations server name
        type: string
        x-go-name: Name
        example: ACP
      scopes:
        description: list of scopes
        type: array
        items:
          $ref: '#/definitions/ScopeWithServiceDeveloperResponse'
        x-go-name: Scopes
      subject_identifier_types:
        description: supported subject identifier types
        type: array
        items:
          type: string
        x-go-name: SubjectIdentifierTypes
        example:
        - public
        - pairwise
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  GithubAuthentication:
    description: Provide OAuth client details here.
    type: object
    title: Github authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      client_secret:
        description: OAuth client secret
        type: string
        x-go-name: ClientSecret
        example: secret
      fetch_groups:
        description: flag to fetch groups
        type: boolean
        x-go-name: FetchGroups
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  GithubCredentials:
    type: object
    properties:
      client_secret:
        type: string
        x-go-name: ClientSecret
    x-go-package: github.com/cloudentity/acp/internal/domain
  GithubIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/GithubCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/GithubSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  GithubSettings:
    type: object
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      fetch_groups:
        description: flag to fetch groups
        type: boolean
        x-go-name: FetchGroups
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  GrantedScope:
    type: object
    properties:
      granted_scope_name:
        type: string
        x-go-name: GrantedScopeName
      is_dynamic:
        type: boolean
        x-go-name: IsDynamic
      scope_name:
        type: string
        x-go-name: ScopeName
    x-go-package: github.com/cloudentity/acp/internal/handler/public
  IDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/IDPCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/IDPSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  IDPBase:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  IDPCredentials:
    type: object
    properties:
      azure:
        $ref: '#/definitions/AzureCredentials'
      azureb2c:
        $ref: '#/definitions/AzureB2CCredentials'
      cognito:
        $ref: '#/definitions/CognitoCredentials'
      custom:
        $ref: '#/definitions/CustomCredentials'
      github:
        $ref: '#/definitions/GithubCredentials'
      intelli_trust:
        $ref: '#/definitions/IntelliTrustCredentials'
      oidc:
        $ref: '#/definitions/OIDCCredentials'
      okta:
        $ref: '#/definitions/OktaCredentials'
      saml:
        $ref: '#/definitions/SAMLCredentials'
      static:
        $ref: '#/definitions/StaticCredentials'
    x-go-package: github.com/cloudentity/acp/internal/domain
  IDPSettings:
    type: object
    properties:
      azure:
        $ref: '#/definitions/AzureSettings'
      azureb2c:
        $ref: '#/definitions/AzureB2CSettings'
      cognito:
        $ref: '#/definitions/CognitoSettings'
      custom:
        $ref: '#/definitions/CustomSettings'
      github:
        $ref: '#/definitions/GithubSettings'
      intelli_trust:
        $ref: '#/definitions/IntelliTrustSettings'
      oidc:
        $ref: '#/definitions/OIDCSettings'
      okta:
        $ref: '#/definitions/OktaSettings'
      saml:
        $ref: '#/definitions/SAMLSettings'
      static:
        $ref: '#/definitions/StaticSettings'
    x-go-package: github.com/cloudentity/acp/internal/domain
  IDPs:
    type: array
    items:
      $ref: '#/definitions/IDP'
    x-go-package: github.com/cloudentity/acp/internal/domain
  IDPsResponse:
    type: object
    properties:
      idps:
        type: array
        items:
          $ref: '#/definitions/IDPBase'
        x-go-name: IDPs
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ImportServiceConfigurationResult:
    type: object
    properties:
      created_apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: CreatedAPIs
      created_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: CreatedPolicies
      created_scopes:
        type: array
        items:
          $ref: '#/definitions/Scope'
        x-go-name: CreatedScopes
      not_removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: NotRemovedPolicies
      removed_apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: RemovedAPIs
      removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: RemovedPolicies
    x-go-package: github.com/cloudentity/acp/internal/domain
  InitialAccessTokenSettings:
    type: object
    properties:
      required:
        type: boolean
        x-go-name: Required
    x-go-package: github.com/cloudentity/acp/internal/domain
  IntelliTrustAuthentication:
    description: Provide OAuth client details here.
    type: object
    title: Intelli Trust authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      client_secret:
        description: OAuth client secret
        type: string
        x-go-name: ClientSecret
        example: secret
      domain:
        description: domain
        type: string
        x-go-name: Domain
        example: cloudentity-dev.us.trustedauth.com
      fetch_groups:
        description: flag to fetch groups. IDP must release groups claim in userinfo
          endpoint
        type: boolean
        x-go-name: FetchGroups
      get_user_info:
        description: flag to fetch additional user data from userinfo endpoint
        type: boolean
        x-go-name: GetUserInfo
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  IntelliTrustCredentials:
    type: object
    properties:
      client_secret:
        type: string
        x-go-name: ClientSecret
    x-go-package: github.com/cloudentity/acp/internal/domain
  IntelliTrustIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/IntelliTrustCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/IntelliTrustSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  IntelliTrustSettings:
    type: object
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      domain:
        description: domain
        type: string
        x-go-name: Domain
        example: cloudentity-dev.us.trustedauth.com
      fetch_groups:
        description: flag to fetch groups. IDP must release groups claim in userinfo
          endpoint
        type: boolean
        x-go-name: FetchGroups
      get_user_info:
        description: flag to fetch additional user data from userinfo endpoint
        type: boolean
        x-go-name: GetUserInfo
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  IntrospectOpenbankingAccountAccessConsentResponse:
    type: object
    properties:
      account_ids:
        description: The unique AccountId(s) that are valid for the account-access-consent
        type: array
        items:
          type: string
        x-go-name: AccountIDs
      acr:
        description: Authentication Context Class Reference
        type: string
        x-go-name: Acr
      active:
        description: |-
          Active is a boolean indicator of whether or not the presented token
          is currently active.  The specifics of a token's "active" state
          will vary depending on the implementation of the authorization
          server and the information it keeps about its tokens, but a "true"
          value return for the "active" property will generally indicate
          that a given token has been issued by this authorization server,
          has not been revoked by the resource owner, and is within its
          given time window of validity (e.g., after its issuance time and
          before its expiration time).
        type: boolean
        x-go-name: Active
      amr:
        description: Authentication Method References
        type: array
        items:
          type: string
        x-go-name: Amr
      aud:
        description: Audience contains a list of the token's intended audiences.
        type: array
        items:
          type: string
        x-go-name: Audience
      client_id:
        description: |-
          ClientID is a client identifier for the OAuth 2.0 client that
          requested this token.
        type: string
        x-go-name: ClientID
      consent_id:
        description: Unique identification as assigned to identify the account access
          consent resource.
        type: string
        format: consentID
        x-go-name: ConsentID
      creation_date_time:
        description: Date and time at which the resource was created.
        type: string
        format: date-time
        x-go-name: CreationDateTime
      exp:
        description: |-
          Expires at is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token will expire.
        type: integer
        format: int64
        x-go-name: ExpiresAt
      expiration_date_time:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
        x-go-name: ExpirationDateTime
      ext:
        description: Extra is arbitrary data set by the session.
        type: object
        additionalProperties:
          type: object
        x-go-name: Extra
      iat:
        description: |-
          Issued at is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token was
          originally issued.
        type: integer
        format: int64
        x-go-name: IssuedAt
      iss:
        description: IssuerURL is a string representing the issuer of this token
        type: string
        x-go-name: Issuer
      nbf:
        description: |-
          NotBefore is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token is not to be
          used before.
        type: integer
        format: int64
        x-go-name: NotBefore
      permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
        x-go-name: Permissions
      scope:
        description: |-
          Scope is a JSON string containing a space-separated list of
          scopes associated with this token.
        type: string
        x-go-name: Scope
      server_id:
        description: |-
          ServerID is OAuth 2.0 authorization server identifier that
          issued this token.
        type: string
        x-go-name: ServerID
      status:
        description: Specifies the status of consent resource in code form.
        type: string
        format: accountAccessStatus
        x-go-name: Status
      status_update_date_time:
        description: Date and time at which the resource status was updated.
        type: string
        format: date-time
        x-go-name: StatusUpdateDateTime
      sub:
        description: |-
          Subject of the token, as defined in JWT [RFC7519].
          Usually a machine-readable identifier of the resource owner who
          authorized this token.
        type: string
        x-go-name: Subject
      tenant_id:
        description: |-
          TenantID identifies tenant where authorization server that
          issued this token belongs to.
        type: string
        x-go-name: TenantID
      token_type:
        description: TokenType is the introspected token's type, for example `access_token`
          or `refresh_token`.
        type: string
        x-go-name: TokenType
      transaction_from_date_time:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionFromDateTime
      transaction_to_date_time:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionToDateTime
      username:
        description: |-
          Username is a human-readable identifier for the resource owner who
          authorized this token.
        type: string
        x-go-name: Username
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  IntrospectResponse:
    type: object
    properties:
      acr:
        description: Authentication Context Class Reference
        type: string
        x-go-name: Acr
      active:
        description: |-
          Active is a boolean indicator of whether or not the presented token
          is currently active.  The specifics of a token's "active" state
          will vary depending on the implementation of the authorization
          server and the information it keeps about its tokens, but a "true"
          value return for the "active" property will generally indicate
          that a given token has been issued by this authorization server,
          has not been revoked by the resource owner, and is within its
          given time window of validity (e.g., after its issuance time and
          before its expiration time).
        type: boolean
        x-go-name: Active
      amr:
        description: Authentication Method References
        type: array
        items:
          type: string
        x-go-name: Amr
      aud:
        description: Audience contains a list of the token's intended audiences.
        type: array
        items:
          type: string
        x-go-name: Audience
      client_id:
        description: |-
          ClientID is a client identifier for the OAuth 2.0 client that
          requested this token.
        type: string
        x-go-name: ClientID
      exp:
        description: |-
          Expires at is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token will expire.
        type: integer
        format: int64
        x-go-name: ExpiresAt
      ext:
        description: Extra is arbitrary data set by the session.
        type: object
        additionalProperties:
          type: object
        x-go-name: Extra
      iat:
        description: |-
          Issued at is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token was
          originally issued.
        type: integer
        format: int64
        x-go-name: IssuedAt
      iss:
        description: IssuerURL is a string representing the issuer of this token
        type: string
        x-go-name: Issuer
      nbf:
        description: |-
          NotBefore is an integer timestamp, measured in the number of seconds
          since January 1 1970 UTC, indicating when this token is not to be
          used before.
        type: integer
        format: int64
        x-go-name: NotBefore
      scope:
        description: |-
          Scope is a JSON string containing a space-separated list of
          scopes associated with this token.
        type: string
        x-go-name: Scope
      server_id:
        description: |-
          ServerID is OAuth 2.0 authorization server identifier that
          issued this token.
        type: string
        x-go-name: ServerID
      sub:
        description: |-
          Subject of the token, as defined in JWT [RFC7519].
          Usually a machine-readable identifier of the resource owner who
          authorized this token.
        type: string
        x-go-name: Subject
      tenant_id:
        description: |-
          TenantID identifies tenant where authorization server that
          issued this token belongs to.
        type: string
        x-go-name: TenantID
      token_type:
        description: TokenType is the introspected token's type, for example `access_token`
          or `refresh_token`.
        type: string
        x-go-name: TokenType
      username:
        description: |-
          Username is a human-readable identifier for the resource owner who
          authorized this token.
        type: string
        x-go-name: Username
    x-go-package: github.com/cloudentity/acp/internal/domain
  JWK:
    type: object
    required:
    - use
    - kty
    - kid
    - alg
    properties:
      alg:
        description: |-
          The "alg" (algorithm) parameter identifies the algorithm intended for
          use with the key.  The values used should either be registered in the
          IANA "JSON Web Signature and Encryption Algorithms" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.
        type: string
        x-go-name: Alg
        example: RS256
      crv:
        type: string
        x-go-name: Crv
        example: P-256
      d:
        type: string
        x-go-name: D
        example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
      dp:
        type: string
        x-go-name: Dp
        example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
      dq:
        type: string
        x-go-name: Dq
        example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
      e:
        type: string
        x-go-name: E
        example: AQAB
      k:
        type: string
        x-go-name: K
        example: GawgguFyGrWKav7AX4VKUg
      kid:
        description: |-
          The "kid" (key ID) parameter is used to match a specific key.  This
          is used, for instance, to choose among a set of keys within a JWK Set
          during key rollover.  The structure of the "kid" value is
          unspecified.  When "kid" values are used within a JWK Set, different
          keys within the JWK Set SHOULD use distinct "kid" values.  (One
          example in which different keys might use the same "kid" value is if
          they have different "kty" (key type) values but are considered to be
          equivalent alternatives by the application using them.)  The "kid"
          value is a case-sensitive string.
        type: string
        x-go-name: Kid
        example: 1603dfe0af8f4596
      kty:
        description: |-
          The "kty" (key type) parameter identifies the cryptographic algorithm
          family used with the key, such as "RSA" or "EC". "kty" values should
          either be registered in the IANA "JSON Web Key Types" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.  The "kty" value is a case-sensitive string.
        type: string
        x-go-name: Kty
        example: RSA
      "n":
        type: string
        x-go-name: "N"
        example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
      p:
        type: string
        x-go-name: P
        example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
      q:
        type: string
        x-go-name: Q
        example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
      qi:
        type: string
        x-go-name: Qi
        example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
      use:
        description: |-
          Use ("public key use") identifies the intended use of
          the public key. The "use" parameter is employed to indicate whether
          a public key is used for encrypting data or verifying the signature
          on data. Values are commonly "sig" (signature) or "enc" (encryption).
        type: string
        x-go-name: Use
        example: sig
      x:
        type: string
        x-go-name: X
        example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
      x5c:
        description: |-
          The "x5c" (X.509 certificate chain) parameter contains a chain of one
          or more PKIX certificates [RFC5280].  The certificate chain is
          represented as a JSON array of certificate value strings.  Each
          string in the array is a base64-encoded (Section 4 of [RFC4648] --
          not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
          The PKIX certificate containing the key value MUST be the first
          certificate.
        type: array
        items:
          type: string
        x-go-name: X5c
      x5t:
        type: string
        x-go-name: X5t
        example: GawgguFyGrWKav7AX4VKUg
      x5t#S256:
        type: string
        x-go-name: X5tS256
        example: GawgguFyGrWKav7AX4VKUg
      "y":
        type: string
        x-go-name: "Y"
        example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
    x-go-package: github.com/cloudentity/acp/internal/domain
  JWKs:
    type: object
    properties:
      keys:
        type: array
        items:
          $ref: '#/definitions/JWK'
        x-go-name: SwaggerKeys
        example: []
    x-go-package: github.com/cloudentity/acp/internal/domain
  Links:
    type: object
    title: Links contain absolute URIs to related resources,
    properties:
      First:
        type: string
      Last:
        type: string
      Next:
        type: string
      Prev:
        type: string
      Self:
        type: string
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  ListAccountAccessConsents:
    type: object
    properties:
      consents:
        type: array
        items:
          $ref: '#/definitions/OpenbankingAccountAccessConsent'
        x-go-name: Consents
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  ListAccountAccessConsentsWithClient:
    type: object
    properties:
      consents:
        type: array
        items:
          $ref: '#/definitions/OpenbankingAccountAccessConsentWithClient'
        x-go-name: Consents
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  ListClientsWithAccess:
    type: object
    properties:
      clients:
        type: array
        items:
          $ref: '#/definitions/ClientWithAccess'
        x-go-name: Clients
      scopes:
        type: array
        items:
          $ref: '#/definitions/ScopeWithServicePublicResponse'
        x-go-name: Scopes
    x-go-package: github.com/cloudentity/acp/internal/handler/public
  ListConsentsByAccountsRequest:
    type: object
    properties:
      accounts:
        description: list of account ids
        type: array
        items:
          type: string
        x-go-name: AccountIDs
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  ListServersDeveloperResponse:
    type: object
    properties:
      servers:
        description: list of authorization servers
        type: array
        items:
          $ref: '#/definitions/GetServerDeveloperResponse'
        x-go-name: Servers
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  LoginAccepted:
    type: object
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-go-name: RedirectTo
    x-go-package: github.com/cloudentity/acp/internal/domain
  LoginRejected:
    type: object
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-go-name: RedirectTo
    x-go-package: github.com/cloudentity/acp/internal/domain
  LoginSessionRequest:
    type: object
    properties:
      query_params:
        $ref: '#/definitions/Values'
      url:
        description: original authorize endpoint url
        type: string
        x-go-name: URL
    x-go-package: github.com/cloudentity/acp/internal/domain
  LoginSessionResponse:
    type: object
    properties:
      acr:
        description: authentication context class reference
        type: string
        format: acr
        x-go-name: Acr
      allowed_scopes:
        description: scopes that passed policy validation
        type: object
        additionalProperties:
          type: boolean
        x-go-name: AllowedScopes
      amr:
        description: authentication methods references
        type: array
        items:
          type: string
          format: amr
        x-go-name: Amr
      auth_time:
        description: time when user authenticated
        type: string
        format: date-time
        x-go-name: AuthTime
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: OAuth client identifier
        type: string
        format: clientID
        x-go-name: ClientID
        example: default
      error:
        $ref: '#/definitions/RFC6749Error'
      granted_audience:
        description: list of granted audience
        type: array
        items:
          type: string
        x-go-name: GrantedAudience
      granted_scopes:
        description: list of granted scopes
        type: array
        items:
          type: string
          format: scopeName
        x-go-name: GrantedScopes
        example:
        - email
        - profile
        - openid
      id:
        description: unique id of login session
        type: string
        format: loginID
        x-go-name: ID
      idp_id:
        description: idp identifier
        type: string
        format: idpID
        x-go-name: IDPID
      login_approved:
        description: is login approved
        type: boolean
        x-go-name: LoginApproved
        example: false
      login_rejected:
        description: is login rejected
        type: boolean
        x-go-name: LoginRejected
        example: false
      max_age:
        description: max age for a session to live
        type: string
        format: duration
        x-go-name: MaxAge
      request_query_params:
        $ref: '#/definitions/Values'
      request_url:
        description: original url requested by oauth client
        type: string
        x-go-name: RequestURL
      requested_acr:
        description: requested acr
        type: array
        items:
          type: string
        x-go-name: RequestedAcr
      requested_at:
        description: time when oauth client made a request
        type: string
        format: date-time
        x-go-name: RequestedAt
      requested_audience:
        description: list of requested audiences
        type: array
        items:
          type: string
        x-go-name: RequestedAudience
      requested_claims:
        $ref: '#/definitions/ClaimsRequests'
      requested_grant_type:
        description: requested grant type
        type: string
        x-go-name: RequestedGrantType
      requested_scopes:
        description: list of requested scopes
        type: array
        items:
          $ref: '#/definitions/RequestedScope'
        x-go-name: RequestedScopes
      scope_grant_approved:
        description: is scope grant approved
        type: boolean
        x-go-name: ScopeGrantApproved
        example: true
      scope_grant_rejected:
        description: is scope grant rejected
        type: boolean
        x-go-name: ScopeGrantRejected
        example: false
      server_id:
        description: authorization server identifier
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      subject:
        description: user identifier
        type: string
        format: subject
        x-go-name: Subject
      tenant_id:
        description: tenant identifier
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  Mapping:
    description: Source and target must be provided.
    type: object
    title: Attribute mapping.
    required:
    - source
    - target
    - type
    properties:
      allow_weak_decoding:
        description: |-
          Weak decoding

          If AllowWeakDecoding is true, the decoder will make the following
          "weak" conversions:

          bools to string (true = "1", false = "0")
          numbers to string (base 10)
          bools to int/uint (true = 1, false = 0)
          strings to int/uint (base implied by prefix)
          int to bool (true if value != 0)
          string to bool (accepts: 1, t, T, TRUE, true, True, 0, f, F,
          FALSE, false, False. Anything else is an error)
          empty array = empty map and vice versa
          negative numbers to overflowed uint values (base 10)
          slice of maps to a merged map
          single values are converted to slices if required. Each
          element is weakly decoded.
        type: boolean
        x-go-name: AllowWeakDecoding
        example: false
      source:
        description: |-
          Source attribute.

          Source path to attribute(s) which should be copied to the identity context.
          Use '.' to copy everything.
        type: string
        x-go-name: Source
        example: access_token
      target:
        description: |-
          Target attribute.

          Target path in the identity context where source attribute(s) should be pasted.
          Use '.' to paste to context top level object.
        type: string
        x-go-name: Target
        example: .
      type:
        description: |-
          Target type

          number, string, bool, number_array, string_array, bool_array or any
        type: string
        format: type
        x-go-name: Type
        example: string
    x-go-package: github.com/cloudentity/acp/internal/domain
  Mappings:
    description: |-
      Mappings allows to unify attributes from external IDPs and propage them to
      the identity context to be used later on. In case of OIDC authentication method
      when mapping is not provided, default mapping is used which copies id and access
      tokens attributes to the identity context. In case of static and custom authentication
      methods if mapping is not provided all attributes are copied to the identity context.
    type: array
    title: Optional list of mappings.
    items:
      $ref: '#/definitions/Mapping'
    x-go-package: github.com/cloudentity/acp/internal/domain
  Meta:
    description: Response metadata
    type: object
    properties:
      TotalPages:
        type: integer
        format: int64
    x-go-package: github.com/cloudentity/acp/internal/openbanking/handler
  Metadata:
    type: object
    additionalProperties:
      type: object
    x-go-package: github.com/cloudentity/acp/internal/domain
  OBConsent:
    type: object
    properties:
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      consent_id:
        type: string
        format: consentID
        x-go-name: ConsentID
      server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      type:
        $ref: '#/definitions/ConsentType'
    x-go-package: github.com/cloudentity/acp/internal/openbanking
  OIDCAuthentication:
    description: Provide OAuth client details here.
    type: object
    title: OIDC authentication settings.
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      client_secret:
        description: OAuth client secret
        type: string
        x-go-name: ClientSecret
        example: secret
      get_user_info:
        description: flag to fetch additional user attributes from userinfo endpoint
        type: boolean
        x-go-name: GetUserInfo
      issuer_url:
        description: Authorization server issuer URL
        type: string
        x-go-name: IssuerURL
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  OIDCCredentials:
    type: object
    properties:
      client_secret:
        type: string
        x-go-name: ClientSecret
    x-go-package: github.com/cloudentity/acp/internal/domain
  OIDCIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/OIDCCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/OIDCSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  OIDCServerConsent:
    type: object
    x-go-package: github.com/cloudentity/acp/internal/domain
  OIDCSettings:
    type: object
    properties:
      client_id:
        description: OAuth client identifier
        type: string
        x-go-name: ClientID
        example: client
      get_user_info:
        description: flag to fetch additional user attributes from userinfo endpoint
        type: boolean
        x-go-name: GetUserInfo
      issuer_url:
        description: Authorization server issuer URL
        type: string
        x-go-name: IssuerURL
      redirect_url:
        description: OAuth redirect URL
        type: string
        x-go-name: RedirectURL
        example: https://example.com/callback
      scopes:
        description: OAuth scopes which client will be requesting
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - profile
        - openid
    x-go-package: github.com/cloudentity/acp/internal/domain
  OktaAuthentication:
    type: object
    title: Okta authentication settings.
    properties:
      authorization_server_id:
        description: |-
          if use_org_authorization_server is set to false, use this field to specify id of custom authorization server
          if not provided 'default' will be used
        type: string
        x-go-name: AuthorizationServerID
      domain:
        description: domain
        type: string
        x-go-name: Domain
        example: dev-316761.okta.com
      get_user_info:
        description: flag if additional user data should be fetched from userinfo
          endpoint
        type: boolean
        x-go-name: GetUserInfo
      redirect_url:
        description: redirect url
        type: string
        x-go-name: RedirectURL
      scopes:
        description: list of scopes that client will request
        type: array
        items:
          type: string
        x-go-name: Scopes
      supervisor_client:
        $ref: '#/definitions/OktaSupervisorClient'
      use_org_authorization_server:
        description: if set to true, build-in authorization server will be used
        type: boolean
        x-go-name: UseOrgAuthorizationServer
    x-go-package: github.com/cloudentity/acp/internal/domain
  OktaCredentials:
    type: object
    properties:
      supervisor_client:
        $ref: '#/definitions/OktaSupervisorClient'
    x-go-package: github.com/cloudentity/acp/internal/domain
  OktaIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/OktaCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/OktaSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  OktaSettings:
    type: object
    properties:
      authorization_server_id:
        description: |-
          if use_org_authorization_server is set to false, use this field to specify id of custom authorization server
          if not provided 'default' will be used
        type: string
        x-go-name: AuthorizationServerID
      domain:
        description: domain
        type: string
        x-go-name: Domain
        example: dev-316761.okta.com
      get_user_info:
        description: flag if additional user data should be fetched from userinfo
          endpoint
        type: boolean
        x-go-name: GetUserInfo
      redirect_url:
        description: redirect url
        type: string
        x-go-name: RedirectURL
      scopes:
        description: list of scopes that client will request
        type: array
        items:
          type: string
        x-go-name: Scopes
      use_org_authorization_server:
        description: if set to true, build-in authorization server will be used
        type: boolean
        x-go-name: UseOrgAuthorizationServer
    x-go-package: github.com/cloudentity/acp/internal/domain
  OktaSupervisorClient:
    description: |-
      to enable Okta deep integration to need to create service oauth client in Okta
      this client should have scopes allowing to create clients and list groups.
    type: object
    properties:
      client_id:
        description: client id
        type: string
        x-go-name: ClientID
      private_key:
        description: client private key
        type: string
        x-go-name: PrivateKey
    x-go-package: github.com/cloudentity/acp/internal/domain
  OpenbankingAccountAccessConsent:
    type: object
    properties:
      account_ids:
        description: The unique AccountId(s) that are valid for the account-access-consent
        type: array
        items:
          type: string
        x-go-name: AccountIDs
      consent_id:
        description: Unique identification as assigned to identify the account access
          consent resource.
        type: string
        format: consentID
        x-go-name: ConsentID
      creation_date_time:
        description: Date and time at which the resource was created.
        type: string
        format: date-time
        x-go-name: CreationDateTime
      expiration_date_time:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
        x-go-name: ExpirationDateTime
      permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
        x-go-name: Permissions
      status:
        description: Specifies the status of consent resource in code form.
        type: string
        format: accountAccessStatus
        x-go-name: Status
      status_update_date_time:
        description: Date and time at which the resource status was updated.
        type: string
        format: date-time
        x-go-name: StatusUpdateDateTime
      transaction_from_date_time:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionFromDateTime
      transaction_to_date_time:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionToDateTime
    x-go-package: github.com/cloudentity/acp/internal/domain
  OpenbankingAccountAccessConsentWithClient:
    type: object
    properties:
      account_ids:
        description: The unique AccountId(s) that are valid for the account-access-consent
        type: array
        items:
          type: string
        x-go-name: AccountIDs
      client_uri:
        description: url to a client website
        type: string
        x-go-name: ClientURI
        example: https://example.com
      consent_id:
        description: Unique identification as assigned to identify the account access
          consent resource.
        type: string
        format: consentID
        x-go-name: ConsentID
      creation_date_time:
        description: Date and time at which the resource was created.
        type: string
        format: date-time
        x-go-name: CreationDateTime
      expiration_date_time:
        description: |-
          Specified date and time the permissions will expire. If this is not populated,
          the permissions will be open ended.
        type: string
        format: date-time
        x-go-name: ExpirationDateTime
      id:
        description: client id
        type: string
        x-go-name: ID
        example: default
      logo_uri:
        description: url to a page where client logo is served
        type: string
        x-go-name: LogoURI
        example: https://example.com/logo.png
      name:
        description: client name
        type: string
        x-go-name: Name
        example: My app
      permissions:
        description: |-
          Specifies the Open Banking account access data types. This is a list of the data clusters
          being consented by the PSU, and requested for authorisation with the ASPSP.
        type: array
        items:
          type: string
        x-go-name: Permissions
      status:
        description: Specifies the status of consent resource in code form.
        type: string
        format: accountAccessStatus
        x-go-name: Status
      status_update_date_time:
        description: Date and time at which the resource status was updated.
        type: string
        format: date-time
        x-go-name: StatusUpdateDateTime
      transaction_from_date_time:
        description: |-
          Specified start date and time for the transaction query period. If this is not populated,
          the start date will be open ended, and data will be returned from the earliest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionFromDateTime
      transaction_to_date_time:
        description: |-
          Specified end date and time for the transaction query period. If this is not populated,
          the end date will be open ended, and data will be returned to the latest available transaction.
        type: string
        format: date-time
        x-go-name: TransactionToDateTime
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  OpenbankingError:
    type: object
    properties:
      ErrorCode:
        description: Low level textual error code, e.g., UK.OBIE.Field.Missing
        type: string
      Message:
        description: |-
          A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or
          'RequestedExecutionDateTime must be in future'
        type: string
      Path:
        description: |-
          Recommended but optional reference to the JSON Path of the field with error,
          e.g., Data.Initiation.InstructedAmount.Currency
        type: string
      Url:
        description: URL to help remediate the problem, or provide more information,
          or to API Reference, or help etc
        type: string
        x-go-name: URL
    x-go-name: OBError
    x-go-package: github.com/cloudentity/acp/internal/openbanking
  PIICategory:
    type: object
    properties:
      name:
        description: name
        type: string
        x-go-name: Name
        example: HIPAA
    x-go-package: github.com/cloudentity/acp/internal/domain
  Policies:
    type: object
    properties:
      policies:
        description: list of policies
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: Policies
    x-go-package: github.com/cloudentity/acp/internal/domain
  Policy:
    type: object
    properties:
      definition:
        description: definition for rego policy
        type: string
        x-go-name: Definition
      id:
        description: policy id
        type: string
        format: policyID
        x-go-name: PolicyID
        example: "1"
      language:
        description: policy language
        type: string
        format: policyLanguage
        x-go-name: Language
        example: cloudentity
      policy_name:
        description: policy name
        type: string
        x-go-name: PolicyName
        example: check_consent
      query:
        description: query for rego policy
        type: string
        x-go-name: Query
      server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      type:
        description: policy type
        type: string
        format: policyType
        x-go-name: Type
        example: user
      validators:
        description: list of validators for cloudentity policy
        type: array
        items:
          $ref: '#/definitions/ValidatorConfig'
        x-go-name: Validators
    x-go-package: github.com/cloudentity/acp/internal/domain
  PolicyDependency:
    type: object
    properties:
      embedded_policy_id:
        type: string
        format: policyID
        x-go-name: EmbeddedPolicyID
      policy_id:
        type: string
        format: policyID
        x-go-name: PolicyID
      server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
    x-go-package: github.com/cloudentity/acp/internal/domain
  PolicyExecutionPoint:
    type: object
    properties:
      policy_id:
        description: optional policy id
        type: string
        format: policyID
        x-go-name: PolicyID
        example: "1"
      server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      target_fk:
        description: target id
        type: string
        x-go-name: TargetID
        example: "1"
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      type:
        description: policy execution point type
        type: string
        format: policyExecutionPoint
        x-go-name: Type
        example: scope_client_assignment
    x-go-package: github.com/cloudentity/acp/internal/domain
  PolicyExecutionPoints:
    type: object
    properties:
      execution_points:
        description: list of policy executions
        type: array
        items:
          $ref: '#/definitions/PolicyExecutionPoint'
        x-go-name: ExecutionPoints
    x-go-package: github.com/cloudentity/acp/internal/domain
  PolicyValidationFailure:
    type: object
    properties:
      details:
        type: string
        x-go-name: Details
      message:
        type: string
        x-go-name: Message
      validator:
        type: string
        x-go-name: Validator
    x-go-package: github.com/cloudentity/acp/internal/domain
  PolicyValidationRecovery:
    type: object
    properties:
      id:
        type: string
        x-go-name: ID
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/cloudentity/acp/internal/domain
  PolicyValidationResult:
    type: object
    properties:
      failure:
        type: array
        items:
          $ref: '#/definitions/PolicyValidationFailure'
        x-go-name: Failure
      recovery:
        type: array
        items:
          $ref: '#/definitions/PolicyValidationRecovery'
        x-go-name: Recovery
      result:
        type: string
        x-go-name: Result
    x-go-package: github.com/cloudentity/acp/internal/domain
  PrivacyLedgerEvent:
    type: object
    properties:
      date:
        type: string
        format: date-time
        x-go-name: Date
      id:
        type: string
        format: privacyLedgerEventID
        x-go-name: ID
      payload:
        $ref: '#/definitions/PrivacyLedgerPayload'
      payload_signature:
        type: string
        x-go-name: PayloadSignature
      subject:
        type: string
        format: subject
        x-go-name: Subject
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
    x-go-package: github.com/cloudentity/acp/internal/domain
  PrivacyLedgerEventType:
    type: string
    x-go-package: github.com/cloudentity/acp/internal/domain
  PrivacyLedgerEvents:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/PrivacyLedgerEvent'
        x-go-name: Events
    x-go-package: github.com/cloudentity/acp/internal/domain
  PrivacyLedgerPayload:
    type: object
    properties:
      consent_granted:
        $ref: '#/definitions/ConsentGrantedEvent'
      consent_revoked:
        $ref: '#/definitions/ConsentRevokedEvent'
      event_type:
        $ref: '#/definitions/PrivacyLedgerEventType'
    x-go-package: github.com/cloudentity/acp/internal/domain
  Purpose:
    type: object
    properties:
      name:
        description: name
        type: string
        format: purposeName
        x-go-name: Name
        example: Core Function
      primary:
        description: is the purpose primary. If there are multiple purposes defined,
          one of them must be marked as primary.
        type: boolean
        x-go-name: Primary
        example: true
    x-go-package: github.com/cloudentity/acp/internal/domain
  RFC6749Error:
    type: object
    properties:
      cause:
        type: string
        x-go-name: Cause
      error:
        type: string
        x-go-name: Name
      error_description:
        type: string
        x-go-name: Description
      error_hint:
        type: string
        x-go-name: Hint
      status_code:
        type: integer
        format: int64
        x-go-name: Code
    x-go-package: github.com/cloudentity/acp/thirdparty/fosite
  RecoveryConfig:
    type: object
    properties:
      id:
        type: string
        x-go-name: ID
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/cloudentity/acp/internal/domain
  RegistrationToken:
    type: object
    properties:
      client_uri:
        type: string
        x-go-name: ClientURI
      expires_in:
        type: integer
        format: int64
        x-go-name: ExpiresIn
      signature:
        type: string
        x-go-name: Signature
    x-go-package: github.com/cloudentity/acp/internal/domain
  RejectAccountAccessConsentRequest:
    type: object
    properties:
      error:
        description: reject error
        type: string
        x-go-name: Error
      error_cause:
        description: error cause
        type: string
        x-go-name: ErrorCause
      error_description:
        description: reject error description
        type: string
        x-go-name: ErrorDescription
      id:
        description: login identifier
        type: string
        format: loginID
        x-go-name: ID
      login_state:
        description: login state
        type: string
        x-go-name: LoginState
      status_code:
        description: reject http status code
        type: integer
        format: int64
        x-go-name: StatusCode
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  RejectScopeGrant:
    type: object
    properties:
      error:
        description: reject error
        type: string
        x-go-name: Error
      error_cause:
        description: error cause
        type: string
        x-go-name: ErrorCause
      error_description:
        description: reject error description
        type: string
        x-go-name: ErrorDescription
      id:
        description: login identifier
        type: string
        format: loginID
        x-go-name: ID
      login_state:
        description: login state
        type: string
        x-go-name: LoginState
      status_code:
        description: reject http status code
        type: integer
        format: int64
        x-go-name: StatusCode
    x-go-package: github.com/cloudentity/acp/internal/domain
  RejectSession:
    type: object
    properties:
      error:
        description: reject error
        type: string
        x-go-name: Error
      error_description:
        description: reject error description
        type: string
        x-go-name: ErrorDescription
      id:
        description: login identifier
        type: string
        format: loginID
        x-go-name: ID
      login_state:
        description: login state
        type: string
        x-go-name: LoginState
      status_code:
        description: reject http status code
        type: integer
        format: int64
        x-go-name: StatusCode
    x-go-name: RejectLogin
    x-go-package: github.com/cloudentity/acp/internal/domain
  RemoveServiceConfigurationResult:
    type: object
    properties:
      not_removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: NotRemovedPolicies
      removed_apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: RemovedAPIs
      removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: RemovedPolicies
    x-go-package: github.com/cloudentity/acp/internal/domain
  RequestedScope:
    type: object
    properties:
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: scope description which will be displayed as a hint on a consent
          page
        type: string
        x-go-name: Description
        example: This scope value requests offline access using refresh token
      display_name:
        description: scope display name which will be displayed on a consent page
        type: string
        x-go-name: DisplayName
        example: Offline Access
      id:
        description: scope id
        type: string
        format: scopeID
        x-go-name: ID
        example: "1"
      name:
        description: scope name
        type: string
        format: scopeName
        x-go-name: Name
        example: offline_access
      params:
        type: array
        items:
          type: string
        x-go-name: Params
      requested_name:
        type: string
        format: scopeName
        x-go-name: RequestedName
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_service:
        type: boolean
        x-go-name: WithService
    x-go-package: github.com/cloudentity/acp/internal/domain
  SAMLAuthentication:
    type: object
    properties:
      entity_issuer:
        description: unique id of a service provider, if not provided will be generated
        type: string
        x-go-name: EntityIssuer
        example: https://localhost:8443/default/default/login
      identifier_attribute:
        description: |-
          attribute name from AttributeStatement saml response which will be used as identifier in ACP
          applies only when identifier source is set to attribute
        type: string
        x-go-name: IdentifierAttribute
      identifier_source:
        description: 'identifier source, one of: subject | attribute'
        type: string
        x-go-name: IdentifierSource
      idp_certificate:
        description: idp certificate, must start with -----BEGIN CERTIFICATE-----
          and end with -----END CERTIFICATE-----
        type: string
        x-go-name: IdpCertificate
      redirect_url:
        description: endpoint where IDP will post SamlResponse
        type: string
        x-go-name: RedirectURL
        example: https://localhost:8443/default/default/login
      sso_url:
        description: endpoint where SamlRequest will be sent
        type: string
        x-go-name: SSOURL
        example: https://test-dev-ed.my.salesforce.com/idp/endpoint/HttpPost
      subject_name_id_format:
        description: |-
          name id format of saml subject
          applies only when identifier source is set to subject
          allowed values:
          urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
          urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
          urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
          urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName
          urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted
          urn:oasis:names:tc:SAML:2.0:nameid-format:entity
          urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos
          urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
          urn:oasis:names:tc:SAML:2.0:nameid-format:transient
          default value: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        type: string
        x-go-name: SubjectNameIDFormat
    x-go-package: github.com/cloudentity/acp/internal/domain
  SAMLCredentials:
    type: object
    properties:
      idp_certificate:
        description: idp certificate, must start with -----BEGIN CERTIFICATE-----
          and end with -----END CERTIFICATE-----
        type: string
        x-go-name: IdpCertificate
    x-go-package: github.com/cloudentity/acp/internal/domain
  SAMLIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/SAMLCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/SAMLSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  SAMLSettings:
    type: object
    properties:
      entity_issuer:
        description: unique id of a service provider, if not provided will be generated
        type: string
        x-go-name: EntityIssuer
        example: https://localhost:8443/default/default/login
      identifier_attribute:
        description: |-
          attribute name from AttributeStatement saml response which will be used as identifier in ACP
          applies only when identifier source is set to attribute
        type: string
        x-go-name: IdentifierAttribute
      identifier_source:
        description: 'identifier source, one of: subject | attribute'
        type: string
        x-go-name: IdentifierSource
      redirect_url:
        description: endpoint where IDP will post SamlResponse
        type: string
        x-go-name: RedirectURL
        example: https://localhost:8443/default/default/login
      sso_url:
        description: endpoint where SamlRequest will be sent
        type: string
        x-go-name: SSOURL
        example: https://test-dev-ed.my.salesforce.com/idp/endpoint/HttpPost
      subject_name_id_format:
        description: |-
          name id format of saml subject
          applies only when identifier source is set to subject
          allowed values:
          urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
          urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
          urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
          urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName
          urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted
          urn:oasis:names:tc:SAML:2.0:nameid-format:entity
          urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos
          urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
          urn:oasis:names:tc:SAML:2.0:nameid-format:transient
          default value: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        type: string
        x-go-name: SubjectNameIDFormat
    x-go-package: github.com/cloudentity/acp/internal/domain
  Scope:
    type: object
    properties:
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: scope description which will be displayed as a hint on a consent
          page
        type: string
        x-go-name: Description
        example: This scope value requests offline access using refresh token
      display_name:
        description: scope display name which will be displayed on a consent page
        type: string
        x-go-name: DisplayName
        example: Offline Access
      id:
        description: scope id
        type: string
        format: scopeID
        x-go-name: ID
        example: "1"
      name:
        description: scope name
        type: string
        format: scopeName
        x-go-name: Name
        example: offline_access
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeGrant:
    type: object
    properties:
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      given_at:
        type: string
        format: date-time
        x-go-name: GivenAt
      granted_scope_name:
        type: string
        format: scopeName
        x-go-name: GrantedScopeName
      language:
        type: string
        format: language
        x-go-name: Language
      scope_name:
        type: string
        format: scopeName
        x-go-name: ScopeName
      server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      subject:
        type: string
        format: subject
        x-go-name: Subject
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeGrantAccepted:
    type: object
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-go-name: RedirectTo
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeGrantRejected:
    type: object
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-go-name: RedirectTo
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeGrantSessionResponse:
    type: object
    properties:
      acr:
        description: authentication context class reference
        type: string
        format: acr
        x-go-name: Acr
      allowed_scopes:
        description: scopes that passed policy validation
        type: object
        additionalProperties:
          type: boolean
        x-go-name: AllowedScopes
      amr:
        description: authentication methods references
        type: array
        items:
          type: string
          format: amr
        x-go-name: Amr
      auth_time:
        description: time when user authenticated
        type: string
        format: date-time
        x-go-name: AuthTime
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: OAuth client identifier
        type: string
        format: clientID
        x-go-name: ClientID
        example: default
      error:
        $ref: '#/definitions/RFC6749Error'
      granted_audience:
        description: list of granted audience
        type: array
        items:
          type: string
        x-go-name: GrantedAudience
      granted_scopes:
        description: list of granted scopes
        type: array
        items:
          type: string
          format: scopeName
        x-go-name: GrantedScopes
        example:
        - email
        - profile
        - openid
      id:
        description: unique id of login session
        type: string
        format: loginID
        x-go-name: ID
      idp_id:
        description: idp identifier
        type: string
        format: idpID
        x-go-name: IDPID
      login_approved:
        description: is login approved
        type: boolean
        x-go-name: LoginApproved
        example: false
      login_rejected:
        description: is login rejected
        type: boolean
        x-go-name: LoginRejected
        example: false
      max_age:
        description: max age for a session to live
        type: string
        format: duration
        x-go-name: MaxAge
      request_query_params:
        $ref: '#/definitions/Values'
      request_url:
        description: original url requested by oauth client
        type: string
        x-go-name: RequestURL
      requested_acr:
        description: requested acr
        type: array
        items:
          type: string
        x-go-name: RequestedAcr
      requested_at:
        description: time when oauth client made a request
        type: string
        format: date-time
        x-go-name: RequestedAt
      requested_audience:
        description: list of requested audiences
        type: array
        items:
          type: string
        x-go-name: RequestedAudience
      requested_claims:
        $ref: '#/definitions/ClaimsRequests'
      requested_grant_type:
        description: requested grant type
        type: string
        x-go-name: RequestedGrantType
      requested_scopes:
        description: list of requested scopes
        type: array
        items:
          $ref: '#/definitions/RequestedScope'
        x-go-name: RequestedScopes
      scope_grant_approved:
        description: is scope grant approved
        type: boolean
        x-go-name: ScopeGrantApproved
        example: true
      scope_grant_rejected:
        description: is scope grant rejected
        type: boolean
        x-go-name: ScopeGrantRejected
        example: false
      server_id:
        description: authorization server identifier
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      subject:
        description: user identifier
        type: string
        format: subject
        x-go-name: Subject
      tenant_id:
        description: tenant identifier
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  ScopePrivacyInformation:
    type: object
    properties:
      pii_categories:
        type: array
        items:
          $ref: '#/definitions/PIICategory'
        x-go-name: PIICategories
      purpose:
        type: string
        format: purposeName
        x-go-name: Purpose
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeWithService:
    type: object
    properties:
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: scope description which will be displayed as a hint on a consent
          page
        type: string
        x-go-name: Description
        example: This scope value requests offline access using refresh token
      display_name:
        description: scope display name which will be displayed on a consent page
        type: string
        x-go-name: DisplayName
        example: Offline Access
      id:
        description: scope id
        type: string
        format: scopeID
        x-go-name: ID
        example: "1"
      name:
        description: scope name
        type: string
        format: scopeName
        x-go-name: Name
        example: offline_access
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_service:
        type: boolean
        x-go-name: WithService
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeWithServiceDeveloperResponse:
    type: object
    properties:
      scope_description:
        description: scope description
        type: string
        x-go-name: ScopeDescription
        example: This scope value requests offline access using refresh token
      scope_display_name:
        description: scope display name
        type: string
        x-go-name: ScopeDisplayName
        example: Offline access
      scope_id:
        description: scope id
        type: string
        x-go-name: ScopeID
        example: "1"
      scope_name:
        description: scope name
        type: string
        x-go-name: ScopeName
        example: offline_access
      service_description:
        description: service description
        type: string
        x-go-name: ServiceDescription
        example: service description
      service_id:
        description: service id
        type: string
        x-go-name: ServiceID
        example: "1"
      service_name:
        description: service name
        type: string
        x-go-name: ServiceName
        example: service
      with_service:
        description: is scope assigned to a service
        type: boolean
        x-go-name: WithService
        example: false
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  ScopeWithServiceID:
    type: object
    properties:
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: scope description which will be displayed as a hint on a consent
          page
        type: string
        x-go-name: Description
        example: This scope value requests offline access using refresh token
      display_name:
        description: scope display name which will be displayed on a consent page
        type: string
        x-go-name: DisplayName
        example: Offline Access
      id:
        description: scope id
        type: string
        format: scopeID
        x-go-name: ID
        example: "1"
      name:
        description: scope name
        type: string
        format: scopeName
        x-go-name: Name
        example: offline_access
      service_id:
        description: optional service id
        type: string
        format: serviceID
        x-go-name: ServiceID
        example: "1"
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScopeWithServicePublicResponse:
    type: object
    properties:
      scope_description:
        description: scope description
        type: string
        x-go-name: ScopeDescription
        example: This scope value requests offline access using refresh token
      scope_display_name:
        description: scope display name
        type: string
        x-go-name: ScopeDisplayName
        example: Offline access
      scope_id:
        description: scope id
        type: string
        x-go-name: ScopeID
        example: "1"
      scope_name:
        description: scope name
        type: string
        x-go-name: ScopeName
        example: offline_access
      service_description:
        description: service description
        type: string
        x-go-name: ServiceDescription
        example: service description
      service_id:
        description: service id
        type: string
        x-go-name: ServiceID
        example: "1"
      service_name:
        description: service name
        type: string
        x-go-name: ServiceName
        example: service
      with_service:
        description: is scope assigned to a service
        type: boolean
        x-go-name: WithService
        example: false
    x-go-package: github.com/cloudentity/acp/internal/handler/public
  ScopesWithServices:
    type: object
    properties:
      scopes:
        type: array
        items:
          $ref: '#/definitions/ScopeWithService'
        x-go-name: Scopes
    x-go-package: github.com/cloudentity/acp/internal/domain
  ScriptTransformer:
    description: script transformer ALPHA_FEATURE
    type: object
    properties:
      enabled:
        type: boolean
        x-go-name: Enabled
      script:
        type: string
        x-go-name: Script
    x-go-package: github.com/cloudentity/acp/internal/domain
  Server:
    description: Multi Tenant authorization server
    type: object
    properties:
      access_token_strategy:
        description: Access token strategy
        type: string
        x-go-name: AccessTokenStrategy
        example: jwt
      access_token_ttl:
        description: Access token time to live (default 1 hour)
        type: string
        format: duration
        x-go-name: AccessTokenTTL
        example: 1h10m30s
      authorization_code_ttl:
        description: Authorization code time to live (default 10 minutes)
        type: string
        format: duration
        x-go-name: AuthorizationCodeTTL
        example: 10m0s
      client_certificate_header:
        description: Client certificate header name containing certificate in pem
          format
        type: string
        x-go-name: ClientCertificateHeader
      color:
        description: Color
        type: string
        x-go-name: Color
        example: '#007FFF'
      cookie_max_age:
        description: Cookie max age (default 1 hour)
        type: string
        format: duration
        x-go-name: CookieMaxAge
        example: 1h10m30s
      dynamic_client_registration:
        $ref: '#/definitions/DynamicClientRegistrationSettings'
      enforce_pkce:
        description: Enforce pkce (default false)
        type: boolean
        x-go-name: EnforcePKCE
        example: false
      enforce_pkce_for_public_clients:
        description: Enforce pkce for public clients (default false)
        type: boolean
        x-go-name: EnforcePKCEForPublicClients
        example: false
      grant_types:
        description: Supported grant types
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - authorization_code
        - implicit
        - refresh_token
        - client_credentials
      id:
        description: Unique identifier. If not provided will be generated
        type: string
        format: serverID
        x-go-name: ID
        example: 935ab21c-b20a-11e9-a2a3-2a2ae2dbcce4
      id_token_ttl:
        description: ID token time to live (default 1 hour)
        type: string
        format: duration
        x-go-name: IDTokenTTL
        example: 1h10m30s
      issuer_url:
        description: Authorization Server Issuer. If not provided will be set based
          on deployment configuration
        type: string
        x-go-name: IssuerURL
        example: http://example.com/default/default
      jwks:
        $ref: '#/definitions/JWKs'
      key_type:
        description: |-
          Key type used to generate key which will be used to sign access and id tokens
          Used only as input parameter in Create Authorization Server API
          Currently `rsa` and `ecdsa` are supported
        type: string
        x-go-name: KeyType
        example: rsa
      logo_uri:
        description: Logo URI
        type: string
        x-go-name: LogoURI
      name:
        description: Name
        type: string
        x-go-name: Name
        example: Sample authorization server
      profile:
        description: Server profile
        type: string
        format: serverProfile
        x-go-name: Profile
        example: default
      read_client_certificate_from_header:
        description: |-
          Flag indicating whether client certificate should be read from header.
          If set to true, than the client certificate header is required.
          This is useful for behind load balancer setup.
        type: boolean
        x-go-name: ReadClientCertificateFromHeader
      refresh_token_ttl:
        description: Refresh token time to live (default 30 days - 720 hours)
        type: string
        format: duration
        x-go-name: RefreshTokenTTL
        example: 720h0m0s
      root_cas:
        description: |-
          PEM encoded root CA certificates used for client mtls token endpoint authentication.
          If not set the system root CA certifiates are used instead.
        type: string
        x-go-name: RootCAs
      rotated_secrets:
        description: Rotated secrets used for validating old tokens
        type: array
        items:
          type: string
        x-go-name: RotatedSecrets
        example:
        - jFpwIvuKJP46J71WqszPv1SrzoUr-cSILP9EPdlClB4
      secret:
        description: Secret used for hashing, must have at least 32 characters. If
          not provided will be generated.
        type: string
        x-go-name: Secret
        example: hW5WhKX_7w7BLwUQ6mn7Cp70_OoKI_F1y1hLS5U8lIU
      subject_identifier_algorithm_salt:
        description: Salt used to hash subject when pairwise subject type is used
        type: string
        x-go-name: SubjectIdentifierAlgorithmSalt
      subject_identifier_types:
        description: Supported subject identifier types
        type: array
        items:
          type: string
        x-go-name: SubjectIdentifierTypes
        example:
        - public
        - pairwise
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      token_endpoint_authn_methods:
        description: Supported token endpoint authentication methods
        type: array
        items:
          type: string
        x-go-name: TokenEndpointAuthnMethods
      type:
        description: Server type
        type: string
        format: serverType
        x-go-name: Type
        example: regular
    x-go-package: github.com/cloudentity/acp/internal/domain
  ServerAPIs:
    type: object
    properties:
      apis_by_services:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/API'
        x-go-name: APIsByServices
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ServerConsent:
    type: object
    properties:
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      custom:
        $ref: '#/definitions/CustomServerConsent'
      oidc:
        $ref: '#/definitions/OIDCServerConsent'
      server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      type:
        type: string
        format: serverConsentType
        x-go-name: Type
    x-go-package: github.com/cloudentity/acp/internal/domain
  ServerToServer:
    type: object
    properties:
      dependent:
        description: dependent server id
        type: string
        format: serverID
        x-go-name: DependentServerID
        example: default
      server_id:
        description: authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: developer
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
    x-go-package: github.com/cloudentity/acp/internal/domain
  Servers:
    type: object
    properties:
      servers:
        type: array
        items:
          $ref: '#/definitions/Server'
        x-go-name: Servers
    x-go-package: github.com/cloudentity/acp/internal/domain
  ServersBindings:
    type: object
    properties:
      bindings:
        type: array
        items:
          $ref: '#/definitions/ServerToServer'
        x-go-name: Bindings
    x-go-package: github.com/cloudentity/acp/internal/domain
  Service:
    type: object
    properties:
      audience:
        description: service audience
        type: string
        x-go-name: Audience
        example: https://api.example.com
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: service description
        type: string
        x-go-name: Description
        example: Service description
      gateway_id:
        description: gateway id
        type: string
        format: gatewayID
        x-go-name: GatewayID
      id:
        description: unique service id
        type: string
        format: serviceID
        x-go-name: ID
        example: "1"
      name:
        description: service name
        type: string
        x-go-name: Name
        example: Sample service
      system:
        description: Is service a system service
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-go-name: WithSpecification
    x-go-package: github.com/cloudentity/acp/internal/domain
  ServiceConnectedToGateway:
    type: object
    properties:
      api_group_id:
        description: Optional id of api group id connected to the service
        type: string
        format: apiGroupID
        x-go-name: APIGroupID
      api_group_metadata:
        $ref: '#/definitions/APIGroupMetadata'
      audience:
        description: service audience
        type: string
        x-go-name: Audience
        example: https://api.example.com
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: service description
        type: string
        x-go-name: Description
        example: Service description
      gateway_id:
        description: gateway id
        type: string
        format: gatewayID
        x-go-name: GatewayID
      id:
        description: unique service id
        type: string
        format: serviceID
        x-go-name: ID
        example: "1"
      name:
        description: service name
        type: string
        x-go-name: Name
        example: Sample service
      system:
        description: Is service a system service
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-go-name: WithSpecification
    x-go-package: github.com/cloudentity/acp/internal/domain
  ServiceResponse:
    type: object
    properties:
      audience:
        description: service audience
        type: string
        x-go-name: Audience
        example: https://api.example.com
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: service description
        type: string
        x-go-name: Description
        example: Service description
      gateway_id:
        description: gateway id
        type: string
        format: gatewayID
        x-go-name: GatewayID
      id:
        description: unique service id
        type: string
        format: serviceID
        x-go-name: ID
        example: "1"
      name:
        description: service name
        type: string
        x-go-name: Name
        example: Sample service
      number_of_scopes:
        type: integer
        format: int64
        x-go-name: NumberOfScopes
      system:
        description: Is service a system service
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-go-name: WithSpecification
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ServiceWithScopes:
    type: object
    properties:
      audience:
        description: service audience
        type: string
        x-go-name: Audience
        example: https://api.example.com
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: service description
        type: string
        x-go-name: Description
        example: Service description
      gateway_id:
        description: gateway id
        type: string
        format: gatewayID
        x-go-name: GatewayID
      id:
        description: unique service id
        type: string
        format: serviceID
        x-go-name: ID
        example: "1"
      name:
        description: service name
        type: string
        x-go-name: Name
        example: Sample service
      scopes:
        description: list of scopes
        type: array
        items:
          $ref: '#/definitions/Scope'
        x-go-name: Scopes
      system:
        description: Is service a system service
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-go-name: WithSpecification
    x-go-package: github.com/cloudentity/acp/internal/domain
  ServiceWithScopesResponse:
    type: object
    properties:
      audience:
        description: service audience
        type: string
        x-go-name: Audience
        example: https://api.example.com
      authorization_server_id:
        description: server id
        type: string
        format: serverID
        x-go-name: AuthorizationServerID
        example: default
      description:
        description: service description
        type: string
        x-go-name: Description
        example: Service description
      gateway_id:
        description: gateway id
        type: string
        format: gatewayID
        x-go-name: GatewayID
      id:
        description: unique service id
        type: string
        format: serviceID
        x-go-name: ID
        example: "1"
      name:
        description: service name
        type: string
        x-go-name: Name
        example: Sample service
      scopes:
        description: list of scopes
        type: array
        items:
          $ref: '#/definitions/Scope'
        x-go-name: Scopes
      system:
        description: Is service a system service
        type: boolean
        x-go-name: System
        example: false
      tenant_id:
        description: tenant id
        type: string
        format: tenantID
        x-go-name: TenantID
        example: default
      with_specification:
        description: true if service has openapi 3 specification
        type: boolean
        x-go-name: WithSpecification
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ServicesResponse:
    type: object
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/ServiceResponse'
        x-go-name: Services
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  SetGatewayConfigurationRequest:
    type: object
    properties:
      api_groups:
        description: List of api groups
        type: array
        items:
          $ref: '#/definitions/APIGroup'
        x-go-name: APIGroups
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  SetGatewayConfigurationResponse:
    type: object
    properties:
      number_of_added_api_groups:
        type: integer
        format: int64
        x-go-name: NumberOfAddedAPIGroups
    x-go-package: github.com/cloudentity/acp/internal/handler/system
  SoftwareStatementSettings:
    type: object
    properties:
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URI of the JWKs of the trusted party responsible for signing
          the Software Statement
        type: string
        x-go-name: JWKsURI
      required:
        type: boolean
        x-go-name: Required
    x-go-package: github.com/cloudentity/acp/internal/domain
  StaticAuthentication:
    type: object
    title: static authentication settings.
    properties:
      hint:
        description: display hint message
        type: boolean
        x-go-name: Hint
      users:
        description: list of users used for authentication
        type: array
        items:
          $ref: '#/definitions/StaticUser'
        x-go-name: Users
    x-go-package: github.com/cloudentity/acp/internal/domain
  StaticCredentials:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/StaticUser'
        x-go-name: Users
    x-go-package: github.com/cloudentity/acp/internal/domain
  StaticIDP:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        type: string
        format: serverID
        x-go-name: ServerID
      client_id:
        type: string
        format: clientID
        x-go-name: ClientID
      credentials:
        $ref: '#/definitions/StaticCredentials'
      disabled:
        type: boolean
        x-go-name: Disabled
      id:
        type: string
        format: idpID
        x-go-name: ID
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        type: string
        format: idpMethod
        x-go-name: Method
      name:
        type: string
        x-go-name: Name
      settings:
        $ref: '#/definitions/StaticSettings'
      static_amr:
        type: array
        items:
          type: string
          format: amr
        x-go-name: StaticAMR
      tenant_id:
        type: string
        format: tenantID
        x-go-name: TenantID
      transformer:
        $ref: '#/definitions/ScriptTransformer'
    x-go-package: github.com/cloudentity/acp/internal/domain
  StaticSettings:
    type: object
    properties:
      hint:
        description: display hint message
        type: boolean
        x-go-name: Hint
    x-go-package: github.com/cloudentity/acp/internal/domain
  StaticUser:
    type: object
    properties:
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      password:
        description: user password
        type: string
        x-go-name: Password
        example: secret
      username:
        description: user login
        type: string
        x-go-name: Username
        example: peter
    x-go-package: github.com/cloudentity/acp/internal/domain
  Tenant:
    type: object
    properties:
      authentication_context_settings:
        $ref: '#/definitions/AuthenticationContextSettings'
      id:
        description: |-
          tenant unique identifier
          exampe: default
        type: string
        format: tenantID
        x-go-name: ID
      jwks:
        $ref: '#/definitions/JWKs'
      name:
        description: tenant name
        type: string
        x-go-name: Name
        example: Default
      url:
        description: tenant url
        type: string
        x-go-name: URL
        example: https://example.com/default
    x-go-package: github.com/cloudentity/acp/internal/domain
  TenantCreated:
    type: object
    properties:
      clients:
        description: list of clients created in tenant
        type: array
        items:
          $ref: '#/definitions/Client'
        x-go-name: Clients
      idps:
        description: list of identity providers
        type: array
        items:
          $ref: '#/definitions/IDP'
        x-go-name: IDPs
      servers:
        description: list of servers created in tenant
        type: array
        items:
          $ref: '#/definitions/Server'
        x-go-name: Servers
      tenant:
        $ref: '#/definitions/Tenant'
    x-go-package: github.com/cloudentity/acp/internal/domain
  TestPolicyDefinition:
    type: object
    properties:
      definition:
        description: definition for rego policy
        type: string
        x-go-name: Definition
      language:
        description: policy language
        type: string
        format: policyLanguage
        x-go-name: Language
        example: cloudentity
      query:
        description: query for rego policy
        type: string
        x-go-name: Query
      validators:
        description: list of validators for cloudentity policy
        type: array
        items:
          $ref: '#/definitions/ValidatorConfig'
        x-go-name: Validators
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  TestPolicyInput:
    type: object
    properties:
      authn_ctx:
        $ref: '#/definitions/AuthenticationContext'
      contexts:
        type: object
        additionalProperties:
          type: object
        x-go-name: Contexts
      request:
        $ref: '#/definitions/TestPolicyInputRequest'
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  TestPolicyInputRequest:
    type: object
    properties:
      headers:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
        x-go-name: Headers
      method:
        type: string
        x-go-name: Method
      path_params:
        type: object
        additionalProperties:
          type: string
        x-go-name: PathParams
      query_params:
        type: object
        additionalProperties:
          type: array
          items:
            type: string
        x-go-name: QueryParams
      url:
        type: string
        x-go-name: URL
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  TestPolicyRequest:
    type: object
    properties:
      input:
        $ref: '#/definitions/TestPolicyInput'
      policy:
        $ref: '#/definitions/TestPolicyDefinition'
      server_id:
        type: string
        format: serverID
        x-go-name: ServerID
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  TestPolicyResponse:
    type: object
    properties:
      failures:
        type: array
        items:
          $ref: '#/definitions/ValidateResponse_ValidatorFailure'
        x-go-name: Failures
      recovery:
        type: array
        items:
          $ref: '#/definitions/ValidateResponse_Recovery'
        x-go-name: Recovery
      result:
        type: string
        x-go-name: Result
      status:
        type: boolean
        x-go-name: Allowed
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  UnbindGroupFromServiceResponse:
    type: object
    properties:
      not_removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: NotRemovedPolicies
      removed_apis:
        type: array
        items:
          $ref: '#/definitions/API'
        x-go-name: RemovedAPIs
      removed_policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
        x-go-name: RemovedPolicies
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  UpdateAPIRequest:
    type: object
    properties:
      data_classifications:
        description: Data classifications
        type: array
        items:
          type: string
        x-go-name: DataClassifications
      policy_id:
        description: optional id of a policy
        type: string
        format: policyID
        x-go-name: PolicyID
        example: block
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  UpdateClientAdminRequest:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      authorization_server_id:
        description: Authorization server id
        type: string
        format: serverID
        x-go-name: ServerID
        example: default
      client_id:
        description: oauth client id
        type: string
        format: clientID
        x-go-name: ID
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      developer_id:
        description: Optional developer owner of this client
        type: string
        format: subject
        x-go-name: DeveloperID
      developer_metadata:
        $ref: '#/definitions/Metadata'
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      metadata:
        $ref: '#/definitions/Metadata'
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      system:
        description: Is client a system client
        type: boolean
        x-go-name: System
        example: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      trusted:
        description: If client is trusted than the consent page is skipped
        type: boolean
        x-go-name: Trusted
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  UpdateClientDeveloperRequest:
    type: object
    properties:
      application_type:
        description: Kind of the application. The default, if omitted, is web. The
          defined values are native or web.
        type: string
        x-go-name: ApplicationType
        example: web
      audience:
        description: oauth client allowed audience
        type: array
        items:
          type: string
        x-go-name: Audience
      client_id_issued_at:
        description: |-
          Time at which the client identifier was issued. The time is represented as the number of seconds from
          1970-01-01T00:00:00Z as measured in UTC until the date/time of issuance
        type: integer
        format: int64
        x-go-name: ClientIDIssuedAt
      client_name:
        description: human redable name
        type: string
        x-go-name: Name
        example: My app
      client_secret:
        description: oauth client secret
        type: string
        x-go-name: Secret
      client_secret_expires_at:
        description: SecretExpiresAt is an integer holding the time at which the client
          secret will expire or 0 if it will not expire.
        type: integer
        format: int64
        x-go-name: ClientSecretExpiresAt
      client_uri:
        description: client URI
        type: string
        x-go-name: ClientURI
      description:
        description: description
        type: string
        x-go-name: Description
      grant_types:
        description: 'oauth client grant types, allowed values: password, refresh_token,
          client_credentials, implicit, authorization_code'
        type: array
        items:
          type: string
        x-go-name: GrantTypes
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing the ID Token issued to this Client.
          The default value depends on authorization server configuration.
        type: string
        x-go-name: IDTokenSignedResponseAlg
        example: ES256
      jwks:
        $ref: '#/definitions/JWKs'
      jwks_uri:
        description: URL of JSON Web Key Set containing the public keys used by the
          client to authenticate
        type: string
        x-go-name: JSONWebKeysURI
      logo_uri:
        description: logo URI
        type: string
        x-go-name: LogoURI
      policy_uri:
        description: policy url to read about how the profile data will be used
        type: string
        x-go-name: PolicyURI
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        description: oauth allowed redirect URIs
        type: array
        items:
          type: string
        x-go-name: RedirectURIs
        example:
        - https://example.com/callback
      request_object_signing_alg:
        description: Signing algorithm for a request object
        type: string
        x-go-name: RequestObjectSigningAlg
        example: none
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters
        type: array
        items:
          type: string
        x-go-name: RequestURIs
      response_types:
        description: 'oauth client response types, allowed values: token, id_token,
          code'
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
        example:
        - token
        - id_token
        - code
      scope:
        description: Optional comma separated scopes for compatibility with spec
        type: string
        x-go-name: Scope
        example: email offline_access openid
      scopes:
        description: oauth client scopes
        type: array
        items:
          type: string
        x-go-name: Scopes
        example:
        - email
        - offline_access
        - openid
      sector_identifier_uri:
        description: |-
          URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a
          file with a single JSON array of redirect_uri values.
        type: string
        x-go-name: SectorIdentifierURI
        example: https://api.jsonbin.io/b/5db6ef08688fed59d2841f1e
      subject_type:
        description: Subject identifier type
        type: string
        x-go-name: SubjectType
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate
        type: string
        x-go-name: SanDNS
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate
        type: string
        x-go-name: SanEmail
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate
        type: string
        x-go-name: SanIP
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate
        type: string
        x-go-name: SanURI
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate
        type: string
        x-go-name: SubjectDN
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-go-name: CertificateBoundAccessToken
      token_endpoint_auth_method:
        description: Token endpoint authentication method
        type: string
        x-go-name: TokenEndpointAuthnMethod
        example: client_secret_basic
      token_endpoint_auth_signing_alg:
        description: Signing algorithm for a token endpoint
        type: string
        x-go-name: TokenEndpointAuthSigningAlg
      tos_uri:
        description: terms of service url
        type: string
        x-go-name: TosURI
      userinfo_signed_response_alg:
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT
          [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims
          as a UTF-8 encoded JSON object using the application/json content-type.
        type: string
        x-go-name: UserinfoSignedResponseAlg
        example: none
    x-go-package: github.com/cloudentity/acp/internal/handler/developer
  UpdateGatewayRequest:
    type: object
    properties:
      description:
        description: description
        type: string
        x-go-name: Description
      name:
        description: gateway name
        type: string
        x-go-name: Name
        example: Cloudentity Pyron
    x-go-package: github.com/cloudentity/acp/internal/handler/admin
  ValidateResponse_Recovery:
    type: object
    properties:
      id:
        type: string
        x-go-name: Id
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/cloudentity/authorization-engine/api
  ValidateResponse_ValidatorFailure:
    type: object
    properties:
      details:
        type: string
        x-go-name: Details
      message:
        type: string
        x-go-name: Message
      validator:
        type: string
        x-go-name: Validator
    x-go-package: github.com/cloudentity/authorization-engine/api
  ValidatorConfig:
    type: object
    title: validator settings.
    properties:
      conf:
        description: validator config
        type: object
        additionalProperties:
          type: object
        x-go-name: Conf
      name:
        description: validator name
        type: string
        x-go-name: Name
        example: identity-context
      recovery:
        description: validator recovery config
        type: array
        items:
          $ref: '#/definitions/RecoveryConfig'
        x-go-name: Recovery
    x-go-package: github.com/cloudentity/acp/internal/domain
  Values:
    description: |-
      It is typically used for query parameters and form values.
      Unlike in the http.Header map, the keys in a Values map
      are case-sensitive.
    type: object
    title: Values maps a string key to a list of values.
    additionalProperties:
      type: array
      items:
        type: string
    x-go-package: net/url
  emptyResponse:
    type: object
    x-go-name: EmptyResponse
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  genericError:
    description: Error response
    type: object
    required:
    - error
    properties:
      error:
        type: string
        x-go-name: Name
        example: The requested resource could not be found
      error_code:
        description: Code represents the error status code (404, 403, 401, ...).
        type: integer
        format: int64
        x-go-name: Code
        example: 404
      error_hint:
        type: string
        x-go-name: Hint
        example: Object with ID 12345 does not exist
    x-go-name: GenericError
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  tokenResponse:
    type: object
    properties:
      access_token:
        type: string
        x-go-name: AccessToken
      expires_in:
        type: integer
        format: int64
        x-go-name: ExpiresIn
      refresh_token:
        type: string
        x-go-name: RefreshToken
      scope:
        type: string
        x-go-name: Scope
      token_type:
        type: string
        x-go-name: TokenType
    x-go-name: TokenResponse
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  userinfoResponse:
    type: object
    properties:
      birthdate:
        description: End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004]
          YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted.
          To represent only the year, YYYY format is allowed. Note that depending
          on the underlying platform's date related function, providing just year
          can result in varying month and day, so the implementers need to take this
          factor into account to correctly process the dates.
        type: string
        x-go-name: Birthdate
      email:
        description: End-User's preferred e-mail address. Its value MUST conform to
          the RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon this
          value being unique, as discussed in Section 5.7.
        type: string
        x-go-name: Email
      email_verified:
        description: True if the End-User's e-mail address has been verified; otherwise
          false. When this Claim Value is true, this means that the OP took affirmative
          steps to ensure that this e-mail address was controlled by the End-User
          at the time the verification was performed. The means by which an e-mail
          address is verified is context-specific, and dependent upon the trust framework
          or contractual agreements within which the parties are operating.
        type: boolean
        x-go-name: EmailVerified
      family_name:
        description: Surname(s) or last name(s) of the End-User. Note that in some
          cultures, people can have multiple family names or no family name; all can
          be present, with the names being separated by space characters.
        type: string
        x-go-name: FamilyName
      gender:
        description: End-User's gender. Values defined by this specification are female
          and male. Other values MAY be used when neither of the defined values are
          applicable.
        type: string
        x-go-name: Gender
      given_name:
        description: Given name(s) or first name(s) of the End-User. Note that in
          some cultures, people can have multiple given names; all can be present,
          with the names being separated by space characters.
        type: string
        x-go-name: GivenName
      locale:
        description: End-User's locale, represented as a BCP47 [RFC5646] language
          tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in
          lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase,
          separated by a dash. For example, en-US or fr-CA. As a compatibility note,
          some implementations have used an underscore as the separator rather than
          a dash, for example, en_US; Relying Parties MAY choose to accept this locale
          syntax as well.
        type: string
        x-go-name: Locale
      middle_name:
        description: Middle name(s) of the End-User. Note that in some cultures, people
          can have multiple middle names; all can be present, with the names being
          separated by space characters. Also note that in some cultures, middle names
          are not used.
        type: string
        x-go-name: MiddleName
      name:
        description: End-User's full name in displayable form including all name parts,
          possibly including titles and suffixes, ordered according to the End-User's
          locale and preferences.
        type: string
        x-go-name: Name
      nickname:
        description: Casual name of the End-User that may or may not be the same as
          the given_name. For instance, a nickname value of Mike might be returned
          alongside a given_name value of Michael.
        type: string
        x-go-name: Nickname
      phone_number:
        description: End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED
          as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687
          2400. If the phone number contains an extension, it is RECOMMENDED that
          the extension be represented using the RFC 3966 [RFC3966] extension syntax,
          for example, +1 (604) 555-1234;ext=5678.
        type: string
        x-go-name: PhoneNumber
      phone_number_verified:
        description: True if the End-User's phone number has been verified; otherwise
          false. When this Claim Value is true, this means that the OP took affirmative
          steps to ensure that this phone number was controlled by the End-User at
          the time the verification was performed. The means by which a phone number
          is verified is context-specific, and dependent upon the trust framework
          or contractual agreements within which the parties are operating. When true,
          the phone_number Claim MUST be in E.164 format and any extensions MUST be
          represented in RFC 3966 format.
        type: boolean
        x-go-name: PhoneNumberVerified
      picture:
        description: URL of the End-User's profile picture. This URL MUST refer to
          an image file (for example, a PNG, JPEG, or GIF image file), rather than
          to a Web page containing an image. Note that this URL SHOULD specifically
          reference a profile photo of the End-User suitable for displaying when describing
          the End-User, rather than an arbitrary photo taken by the End-User.
        type: string
        x-go-name: Picture
      preferred_username:
        description: Non-unique shorthand name by which the End-User wishes to be
          referred to at the RP, such as janedoe or j.doe. This value MAY be any valid
          JSON string including special characters such as @, /, or whitespace.
        type: string
        x-go-name: PreferredUsername
      profile:
        description: URL of the End-User's profile page. The contents of this Web
          page SHOULD be about the End-User.
        type: string
        x-go-name: Profile
      sub:
        description: Subject - Identifier for the End-User at the IssuerURL.
        type: string
        x-go-name: Subject
      updated_at:
        description: Time the End-User's information was last updated. Its value is
          a JSON number representing the number of seconds from 1970-01-01T0:0:0Z
          as measured in UTC until the date/time.
        type: integer
        format: int64
        x-go-name: UpdatedAt
      website:
        description: URL of the End-User's Web page or blog. This Web page SHOULD
          contain information published by the End-User or an organization that the
          End-User is affiliated with.
        type: string
        x-go-name: Website
      zoneinfo:
        description: String from zoneinfo [zoneinfo] time zone database representing
          the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.
        type: string
        x-go-name: Zoneinfo
    x-go-name: UserinfoResponse
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
  wellKnown:
    description: |-
      WellKnown represents important OpenID Connect discovery metadata.

      It includes links to several endpoints (e.g. /oauth2/token) and exposes information on supported signature algorithms
      among others.
    type: object
    title: WellKnown response
    required:
    - issuer
    - authorization_endpoint
    - token_endpoint
    - jwks_uri
    - subject_types_supported
    - response_types_supported
    - id_token_signing_alg_values_supported
    properties:
      authorization_endpoint:
        description: URL of the OP's OAuth 2.0 Authorization Endpoint.
        type: string
        x-go-name: AuthURL
        example: https://example.com/oauth2/auth
      backchannel_logout_session_supported:
        description: |-
          Boolean value specifying whether the OP can pass a sid (session ID) Claim in the Logout Token to identify the RP
          session with the OP. If supported, the sid Claim is also included in ID Tokens issued by the OP
        type: boolean
        x-go-name: BackChannelLogoutSessionSupported
      backchannel_logout_supported:
        description: Boolean value specifying whether the OP supports back-channel
          logout, with true indicating support.
        type: boolean
        x-go-name: BackChannelLogoutSupported
      claims_parameter_supported:
        description: Boolean value specifying whether the OP supports use of the claims
          parameter, with true indicating support.
        type: boolean
        x-go-name: ClaimsParameterSupported
      claims_supported:
        description: |-
          JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply
          values for. Note that for privacy or other reasons, this might not be an exhaustive list.
        type: array
        items:
          type: string
        x-go-name: ClaimsSupported
      code_challenge_methods_supported:
        description: List of supported Proof Key for Code Exchange (PKCE) code challenge
          methods
        type: array
        items:
          type: string
        x-go-name: CodeChallengeMethodsSupported
      frontchannel_logout_session_supported:
        description: |-
          Boolean value specifying whether the OP can pass iss (issuer) and sid (session ID) query parameters to identify
          the RP session with the OP when the frontchannel_logout_uri is used. If supported, the sid Claim is also
          included in ID Tokens issued by the OP.
        type: boolean
        x-go-name: FrontChannelLogoutSessionSupported
      frontchannel_logout_supported:
        description: Boolean value specifying whether the OP supports HTTP-based logout,
          with true indicating support.
        type: boolean
        x-go-name: FrontChannelLogoutSupported
      grant_types_supported:
        description: JSON array containing a list of the OAuth 2.0 Grant Type values
          that this OP supports.
        type: array
        items:
          type: string
        x-go-name: GrantTypesSupported
      id_token_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token
          to encode the Claims in a JWT.
        type: array
        items:
          type: string
        x-go-name: IDTokenSigningAlgValuesSupported
      introspection_endpoint:
        description: OAuth 2.0 Introspection Endpoint.
        type: string
        x-go-name: IntrospectionEndpoint
      issuer:
        description: |-
          URL using the https scheme with no query or fragment component that the OP asserts as its IssuerURL Identifier.
          If IssuerURL discovery is supported , this value MUST be identical to the issuer value returned
          by WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this IssuerURL.
        type: string
        x-go-name: Issuer
        example: https://example.com/
      jwks_uri:
        description: |-
          URL of the OP's JSON Web Key Set [JWK] document. This contains the signing key(s) the RP uses to validate
          signatures from the OP. The JWK Set MAY also contain the Server's encryption key(s), which are used by RPs
          to encrypt requests to the Server. When both signing and encryption keys are made available, a use (Key Use)
          parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage.
          Although some algorithms allow the same key to be used for both signatures and encryption, doing so is
          NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of
          keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.
        type: string
        x-go-name: JWKsURI
        example: https://example.com/.well-known/jwks.json
      registration_endpoint:
        description: URL of the authorization server's OAuth 2.0 dynamic client registration
          endpoint.
        type: string
        x-go-name: RegistrationEndpoint
      request_object_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects, which are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core].
          These algorithms are used both when the Request Object is passed by value (using the request parameter) and when it is passed by reference (using the request_uri parameter).
          Servers SHOULD support none and RS256.
        type: array
        items:
          type: string
        x-go-name: RequestObjectSigningAlgValuesSupported
      request_parameter_supported:
        description: Boolean value specifying whether the OP supports use of the request
          parameter, with true indicating support.
        type: boolean
        x-go-name: RequestParameterSupported
      request_uri_parameter_supported:
        description: Boolean value specifying whether the OP supports use of the request_uri
          parameter, with true indicating support.
        type: boolean
        x-go-name: RequestURIParameterSupported
      require_request_uri_registration:
        description: |-
          Boolean value specifying whether the OP requires any request_uri values used to be pre-registered
          using the request_uris registration parameter.
        type: boolean
        x-go-name: RequireRequestURIRegistration
      response_modes_supported:
        description: JSON array containing a list of the OAuth 2.0 response_mode values
          that this OP supports.
        type: array
        items:
          type: string
        x-go-name: ResponseModesSupported
      response_types_supported:
        description: |-
          JSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID
          Providers MUST support the code, id_token, and the token id_token Response Type values.
        type: array
        items:
          type: string
        x-go-name: ResponseTypes
      revocation_endpoint:
        description: URL of the authorization server's OAuth 2.0 revocation endpoint.
        type: string
        x-go-name: RevocationEndpoint
      scopes_supported:
        description: |-
          SON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST
          support the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used
        type: array
        items:
          type: string
        x-go-name: ScopesSupported
      subject_types_supported:
        description: |-
          JSON array containing a list of the Subject Identifier types that this OP supports. Valid types include
          pairwise and public.
        type: array
        items:
          type: string
        x-go-name: SubjectTypes
        example: public, pairwise
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate bound access tokens
        type: boolean
        x-go-name: TLSClientCertificateBoundAccessToken
      token_endpoint:
        description: URL of the OP's OAuth 2.0 Token Endpoint
        type: string
        x-go-name: TokenURL
        example: https://example.com/oauth2/token
      token_endpoint_auth_methods_supported:
        description: |-
          JSON array containing a list of Client Authentication methods supported by this Token Endpoint. The options are
          client_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 9 of OpenID Connect Core 1.0
        type: array
        items:
          type: string
        x-go-name: TokenEndpointAuthMethodsSupported
      token_endpoint_auth_signing_alg_values_supported:
        description: |-
          JSON array containing a list of the JWS signing algorithms ("alg" values) supported by the token endpoint for the
          signature on the JWT [JWT] used to authenticate the client at the token endpoint for the "private_key_jwt" and "client_secret_jwt" authentication methods.
          This metadata entry MUST be present if either of these authentication methods are specified in the "token_endpoint_auth_methods_supported" entry.
          No default algorithms are implied if this entry is omitted.  Servers SHOULD support "RS256".  The value "none" MUST NOT be used.
        type: array
        items:
          type: string
        x-go-name: TokenEndpointAuthSigningAlgValuesSupported
      userinfo_endpoint:
        description: URL of the OP's UserInfo Endpoint.
        type: string
        x-go-name: UserinfoEndpoint
      userinfo_signing_alg_values_supported:
        description: JSON array containing a list of the JWS [JWS] signing algorithms
          (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims
          in a JWT [JWT].
        type: array
        items:
          type: string
        x-go-name: UserinfoSigningAlgValuesSupported
    x-go-name: WellKnown
    x-go-package: github.com/cloudentity/acp/internal/handler/oauth2
securityDefinitions:
  admin:
    type: oauth2
    flow: application
    authorizationUrl: /default/admin/oauth2/authorize
    tokenUrl: /default/admin/oauth2/token
  default:
    type: oauth2
    flow: accessCode
    authorizationUrl: /default/default/oauth2/authorize
    tokenUrl: /default/default/oauth2/token
    scopes:
      dcr_register: dcr_register
      introspect_openbanking_tokens: introspect_openbanking_tokens
      introspect_tokens: introspect_tokens
      list_clients_with_access: list_clients_with_access
      manage_consents: manage_consents
      revoke_client_access: revoke_client_access
      revoke_tokens: revoke_tokens
      view_consents: view_consents
  defaultcc:
    type: oauth2
    flow: application
    authorizationUrl: /default/default/oauth2/authorize
    tokenUrl: /default/default/oauth2/token
    scopes:
      accounts: accounts
  developer:
    type: oauth2
    flow: password
    authorizationUrl: /default/developer/oauth2/authorize
    tokenUrl: /default/developer/oauth2/token
  setup:
    type: oauth2
    flow: application
    authorizationUrl: /system/system/oauth2/authorize
    tokenUrl: /system/system/oauth2/token
  system:
    type: oauth2
    flow: application
    authorizationUrl: /default/system/oauth2/authorize
    tokenUrl: /default/system/oauth2/token
    scopes:
      introspect_tokens: introspect_tokens
      manage_consents: manage_consents
      manage_logins: manage_logins
      manage_openbanking_consents: manage_openbanking_consents
      manage_scope_grants: manage_scope_grants
      push_gateway_requests: push_gateway_requests
      read_gateway_configuration: read_gateway_configuration
      view_clients: view_clients
      view_consents: view_consents
      write_gateway_configuration: write_gateway_configuration

